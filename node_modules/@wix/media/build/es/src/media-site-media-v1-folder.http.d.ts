import { RequestOptionsFactory } from '@wix/sdk-types';
import { BulkDeleteFoldersRequest, BulkDeleteFoldersResponse, BulkRestoreFoldersFromTrashBinRequest, BulkRestoreFoldersFromTrashBinResponse, CreateFolderRequest, CreateFolderResponse, GenerateFolderDownloadUrlRequest, GenerateFolderDownloadUrlResponse, GetFolderRequest, GetFolderResponse, ListDeletedFoldersRequest, ListDeletedFoldersResponse, ListFoldersRequest, ListFoldersResponse, SearchFoldersRequest, SearchFoldersResponse, UpdateFolderRequest, UpdateFolderResponse, CreateFolderResponseNonNullableFields, GetFolderResponseNonNullableFields, ListFoldersResponseNonNullableFields, SearchFoldersResponseNonNullableFields, UpdateFolderResponseNonNullableFields, GenerateFolderDownloadUrlResponseNonNullableFields, ListDeletedFoldersResponseNonNullableFields } from './media-site-media-v1-folder.types';
/**
 * Creates a new folder in the Media Manager.
 *
 * Use the `parentFolderId` parameter to specify in which existing folder you want the new folder to be created.
 * If no folder is specified, the new folder is created in the `media-root` folder.
 */
export declare function createFolder(payload: CreateFolderRequest): RequestOptionsFactory<CreateFolderResponse & CreateFolderResponseNonNullableFields>;
/** Gets information from a specific folder in the Media Manager. */
export declare function getFolder(payload: GetFolderRequest): RequestOptionsFactory<GetFolderResponse & GetFolderResponseNonNullableFields>;
/**
 * Retrieves a list of folders in the Media Manager.
 *
 * To retrieve a list of folders within a specific folder in the Media Manager, pass the specific folder's ID in the `parentFolderId` parameter. If no folder is specified, the endpoint retrieves a list of folders within the root folder of the Media Manager.
 */
export declare function listFolders(payload: ListFoldersRequest): RequestOptionsFactory<ListFoldersResponse & ListFoldersResponseNonNullableFields>;
/**
 * Searches the Media Manager and returns a list of folders that match the terms specified in the parameters.
 *
 * If no parameters are specified, the endpoint returns all folders in the `MEDIA_ROOT` folder.
 */
export declare function searchFolders(payload: SearchFoldersRequest): RequestOptionsFactory<SearchFoldersResponse & SearchFoldersResponseNonNullableFields>;
/**
 * Updates a folder.
 *
 * You can use the `parentFolderId` parameter to move a folder from its current parent folder to a different parent folder.
 */
export declare function updateFolder(payload: UpdateFolderRequest): RequestOptionsFactory<UpdateFolderResponse & UpdateFolderResponseNonNullableFields>;
/**
 * Generates a URL for downloading a compressed file containing a specific folder in the Media Manager.
 *
 * The compressed file can contain sub-folders, and up to 1000 files.
 */
export declare function generateFolderDownloadUrl(payload: GenerateFolderDownloadUrlRequest): RequestOptionsFactory<GenerateFolderDownloadUrlResponse & GenerateFolderDownloadUrlResponseNonNullableFields>;
/**
 * Temporarily deletes the specified folders from the Media Manager.
 *
 * The deleted folders are moved to the Media Manager's `trash-root` folder (trash bin) unless permanently deleted. To permanently delete folders, pass the `permanent` parameter with the value `true`. Permanently deleting folders isn't reversible, so make sure that the files in these folders aren't being used in a site or in any other way as the files will no longer be accessible.
 *
 * >**Notes:**
 * > - When a folder is deleted, the files in that folder are deleted.
 * > - The specified folders can be from different parent folders.
 * > - Moving multiple folders at once is an asynchronous action, and may take time for the changes to appear in the Media Manager.
 * > - Attempting to delete folders that are already in the trash bin doesn't result in an error.
 * > - If your site contains files from a deleted media folder, the files still appear on your site as the deleted folder is still in the Media Manager (in the trash bin).
 * > - You can use the [Bulk Restore Folders From Trash Bin](#bulkrestorefoldersfromtrashbin) endpoint to restore folders from the Media Manager's trash bin.
 */
export declare function bulkDeleteFolders(payload: BulkDeleteFoldersRequest): RequestOptionsFactory<BulkDeleteFoldersResponse>;
/** Restores the specified folders from the Media Manager's trash bin, and moves them to their original locations in the Media Manager. */
export declare function bulkRestoreFoldersFromTrashBin(payload: BulkRestoreFoldersFromTrashBinRequest): RequestOptionsFactory<BulkRestoreFoldersFromTrashBinResponse>;
/** Retrieves a list of deleted folders from the trash bin. */
export declare function listDeletedFolders(payload: ListDeletedFoldersRequest): RequestOptionsFactory<ListDeletedFoldersResponse & ListDeletedFoldersResponseNonNullableFields>;
