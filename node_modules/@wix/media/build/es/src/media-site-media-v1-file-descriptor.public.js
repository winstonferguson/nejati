import { generateFilesDownloadUrl as universalGenerateFilesDownloadUrl, generateFileDownloadUrl as universalGenerateFileDownloadUrl, getFileDescriptor as universalGetFileDescriptor, getFileDescriptors as universalGetFileDescriptors, updateFileDescriptor as universalUpdateFileDescriptor, generateFileUploadUrl as universalGenerateFileUploadUrl, generateFileResumableUploadUrl as universalGenerateFileResumableUploadUrl, importFile as universalImportFile, bulkImportFiles as universalBulkImportFiles, listFiles as universalListFiles, searchFiles as universalSearchFiles, generateVideoStreamingUrl as universalGenerateVideoStreamingUrl, bulkDeleteFiles as universalBulkDeleteFiles, bulkRestoreFilesFromTrashBin as universalBulkRestoreFilesFromTrashBin, listDeletedFiles as universalListDeletedFiles, } from './media-site-media-v1-file-descriptor.universal';
export const __metadata = { PACKAGE_NAME: '@wix/media' };
export function generateFilesDownloadUrl(httpClient) {
    return (fileIds) => universalGenerateFilesDownloadUrl(fileIds, 
    // @ts-ignore
    { httpClient });
}
export function generateFileDownloadUrl(httpClient) {
    return (fileId, options) => universalGenerateFileDownloadUrl(fileId, options, 
    // @ts-ignore
    { httpClient });
}
export function getFileDescriptor(httpClient) {
    return (fileId) => universalGetFileDescriptor(fileId, 
    // @ts-ignore
    { httpClient });
}
export function getFileDescriptors(httpClient) {
    return (fileIds) => universalGetFileDescriptors(fileIds, 
    // @ts-ignore
    { httpClient });
}
export function updateFileDescriptor(httpClient) {
    return (_id, file) => universalUpdateFileDescriptor(_id, file, 
    // @ts-ignore
    { httpClient });
}
export function generateFileUploadUrl(httpClient) {
    return (mimeType, options) => universalGenerateFileUploadUrl(mimeType, options, 
    // @ts-ignore
    { httpClient });
}
export function generateFileResumableUploadUrl(httpClient) {
    return (mimeType, options) => universalGenerateFileResumableUploadUrl(mimeType, options, 
    // @ts-ignore
    { httpClient });
}
export function importFile(httpClient) {
    return (url, options) => universalImportFile(url, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkImportFiles(httpClient) {
    return (importFileRequests) => universalBulkImportFiles(importFileRequests, 
    // @ts-ignore
    { httpClient });
}
export function listFiles(httpClient) {
    return (options) => universalListFiles(options, 
    // @ts-ignore
    { httpClient });
}
export function searchFiles(httpClient) {
    return (options) => universalSearchFiles(options, 
    // @ts-ignore
    { httpClient });
}
export function generateVideoStreamingUrl(httpClient) {
    return (fileId, options) => universalGenerateVideoStreamingUrl(fileId, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkDeleteFiles(httpClient) {
    return (fileIds, options) => universalBulkDeleteFiles(fileIds, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkRestoreFilesFromTrashBin(httpClient) {
    return (fileIds) => universalBulkRestoreFilesFromTrashBin(fileIds, 
    // @ts-ignore
    { httpClient });
}
export function listDeletedFiles(httpClient) {
    return (options) => universalListDeletedFiles(options, 
    // @ts-ignore
    { httpClient });
}
export { MediaType, OperationStatus, State, UploadProtocol, SortOrder, RootFolder, StreamFormat, } from './media-site-media-v1-file-descriptor.universal';
//# sourceMappingURL=media-site-media-v1-file-descriptor.public.js.map