"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.listDeletedFolders = exports.bulkRestoreFoldersFromTrashBin = exports.bulkDeleteFolders = exports.generateFolderDownloadUrl = exports.updateFolder = exports.searchFolders = exports.listFolders = exports.getFolder = exports.createFolder = void 0;
const ambassadorWixMediaSiteMediaV1Folder = __importStar(require("./media-site-media-v1-folder.http"));
function createFolder() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1Folder.createFolder(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/folders',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.createFolder = createFolder;
function getFolder() {
    const payload = { folderId: ':folderId' };
    const getRequestOptions = ambassadorWixMediaSiteMediaV1Folder.getFolder(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/folders/{folderId}',
        pathParams: { folderId: 'folderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getFolder = getFolder;
function listFolders() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1Folder.listFolders(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/folders',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.listFolders = listFolders;
function searchFolders() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1Folder.searchFolders(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/folders/search',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.searchFolders = searchFolders;
function updateFolder() {
    const payload = { folder: { id: ':folderId' } };
    const getRequestOptions = ambassadorWixMediaSiteMediaV1Folder.updateFolder(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PATCH',
        path: '/v1/folders/{folder.id}',
        pathParams: { folderId: 'folderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.updateFolder = updateFolder;
function generateFolderDownloadUrl() {
    const payload = { folderId: ':folderId' };
    const getRequestOptions = ambassadorWixMediaSiteMediaV1Folder.generateFolderDownloadUrl(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/folders/{folderId}/generate-download-url',
        pathParams: { folderId: 'folderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.generateFolderDownloadUrl = generateFolderDownloadUrl;
function bulkDeleteFolders() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1Folder.bulkDeleteFolders(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/bulk/folders/delete',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.bulkDeleteFolders = bulkDeleteFolders;
function bulkRestoreFoldersFromTrashBin() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1Folder.bulkRestoreFoldersFromTrashBin(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/bulk/trash-bin/folders/restore',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.bulkRestoreFoldersFromTrashBin = bulkRestoreFoldersFromTrashBin;
function listDeletedFolders() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1Folder.listDeletedFolders(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/trash-bin/folders',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.listDeletedFolders = listDeletedFolders;
//# sourceMappingURL=media-site-media-v1-folder.meta.js.map