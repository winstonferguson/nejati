"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamFormat = exports.RootFolder = exports.SortOrder = exports.UploadProtocol = exports.State = exports.OperationStatus = exports.MediaType = exports.listDeletedFiles = exports.bulkRestoreFilesFromTrashBin = exports.bulkDeleteFiles = exports.generateVideoStreamingUrl = exports.searchFiles = exports.listFiles = exports.bulkImportFiles = exports.importFile = exports.generateFileResumableUploadUrl = exports.generateFileUploadUrl = exports.updateFileDescriptor = exports.getFileDescriptors = exports.getFileDescriptor = exports.generateFileDownloadUrl = exports.generateFilesDownloadUrl = exports.__metadata = void 0;
const media_site_media_v1_file_descriptor_universal_1 = require("./media-site-media-v1-file-descriptor.universal");
exports.__metadata = { PACKAGE_NAME: '@wix/media' };
function generateFilesDownloadUrl(httpClient) {
    return (fileIds) => (0, media_site_media_v1_file_descriptor_universal_1.generateFilesDownloadUrl)(fileIds, 
    // @ts-ignore
    { httpClient });
}
exports.generateFilesDownloadUrl = generateFilesDownloadUrl;
function generateFileDownloadUrl(httpClient) {
    return (fileId, options) => (0, media_site_media_v1_file_descriptor_universal_1.generateFileDownloadUrl)(fileId, options, 
    // @ts-ignore
    { httpClient });
}
exports.generateFileDownloadUrl = generateFileDownloadUrl;
function getFileDescriptor(httpClient) {
    return (fileId) => (0, media_site_media_v1_file_descriptor_universal_1.getFileDescriptor)(fileId, 
    // @ts-ignore
    { httpClient });
}
exports.getFileDescriptor = getFileDescriptor;
function getFileDescriptors(httpClient) {
    return (fileIds) => (0, media_site_media_v1_file_descriptor_universal_1.getFileDescriptors)(fileIds, 
    // @ts-ignore
    { httpClient });
}
exports.getFileDescriptors = getFileDescriptors;
function updateFileDescriptor(httpClient) {
    return (_id, file) => (0, media_site_media_v1_file_descriptor_universal_1.updateFileDescriptor)(_id, file, 
    // @ts-ignore
    { httpClient });
}
exports.updateFileDescriptor = updateFileDescriptor;
function generateFileUploadUrl(httpClient) {
    return (mimeType, options) => (0, media_site_media_v1_file_descriptor_universal_1.generateFileUploadUrl)(mimeType, options, 
    // @ts-ignore
    { httpClient });
}
exports.generateFileUploadUrl = generateFileUploadUrl;
function generateFileResumableUploadUrl(httpClient) {
    return (mimeType, options) => (0, media_site_media_v1_file_descriptor_universal_1.generateFileResumableUploadUrl)(mimeType, options, 
    // @ts-ignore
    { httpClient });
}
exports.generateFileResumableUploadUrl = generateFileResumableUploadUrl;
function importFile(httpClient) {
    return (url, options) => (0, media_site_media_v1_file_descriptor_universal_1.importFile)(url, options, 
    // @ts-ignore
    { httpClient });
}
exports.importFile = importFile;
function bulkImportFiles(httpClient) {
    return (importFileRequests) => (0, media_site_media_v1_file_descriptor_universal_1.bulkImportFiles)(importFileRequests, 
    // @ts-ignore
    { httpClient });
}
exports.bulkImportFiles = bulkImportFiles;
function listFiles(httpClient) {
    return (options) => (0, media_site_media_v1_file_descriptor_universal_1.listFiles)(options, 
    // @ts-ignore
    { httpClient });
}
exports.listFiles = listFiles;
function searchFiles(httpClient) {
    return (options) => (0, media_site_media_v1_file_descriptor_universal_1.searchFiles)(options, 
    // @ts-ignore
    { httpClient });
}
exports.searchFiles = searchFiles;
function generateVideoStreamingUrl(httpClient) {
    return (fileId, options) => (0, media_site_media_v1_file_descriptor_universal_1.generateVideoStreamingUrl)(fileId, options, 
    // @ts-ignore
    { httpClient });
}
exports.generateVideoStreamingUrl = generateVideoStreamingUrl;
function bulkDeleteFiles(httpClient) {
    return (fileIds, options) => (0, media_site_media_v1_file_descriptor_universal_1.bulkDeleteFiles)(fileIds, options, 
    // @ts-ignore
    { httpClient });
}
exports.bulkDeleteFiles = bulkDeleteFiles;
function bulkRestoreFilesFromTrashBin(httpClient) {
    return (fileIds) => (0, media_site_media_v1_file_descriptor_universal_1.bulkRestoreFilesFromTrashBin)(fileIds, 
    // @ts-ignore
    { httpClient });
}
exports.bulkRestoreFilesFromTrashBin = bulkRestoreFilesFromTrashBin;
function listDeletedFiles(httpClient) {
    return (options) => (0, media_site_media_v1_file_descriptor_universal_1.listDeletedFiles)(options, 
    // @ts-ignore
    { httpClient });
}
exports.listDeletedFiles = listDeletedFiles;
var media_site_media_v1_file_descriptor_universal_2 = require("./media-site-media-v1-file-descriptor.universal");
Object.defineProperty(exports, "MediaType", { enumerable: true, get: function () { return media_site_media_v1_file_descriptor_universal_2.MediaType; } });
Object.defineProperty(exports, "OperationStatus", { enumerable: true, get: function () { return media_site_media_v1_file_descriptor_universal_2.OperationStatus; } });
Object.defineProperty(exports, "State", { enumerable: true, get: function () { return media_site_media_v1_file_descriptor_universal_2.State; } });
Object.defineProperty(exports, "UploadProtocol", { enumerable: true, get: function () { return media_site_media_v1_file_descriptor_universal_2.UploadProtocol; } });
Object.defineProperty(exports, "SortOrder", { enumerable: true, get: function () { return media_site_media_v1_file_descriptor_universal_2.SortOrder; } });
Object.defineProperty(exports, "RootFolder", { enumerable: true, get: function () { return media_site_media_v1_file_descriptor_universal_2.RootFolder; } });
Object.defineProperty(exports, "StreamFormat", { enumerable: true, get: function () { return media_site_media_v1_file_descriptor_universal_2.StreamFormat; } });
//# sourceMappingURL=media-site-media-v1-file-descriptor.public.js.map