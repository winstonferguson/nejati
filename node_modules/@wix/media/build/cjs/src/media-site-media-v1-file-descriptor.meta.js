"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.listDeletedFiles = exports.bulkRestoreFilesFromTrashBin = exports.bulkDeleteFiles = exports.generateVideoStreamingUrl = exports.searchFiles = exports.listFiles = exports.bulkImportFiles = exports.importFile = exports.generateFileResumableUploadUrl = exports.generateFileUploadUrl = exports.updateFileDescriptor = exports.getFileDescriptors = exports.getFileDescriptor = exports.generateFileDownloadUrl = exports.generateFilesDownloadUrl = void 0;
const ambassadorWixMediaSiteMediaV1FileDescriptor = __importStar(require("./media-site-media-v1-file-descriptor.http"));
function generateFilesDownloadUrl() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.generateFilesDownloadUrl(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/files/generate-download-url',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.generateFilesDownloadUrl = generateFilesDownloadUrl;
function generateFileDownloadUrl() {
    const payload = { fileId: ':fileId' };
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.generateFileDownloadUrl(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/files/{fileId}/generate-download-url',
        pathParams: { fileId: 'fileId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.generateFileDownloadUrl = generateFileDownloadUrl;
function getFileDescriptor() {
    const payload = { fileId: ':fileId' };
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.getFileDescriptor(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/files/{fileId}',
        pathParams: { fileId: 'fileId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getFileDescriptor = getFileDescriptor;
function getFileDescriptors() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.getFileDescriptors(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/files/get-files',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getFileDescriptors = getFileDescriptors;
function updateFileDescriptor() {
    const payload = { file: { id: ':fileId' } };
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.updateFileDescriptor(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PATCH',
        path: '/v1/files/{file.id}/update',
        pathParams: { fileId: 'fileId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.updateFileDescriptor = updateFileDescriptor;
function generateFileUploadUrl() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.generateFileUploadUrl(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/files/generate-upload-url',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.generateFileUploadUrl = generateFileUploadUrl;
function generateFileResumableUploadUrl() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.generateFileResumableUploadUrl(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/files/generate-resumable-upload-url',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.generateFileResumableUploadUrl = generateFileResumableUploadUrl;
function importFile() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.importFile(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/files/import',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.importFile = importFile;
function bulkImportFiles() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.bulkImportFiles(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/bulk/files/import',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.bulkImportFiles = bulkImportFiles;
function listFiles() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.listFiles(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/files',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.listFiles = listFiles;
function searchFiles() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.searchFiles(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/files/search',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.searchFiles = searchFiles;
function generateVideoStreamingUrl() {
    const payload = { fileId: ':fileId' };
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.generateVideoStreamingUrl(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/files/video/{fileId}/generate-stream-url',
        pathParams: { fileId: 'fileId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.generateVideoStreamingUrl = generateVideoStreamingUrl;
function bulkDeleteFiles() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.bulkDeleteFiles(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/bulk/files/delete',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.bulkDeleteFiles = bulkDeleteFiles;
function bulkRestoreFilesFromTrashBin() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.bulkRestoreFilesFromTrashBin(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/bulk/trash-bin/files/restore',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.bulkRestoreFilesFromTrashBin = bulkRestoreFilesFromTrashBin;
function listDeletedFiles() {
    const payload = {};
    const getRequestOptions = ambassadorWixMediaSiteMediaV1FileDescriptor.listDeletedFiles(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/trash-bin/files',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.listDeletedFiles = listDeletedFiles;
//# sourceMappingURL=media-site-media-v1-file-descriptor.meta.js.map