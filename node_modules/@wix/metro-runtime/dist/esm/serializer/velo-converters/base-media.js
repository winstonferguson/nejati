import { ConverterType } from '../domain';
import { alignIfLegacy, decodeText, encodeText, WIX_PROTOCOL, } from './converters-utils';
export function createMediaConverter(fieldType, commonType) {
    var _a;
    return _a = {
            types: [commonType]
        },
        _a[ConverterType.FROM_JSON] = {
            transform: function (val) {
                if (!val) {
                    return;
                }
                var fileName = '';
                if (val === null || val === void 0 ? void 0 : val.filename) {
                    fileName = "/".concat(encodeText(val.filename));
                }
                return val.id ? "wix:".concat(fieldType, "://v1/").concat(val.id).concat(fileName) : val.url;
            },
        },
        _a[ConverterType.TO_JSON] = {
            transform: function (val) {
                if (!val) {
                    return;
                }
                var alignedUrl = alignIfLegacy(val, fieldType);
                var _a = new URL(alignedUrl), protocol = _a.protocol, pathname = _a.pathname;
                var _b = pathname
                    .replace("".concat(fieldType, "://v1/"), '')
                    .split('/'), id = _b[0], filename = _b[1];
                if (protocol === WIX_PROTOCOL) {
                    if (!filename) {
                        return { id: id };
                    }
                    return {
                        id: id,
                        filename: decodeText(filename),
                    };
                }
                return { url: val };
            },
        },
        _a;
}
//# sourceMappingURL=base-media.js.map