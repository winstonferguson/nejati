var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var _a;
import querystring from 'querystring';
import { ConverterType } from '../domain';
import { alignIfLegacy, encodeText, decodeText, URL_HASH_PREFIX, WIX_PROTOCOL, } from './converters-utils';
var WIX_IMAGE = 'image';
export var image = (_a = {
        types: ['wix.common.Image']
    },
    _a[ConverterType.FROM_JSON] = {
        /**
         * currently wix.common.Image represents the deserialized object, so we're good.
         * in case it contains some serializable stuff (e.g. int64), we'll have to make some
         * modifications in the type.
         */
        transform: function (val) {
            if (!val) {
                return;
            }
            var fileNameOrAltText = '';
            if (val.filename || val.altText) {
                fileNameOrAltText = "/".concat(encodeText(val.filename || val.altText));
            }
            return val.id
                ? "wix:image://v1/".concat(val.id).concat(fileNameOrAltText).concat(URL_HASH_PREFIX, "originWidth=").concat(val.width, "&originHeight=").concat(val.height)
                : val.url;
        },
    },
    _a[ConverterType.TO_JSON] = {
        transform: function (val) {
            if (!val) {
                return;
            }
            var alignedImage = alignIfLegacy(val, WIX_IMAGE);
            var _a = new URL(alignedImage), protocol = _a.protocol, hash = _a.hash, pathname = _a.pathname;
            var _b = querystring.parse(hash.replace(URL_HASH_PREFIX, '')), height = _b.originHeight, width = _b.originWidth;
            var _c = pathname
                .replace("".concat(WIX_IMAGE, "://v1/"), '')
                .split('/'), id = _c[0], filenameOrAltText = _c[1];
            var decodedFilenameOrAltText = decodeText(filenameOrAltText);
            if (protocol === WIX_PROTOCOL) {
                var res = { id: id, height: Number(height), width: Number(width) };
                if (!decodedFilenameOrAltText) {
                    return res;
                }
                return __assign(__assign({}, res), { altText: decodedFilenameOrAltText, filename: decodedFilenameOrAltText });
            }
            return { url: val };
        },
    },
    _a);
//# sourceMappingURL=image.js.map