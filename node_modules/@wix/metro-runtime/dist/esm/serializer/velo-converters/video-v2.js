var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var _a;
import querystring from 'querystring';
import { ConverterType } from '../domain';
import { alignIfLegacy, decodeText, encodeText, URL_HASH_PREFIX, WIX_PROTOCOL, } from './converters-utils';
var WIX_VIDEO = 'video';
export var videoV2 = (_a = {
        types: ['wix.common.VideoV2']
    },
    _a[ConverterType.FROM_JSON] = {
        transform: function (val) {
            var _a;
            if (!val) {
                return;
            }
            var fileName = '';
            if (val === null || val === void 0 ? void 0 : val.filename) {
                fileName = "/".concat(encodeText(val.filename));
            }
            var posterData = '';
            if ((_a = val.posters) === null || _a === void 0 ? void 0 : _a.length) {
                var _b = val.posters, poster1 = _b[0], poster2 = _b[1];
                var poster = poster2 || poster1;
                var posterId = poster.id || '';
                if (!posterId && poster.url) {
                    var idx = poster.url.lastIndexOf('/');
                    if (idx !== -1) {
                        posterId = poster.url.substring(idx + 1);
                    }
                }
                if (posterId) {
                    posterData = "".concat(URL_HASH_PREFIX, "posterUri=").concat(posterId, "&posterWidth=").concat(poster.width, "&posterHeight=").concat(poster.height);
                }
            }
            return val.id
                ? "wix:video://v1/".concat(val.id).concat(fileName).concat(posterData)
                : val.url;
        },
    },
    _a[ConverterType.TO_JSON] = {
        transform: function (val) {
            if (!val) {
                return;
            }
            var alignedVideo = alignIfLegacy(val, WIX_VIDEO);
            var _a = new URL(alignedVideo), protocol = _a.protocol, hash = _a.hash, pathname = _a.pathname;
            var _b = querystring.parse(hash.replace(URL_HASH_PREFIX, '')), height = _b.posterHeight, width = _b.posterWidth, posterUri = _b.posterUri;
            var _c = pathname
                .replace("".concat(WIX_VIDEO, "://v1/"), '')
                .split('/'), id = _c[0], fileName = _c[1];
            if (protocol === WIX_PROTOCOL) {
                var res = { id: id };
                if (fileName) {
                    res = __assign(__assign({}, res), { filename: decodeText(fileName) });
                }
                if (!posterUri) {
                    return res;
                }
                return __assign(__assign({}, res), { posters: [
                        {
                            id: posterUri.toString(),
                            height: Number(height),
                            width: Number(width),
                        },
                    ] });
            }
            return { url: val };
        },
    },
    _a);
//# sourceMappingURL=video-v2.js.map