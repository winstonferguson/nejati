import { pick } from 'lodash';
import { extractDomainEventPayload, serializer, RootPath, } from './velo-index';
export { RootPath };
export function toVeloEvent(domainEvent, serializerParams) {
    var veloEvent = { metadata: toMetadata(domainEvent) };
    if (!domainEvent.deletedEvent) {
        var _a = toVeloPayload(domainEvent, serializerParams), key = _a.key, payload = _a.payload;
        veloEvent[key] = payload;
    }
    return veloEvent;
}
function toVeloPayload(domainEvent, serializerParams) {
    var protoPayload = extractDomainEventPayload(domainEvent);
    var payload = serializer(serializerParams).fromJSON(protoPayload);
    var key = domainEvent.actionEvent ? 'data' : 'entity';
    return { key: key, payload: payload };
}
function toMetadata(domainEvent) {
    return pick(domainEvent, 'id', 'entityId', 'eventTime', 'triggeredByAnonymizeRequest');
}
//# sourceMappingURL=velo-events.js.map