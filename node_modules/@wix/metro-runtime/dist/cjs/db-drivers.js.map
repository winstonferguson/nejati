{"version":3,"names":["_utils","require","_converters","_serializer","_domain","_transformationHandler","exports","RootPath","_converters2","_queryTransformation","toPlatformizedQuery","_motionEdmAutogenTransformations","converters","typeToConverterSet","dbDriversConverters","veloConverters","toAmbassadorRequest","rootSchema","depSchemas","fqdnTransformation","entity","asRequestStructure","fromCorvidEntity","transformFqdn","request","schemaSerializer","ConverterType","TO_JSON","toDbDriverEntity","asDbDriverStructure","FROM_JSON","dbDriverEntity","toCorvidEntity","toVeloEntity","opts"],"sources":["../../src/db-drivers.ts"],"sourcesContent":["import { typeToConverterSet } from './serializer/utils';\nimport { dbDriversConverters } from './serializer/db-drivers-converters/converters';\nimport { schemaSerializer } from './serializer/serializer';\nimport { SerializerParams } from './types';\nimport { ConverterType } from './serializer/domain';\nimport { transformFqdn, RootPath } from './transformation-handler';\nimport { veloConverters } from './serializer/velo-converters/converters';\nimport { toPlatformizedQuery } from './query-transformation';\nimport {\n  fromCorvidEntity,\n  toCorvidEntity,\n} from '@wix/motion-edm-autogen-transformations';\n\nconst converters = typeToConverterSet([\n  ...dbDriversConverters,\n  ...veloConverters,\n]);\n\nexport { RootPath, toPlatformizedQuery };\n\nexport function toAmbassadorRequest(\n  { rootSchema, depSchemas, fqdnTransformation }: SerializerParams,\n  entity: any,\n) {\n  const asRequestStructure = fromCorvidEntity(\n    transformFqdn(entity, fqdnTransformation!),\n  );\n\n  const request = schemaSerializer(\n    rootSchema,\n    depSchemas,\n    converters,\n  )(asRequestStructure, ConverterType.TO_JSON);\n\n  return request;\n}\n\nexport function toDbDriverEntity(\n  { rootSchema, depSchemas, fqdnTransformation }: SerializerParams,\n  entity: any,\n) {\n  const asDbDriverStructure = schemaSerializer(\n    rootSchema,\n    depSchemas,\n    converters,\n  )(entity, ConverterType.FROM_JSON);\n\n  const dbDriverEntity = toCorvidEntity(\n    transformFqdn(asDbDriverStructure, fqdnTransformation!),\n  );\n\n  return dbDriverEntity;\n}\n\n/**\n * @deprecated\n */\nexport function toVeloEntity(opts: SerializerParams, entity: any) {\n  return toDbDriverEntity(opts, entity);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AAEA,IAAAG,OAAA,GAAAH,OAAA;AACA,IAAAI,sBAAA,GAAAJ,OAAA;AAAmEK,OAAA,CAAAC,QAAA,GAAAF,sBAAA,CAAAE,QAAA;AACnE,IAAAC,YAAA,GAAAP,OAAA;AACA,IAAAQ,oBAAA,GAAAR,OAAA;AAA6DK,OAAA,CAAAI,mBAAA,GAAAD,oBAAA,CAAAC,mBAAA;AAC7D,IAAAC,gCAAA,GAAAV,OAAA;AAKA,MAAMW,UAAU,GAAG,IAAAC,yBAAkB,EAAC,CACpC,GAAGC,+BAAmB,EACtB,GAAGC,2BAAc,CAClB,CAAC;AAIK,SAASC,mBAAmBA,CACjC;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAqC,CAAC,EAChEC,MAAW,EACX;EACA,MAAMC,kBAAkB,GAAG,IAAAC,iDAAgB,EACzC,IAAAC,oCAAa,EAACH,MAAM,EAAED,kBAAmB,CAC3C,CAAC;EAED,MAAMK,OAAO,GAAG,IAAAC,4BAAgB,EAC9BR,UAAU,EACVC,UAAU,EACVN,UACF,CAAC,CAACS,kBAAkB,EAAEK,qBAAa,CAACC,OAAO,CAAC;EAE5C,OAAOH,OAAO;AAChB;AAEO,SAASI,gBAAgBA,CAC9B;EAAEX,UAAU;EAAEC,UAAU;EAAEC;AAAqC,CAAC,EAChEC,MAAW,EACX;EACA,MAAMS,mBAAmB,GAAG,IAAAJ,4BAAgB,EAC1CR,UAAU,EACVC,UAAU,EACVN,UACF,CAAC,CAACQ,MAAM,EAAEM,qBAAa,CAACI,SAAS,CAAC;EAElC,MAAMC,cAAc,GAAG,IAAAC,+CAAc,EACnC,IAAAT,oCAAa,EAACM,mBAAmB,EAAEV,kBAAmB,CACxD,CAAC;EAED,OAAOY,cAAc;AACvB;;AAEA;AACA;AACA;AACO,SAASE,YAAYA,CAACC,IAAsB,EAAEd,MAAW,EAAE;EAChE,OAAOQ,gBAAgB,CAACM,IAAI,EAAEd,MAAM,CAAC;AACvC"}