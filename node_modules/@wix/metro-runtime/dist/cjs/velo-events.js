"use strict";

exports.__esModule = true;
exports.toVeloEvent = toVeloEvent;
var _lodash = require("lodash");
var _veloIndex = require("./velo-index");
exports.RootPath = _veloIndex.RootPath;
function toVeloEvent(domainEvent, serializerParams) {
  const veloEvent = {
    metadata: toMetadata(domainEvent)
  };
  if (!domainEvent.deletedEvent) {
    const _toVeloPayload = toVeloPayload(domainEvent, serializerParams),
      key = _toVeloPayload.key,
      payload = _toVeloPayload.payload;
    veloEvent[key] = payload;
  }
  return veloEvent;
}
function toVeloPayload(domainEvent, serializerParams) {
  const protoPayload = (0, _veloIndex.extractDomainEventPayload)(domainEvent);
  const payload = (0, _veloIndex.serializer)(serializerParams).fromJSON(protoPayload);
  const key = domainEvent.actionEvent ? 'data' : 'entity';
  return {
    key,
    payload
  };
}
function toMetadata(domainEvent) {
  return (0, _lodash.pick)(domainEvent, 'id', 'entityId', 'eventTime', 'triggeredByAnonymizeRequest');
}
//# sourceMappingURL=velo-events.js.map