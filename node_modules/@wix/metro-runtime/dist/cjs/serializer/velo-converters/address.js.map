{"version":3,"names":["_lodash","require","_domain","sharedFieldNames","sharedStreetAddressFieldNames","address","types","ConverterType","FROM_JSON","transform","val","omitBy","formatted","formattedAddress","location","geocode","addressLine1","addressLine","addressLine2","streetAddress","pick","isUndefined","TO_JSON","exports"],"sources":["../../../../src/serializer/velo-converters/address.ts"],"sourcesContent":["import { pick, omitBy, isUndefined } from 'lodash';\nimport type com from '../../proto';\nimport { ConverterSet, ConverterType } from '../domain';\nimport type { Address } from './types';\n\nconst sharedFieldNames = ['city', 'subdivision', 'country', 'postalCode'];\nconst sharedStreetAddressFieldNames = ['name', 'number', 'apt'];\n\nexport const address: ConverterSet = {\n  types: ['wix.common.Address'],\n\n  [ConverterType.FROM_JSON]: {\n    /**\n     * currently wix.common.Address represents the deserialized object, so we're good.\n     * in case it contains some serializable stuff (e.g. int64), we'll have to make some\n     * modifications in the type.\n     */\n    transform: (val: com.wix.common.Address): Address => {\n      return (\n        val &&\n        omitBy(\n          {\n            formatted: val.formattedAddress,\n            location: val.geocode,\n            addressLine1: val.addressLine,\n            addressLine2: val.addressLine2,\n            streetAddress:\n              val.streetAddress &&\n              pick(val.streetAddress, sharedStreetAddressFieldNames),\n            ...pick(val, sharedFieldNames),\n          },\n          isUndefined,\n        )\n      );\n    },\n  },\n\n  [ConverterType.TO_JSON]: {\n    transform: (val: Address): com.wix.common.Address => {\n      return (\n        val &&\n        omitBy(\n          {\n            ...pick(val, sharedFieldNames),\n            formattedAddress: val.formatted,\n            geocode: val.location,\n            addressLine: val.addressLine1,\n            addressLine2: val.addressLine2,\n            streetAddress:\n              val.streetAddress &&\n              pick(val.streetAddress, sharedStreetAddressFieldNames),\n          },\n          isUndefined,\n        )\n      );\n    },\n  },\n};\n"],"mappings":";;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAEA,IAAAC,OAAA,GAAAD,OAAA;AAGA,MAAME,gBAAgB,GAAG,CAAC,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,YAAY,CAAC;AACzE,MAAMC,6BAA6B,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC;AAExD,MAAMC,OAAqB,GAAG;EACnCC,KAAK,EAAE,CAAC,oBAAoB,CAAC;EAE7B,CAACC,qBAAa,CAACC,SAAS,GAAG;IACzB;AACJ;AACA;AACA;AACA;IACIC,SAAS,EAAGC,GAA2B,IAAc;MACnD,OACEA,GAAG,IACH,IAAAC,cAAM,EACJ;QACEC,SAAS,EAAEF,GAAG,CAACG,gBAAgB;QAC/BC,QAAQ,EAAEJ,GAAG,CAACK,OAAO;QACrBC,YAAY,EAAEN,GAAG,CAACO,WAAW;QAC7BC,YAAY,EAAER,GAAG,CAACQ,YAAY;QAC9BC,aAAa,EACXT,GAAG,CAACS,aAAa,IACjB,IAAAC,YAAI,EAACV,GAAG,CAACS,aAAa,EAAEf,6BAA6B,CAAC;QACxD,GAAG,IAAAgB,YAAI,EAACV,GAAG,EAAEP,gBAAgB;MAC/B,CAAC,EACDkB,mBACF,CAAC;IAEL;EACF,CAAC;EAED,CAACd,qBAAa,CAACe,OAAO,GAAG;IACvBb,SAAS,EAAGC,GAAY,IAA6B;MACnD,OACEA,GAAG,IACH,IAAAC,cAAM,EACJ;QACE,GAAG,IAAAS,YAAI,EAACV,GAAG,EAAEP,gBAAgB,CAAC;QAC9BU,gBAAgB,EAAEH,GAAG,CAACE,SAAS;QAC/BG,OAAO,EAAEL,GAAG,CAACI,QAAQ;QACrBG,WAAW,EAAEP,GAAG,CAACM,YAAY;QAC7BE,YAAY,EAAER,GAAG,CAACQ,YAAY;QAC9BC,aAAa,EACXT,GAAG,CAACS,aAAa,IACjB,IAAAC,YAAI,EAACV,GAAG,CAACS,aAAa,EAAEf,6BAA6B;MACzD,CAAC,EACDiB,mBACF,CAAC;IAEL;EACF;AACF,CAAC;AAACE,OAAA,CAAAlB,OAAA,GAAAA,OAAA"}