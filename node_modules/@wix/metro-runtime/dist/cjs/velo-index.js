"use strict";

exports.__esModule = true;
exports.extractDomainEventPayload = extractDomainEventPayload;
exports.serializer = serializer;
var _motionEdmAutogenP13n = require("@wix/motion-edm-autogen-p13n");
var _motionEdmAutogenTransformations = require("@wix/motion-edm-autogen-transformations");
var _domain = require("./serializer/domain");
var _converters = require("./serializer/protobuf-converters/converters");
var _serializer = require("./serializer/serializer");
var _utils = require("./serializer/utils");
var _lodash = require("lodash");
var _converters2 = require("./serializer/velo-converters/converters");
var _transformationHandler = require("./transformation-handler");
exports.RootPath = _transformationHandler.RootPath;
exports.transformError = _transformationHandler.transformError;
var _queryTransformation = require("./query-transformation");
exports.resolveQueryFieldsTransformationPaths = _queryTransformation.resolveQueryFieldsTransformationPaths;
const converters = (0, _utils.typeToConverterSet)([..._converters.protobufConverters, ..._converters2.veloConverters]);
function extractDomainEventPayload(parsedDomainEvent) {
  var _parsedDomainEvent$cr, _parsedDomainEvent$ac, _parsedDomainEvent$up;
  const event = ((_parsedDomainEvent$cr = parsedDomainEvent.createdEvent) == null ? void 0 : _parsedDomainEvent$cr.entityAsJson) || ((_parsedDomainEvent$ac = parsedDomainEvent.actionEvent) == null ? void 0 : _parsedDomainEvent$ac.bodyAsJson) || ((_parsedDomainEvent$up = parsedDomainEvent.updatedEvent) == null ? void 0 : _parsedDomainEvent$up.currentEntityAsJson);
  if (event) {
    return event;
  }
  throw new Error('Invalid Domain Event structure detected');
}
function serializer({
  rootSchema,
  depSchemas,
  fqdnTransformation = {
    paths: [],
    transformation: '$'
  },
  customTransformation = '$'
}) {
  const serialize = (0, _serializer.schemaSerializer)(rootSchema, depSchemas, converters);
  return {
    toAmbassadorRequest(userInputArgs) {
      return (0, _lodash.omitBy)(serialize((0, _motionEdmAutogenTransformations.fromCorvidEntity)((0, _motionEdmAutogenTransformations.transformToRequestMessage)(userInputArgs, customTransformation, _motionEdmAutogenP13n.builtinCustomFunctions)), _domain.ConverterType.TO_JSON), _lodash.isUndefined);
    },
    fromJSON(json) {
      const deserialized = serialize(json, _domain.ConverterType.FROM_JSON);
      const fqdnTransformed = (0, _transformationHandler.transformFqdn)(deserialized, fqdnTransformation);
      return (0, _motionEdmAutogenTransformations.toCorvidEntity)((0, _motionEdmAutogenTransformations.transformResponseMessage)(fqdnTransformed, customTransformation, _motionEdmAutogenP13n.builtinCustomFunctions));
    },
    toJSON(veloPayload) {
      const deserialized = serialize(veloPayload, _domain.ConverterType.TO_JSON);
      return (0, _motionEdmAutogenTransformations.fromCorvidEntity)((0, _motionEdmAutogenTransformations.transformToRequestMessage)(deserialized, customTransformation, _motionEdmAutogenP13n.builtinCustomFunctions));
    }
  };
}
//# sourceMappingURL=velo-index.js.map