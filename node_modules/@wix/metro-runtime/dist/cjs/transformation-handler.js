"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.RootPath = exports.FqdnTransformationHandler = exports.FqdnDirection = void 0;
exports.transformError = transformError;
exports.transformFqdn = transformFqdn;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _lodash = require("lodash");
var _serialization = require("./serialization");
var _motionEdmAutogenTransformations = require("@wix/motion-edm-autogen-transformations");
var _motionEdmAutogenP13n = require("@wix/motion-edm-autogen-p13n");
const RootPath = Symbol('RootPath');
exports.RootPath = RootPath;
let FqdnDirection = /*#__PURE__*/function (FqdnDirection) {
  FqdnDirection[FqdnDirection["TO_VELO"] = 0] = "TO_VELO";
  FqdnDirection[FqdnDirection["FROM_VELO"] = 1] = "FROM_VELO";
  return FqdnDirection;
}({});
exports.FqdnDirection = FqdnDirection;
function transformFqdn(payload, fqdnTransformation) {
  const transformation = fqdnTransformation.transformation;
  return fqdnTransformation.paths.reduce((payload, path) => {
    const pathToFqdn = typeof path === 'string' ? path : '';
    return new FqdnTransformationHandler({
      entity: payload,
      transformation,
      pathToFqdn
    }).transformEntity();
  }, payload);
}
class FqdnTransformationHandler {
  constructor({
    entity: _entity,
    pathToFqdn,
    transformation
  }) {
    (0, _defineProperty2.default)(this, "path", void 0);
    (0, _defineProperty2.default)(this, "entity", void 0);
    (0, _defineProperty2.default)(this, "transformation", void 0);
    (0, _defineProperty2.default)(this, "transformArray", (entitiesArray, index) => {
      return entitiesArray.map(entity => this.transformEntity(entity, index));
    });
    (0, _defineProperty2.default)(this, "transformMap", (entitiesMap, index) => {
      return Object.entries(entitiesMap).reduce((acc, [key, entity]) => {
        acc[key] = this.transformEntity(entity, index);
        return acc;
      }, {});
    });
    this.path = pathToFqdn.split('.');
    this.entity = (0, _lodash.cloneDeep)(_entity);
    this.transformation = transformation;
  }
  transformEntity(entity = this.entity, index = 0) {
    const currentPath = this.path[index];
    if (!currentPath) {
      return (0, _motionEdmAutogenTransformations.transformResponseMessage)(entity, this.transformation, _motionEdmAutogenP13n.builtinCustomFunctions);
    }
    const _parseLeanSchemaRef = (0, _serialization.parseLeanSchemaRef)(currentPath),
      schemaName = _parseLeanSchemaRef.schemaName,
      schemaType = _parseLeanSchemaRef.schemaType;
    const currentEntity = entity[schemaName];
    if (!currentEntity) {
      return entity;
    }
    let transformedEntity;
    if (schemaType === 'Array') {
      transformedEntity = this.transformArray(currentEntity, index + 1);
    } else if (schemaType === 'Map') {
      transformedEntity = this.transformMap(currentEntity, index + 1);
    } else {
      transformedEntity = this.transformEntity(currentEntity, index + 1);
    }
    (0, _lodash.set)(entity, schemaName, transformedEntity);
    return entity;
  }
}
exports.FqdnTransformationHandler = FqdnTransformationHandler;
function transformError(httpClientError, transformation, argumentNames) {
  var _httpClientError$resp, _httpClientError$resp2;
  const expectedErrorStructure = {
    requestId: httpClientError.requestId,
    response: (_httpClientError$resp = httpClientError.response) == null ? void 0 : _httpClientError$resp.data,
    httpStatus: (_httpClientError$resp2 = httpClientError.response) == null ? void 0 : _httpClientError$resp2.status
  };
  return (0, _motionEdmAutogenTransformations.transformError)(expectedErrorStructure, transformation, argumentNames);
}
//# sourceMappingURL=transformation-handler.js.map