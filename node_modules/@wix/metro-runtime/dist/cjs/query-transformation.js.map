{"version":3,"names":["_lodash","require","_motionEdmAutogenTransformationsCore","QUERY_OPERATOR_PREFIX","QuerySections","CommonTransformations","_id","_createdDate","_updatedDate","resolveQueryFieldsTransformationPaths","transformation","reduceTransformation","visitors","NestedSimpleTransformationExpression","acc","path","value","stripJsonPathRootPrefix","MapArrayItems","sourceArrayExpression","accumulator","toPlatformizedQuery","query","transformations","allTransformations","transformationPaths","Object","entries","reduce","transformedQuery","key","FILTER","transformQueryFilter","SORT","transformQuerySort","FIELDS","transformQueryFields","filter","transformedFilter","filedOrOperator","startsWith","isPlainObject","isArray","map","x","sort","fieldName","order","fields","field"],"sources":["../../src/query-transformation.ts"],"sourcesContent":["import { VeloTransformation } from './types';\nimport { isArray, isPlainObject } from 'lodash';\nimport {\n  reduceTransformation,\n  stripJsonPathRootPrefix,\n} from '@wix/motion-edm-autogen-transformations-core';\n\nconst QUERY_OPERATOR_PREFIX = '$';\n\nenum QuerySections {\n  FILTER = 'filter',\n  SORT = 'sort',\n  FIELDS = 'fields',\n}\n\ntype QueryObject = {\n  [key: string]: any;\n};\n\ntype QueryFilter = {\n  [key: string]: any;\n};\n\ntype QuerySort = { fieldName: string; order: any }[];\n\ntype QueryFields = string[];\n\nconst CommonTransformations: Record<string, string> = {\n  _id: `${QUERY_OPERATOR_PREFIX}.id`,\n  _createdDate: `${QUERY_OPERATOR_PREFIX}.createdDate`,\n  _updatedDate: `${QUERY_OPERATOR_PREFIX}.updatedDate`,\n};\n\nexport function resolveQueryFieldsTransformationPaths(\n  transformation: VeloTransformation,\n): Record<string, string> {\n  return (\n    reduceTransformation(transformation, {\n      visitors: {\n        NestedSimpleTransformationExpression(acc: any, path: any, value: any) {\n          acc[path] = stripJsonPathRootPrefix(value);\n        },\n        MapArrayItems(acc: any, path: any, sourceArrayExpression: any) {\n          acc[path] = stripJsonPathRootPrefix(sourceArrayExpression);\n        },\n      },\n      accumulator: {},\n    }) || {}\n  );\n}\n\nexport function toPlatformizedQuery(\n  query: QueryObject,\n  transformations: VeloTransformation,\n) {\n  const allTransformations = {\n    ...CommonTransformations,\n    ...transformations,\n  };\n\n  const transformationPaths =\n    resolveQueryFieldsTransformationPaths(allTransformations);\n\n  return Object.entries(query).reduce((transformedQuery, [key, value]) => {\n    if (key === QuerySections.FILTER) {\n      transformedQuery[key] = transformQueryFilter(value, transformationPaths);\n    } else if (key === QuerySections.SORT) {\n      transformedQuery[key] = transformQuerySort(value, transformationPaths);\n    } else if (key === QuerySections.FIELDS) {\n      transformedQuery[key] = transformQueryFields(value, transformationPaths);\n    } else {\n      transformedQuery[key] = value;\n    }\n\n    return transformedQuery;\n  }, {} as QueryObject);\n}\n\nfunction transformQueryFilter(\n  filter: QueryFilter,\n  transformationPaths: Record<string, string>,\n) {\n  return Object.entries(filter).reduce(\n    (transformedFilter, [filedOrOperator, value]) => {\n      const key = filedOrOperator.startsWith(QUERY_OPERATOR_PREFIX)\n        ? filedOrOperator\n        : transformationPaths[filedOrOperator] || filedOrOperator;\n\n      if (isPlainObject(value)) {\n        transformedFilter[key] = transformQueryFilter(\n          value,\n          transformationPaths,\n        );\n      } else if (isArray(value)) {\n        transformedFilter[key] = value.map((x) =>\n          isPlainObject(x) ? transformQueryFilter(x, transformationPaths) : x,\n        );\n      } else {\n        transformedFilter[key] = value;\n      }\n\n      return transformedFilter;\n    },\n    {} as QueryFilter,\n  );\n}\n\nfunction transformQuerySort(\n  sort: QuerySort,\n  transformationPaths: Record<string, string>,\n) {\n  return sort.map(({ fieldName, order }) => ({\n    fieldName: transformationPaths[fieldName] || fieldName,\n    ...(order ? { order } : {}),\n  }));\n}\n\nfunction transformQueryFields(\n  fields: QueryFields,\n  transformationPaths: Record<string, string>,\n) {\n  return fields.map((field) => transformationPaths[field] || field);\n}\n"],"mappings":"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"}