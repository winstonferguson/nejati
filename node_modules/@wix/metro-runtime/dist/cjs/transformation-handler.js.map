{"version":3,"names":["_lodash","require","_serialization","_motionEdmAutogenTransformations","_motionEdmAutogenP13n","RootPath","Symbol","exports","FqdnDirection","transformFqdn","payload","fqdnTransformation","transformation","paths","reduce","path","pathToFqdn","FqdnTransformationHandler","entity","transformEntity","constructor","_defineProperty2","default","entitiesArray","index","map","entitiesMap","Object","entries","acc","key","split","cloneDeep","currentPath","transformResponseMessage","builtinCustomFunctions","_parseLeanSchemaRef","parseLeanSchemaRef","schemaName","schemaType","currentEntity","transformedEntity","transformArray","transformMap","set","transformError","httpClientError","argumentNames","_httpClientError$resp","_httpClientError$resp2","expectedErrorStructure","requestId","response","data","httpStatus","status","cloudEdmTransformError"],"sources":["../../src/transformation-handler.ts"],"sourcesContent":["import { cloneDeep, set } from 'lodash';\nimport { parseLeanSchemaRef } from './serialization';\nimport { Payload } from './serializer/domain';\nimport {\n  transformError as cloudEdmTransformError,\n  transformResponseMessage,\n} from '@wix/motion-edm-autogen-transformations';\n\nimport { builtinCustomFunctions } from '@wix/motion-edm-autogen-p13n';\nimport { FqdnTransformation } from './types';\n\nexport type VeloTransformation = any;\n\nexport const RootPath = Symbol('RootPath');\n\nexport enum FqdnDirection {\n  TO_VELO,\n  FROM_VELO,\n}\n\nexport function transformFqdn(\n  payload: Payload,\n  fqdnTransformation: FqdnTransformation,\n) {\n  const { transformation } = fqdnTransformation;\n\n  return fqdnTransformation.paths.reduce((payload, path) => {\n    const pathToFqdn = typeof path === 'string' ? (path as string) : '';\n\n    return new FqdnTransformationHandler({\n      entity: payload,\n      transformation,\n      pathToFqdn,\n    }).transformEntity();\n  }, payload);\n}\n\ninterface FqdnTransformationHandlerParams {\n  entity: any;\n  pathToFqdn: string;\n  transformation: VeloTransformation;\n  direction?: FqdnDirection;\n}\n\nexport class FqdnTransformationHandler {\n  private readonly path: string[];\n  private readonly entity: any;\n  private readonly transformation: VeloTransformation;\n\n  constructor({\n    entity,\n    pathToFqdn,\n    transformation,\n  }: FqdnTransformationHandlerParams) {\n    this.path = pathToFqdn.split('.');\n    this.entity = cloneDeep(entity);\n    this.transformation = transformation;\n  }\n\n  transformEntity(entity: any = this.entity, index: number = 0) {\n    const currentPath = this.path[index];\n    if (!currentPath) {\n      return transformResponseMessage(\n        entity,\n        this.transformation,\n        builtinCustomFunctions,\n      );\n    }\n\n    const { schemaName, schemaType } = parseLeanSchemaRef(currentPath);\n    const currentEntity = entity[schemaName];\n\n    if (!currentEntity) {\n      return entity;\n    }\n\n    let transformedEntity;\n\n    if (schemaType === 'Array') {\n      transformedEntity = this.transformArray(currentEntity, index + 1);\n    } else if (schemaType === 'Map') {\n      transformedEntity = this.transformMap(currentEntity, index + 1);\n    } else {\n      transformedEntity = this.transformEntity(currentEntity, index + 1);\n    }\n\n    set(entity, schemaName, transformedEntity);\n\n    return entity;\n  }\n\n  private transformArray = (entitiesArray: any[], index: number) => {\n    return entitiesArray.map((entity: any) =>\n      this.transformEntity(entity, index),\n    );\n  };\n\n  private transformMap = (entitiesMap: Record<string, any>, index: number) => {\n    return Object.entries(entitiesMap).reduce<Record<string, any>>(\n      (acc, [key, entity]) => {\n        acc[key] = this.transformEntity(entity, index);\n\n        return acc;\n      },\n      {},\n    );\n  };\n}\n\nexport function transformError(\n  httpClientError: any,\n  transformation?: VeloTransformation,\n  argumentNames?: string[],\n): Error {\n  const expectedErrorStructure = {\n    requestId: httpClientError.requestId,\n    response: httpClientError.response?.data,\n    httpStatus: httpClientError.response?.status,\n  };\n\n  return cloudEdmTransformError(\n    expectedErrorStructure,\n    transformation,\n    argumentNames,\n  );\n}\n"],"mappings":"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"}