

declare namespace $wrapper {
    export namespace wix {
        export namespace common {
            export interface Address {
                country?: (string | null);
                subdivision?: (string | null);
                city?: (string | null);
                postalCode?: (string | null);
                streetAddress?: ($wrapper.wix.common.StreetAddress | null);
                addressLine?: (string | null);
                addressLine2?: (string | null);
                formattedAddress?: (string | null);
                hint?: (string | null);
                geocode?: ($wrapper.wix.common.AddressLocation | null);
                countryFullname?: (string | null);
                subdivisionFullname?: (string | null);
                subdivisions?: ($wrapper.wix.common.Subdivision[] | null);
            }
            export interface Subdivision {
                code?: (string | null);
                name?: (string | null);
                type?: ($wrapper.wix.common.Subdivision.SubdivisionType | null);
                typeInfo?: (string | null);
            }
            export namespace Subdivision {
                export enum SubdivisionType {
                    UNKNOWN_SUBDIVISION_TYPE = "UNKNOWN_SUBDIVISION_TYPE",
                    ADMINISTRATIVE_AREA_LEVEL_1 = "ADMINISTRATIVE_AREA_LEVEL_1",
                    ADMINISTRATIVE_AREA_LEVEL_2 = "ADMINISTRATIVE_AREA_LEVEL_2",
                    ADMINISTRATIVE_AREA_LEVEL_3 = "ADMINISTRATIVE_AREA_LEVEL_3",
                    ADMINISTRATIVE_AREA_LEVEL_4 = "ADMINISTRATIVE_AREA_LEVEL_4",
                    ADMINISTRATIVE_AREA_LEVEL_5 = "ADMINISTRATIVE_AREA_LEVEL_5",
                    COUNTRY = "COUNTRY",
                }
            }
            export interface StreetAddress {
                number?: (string | null);
                name?: (string | null);
                apt?: (string | null);
                formattedAddressLine?: (string | null);
            }
            export interface AddressContactDetails {
                fullName?: (string | null);
                phone?: (string | null);
                company?: (string | null);
                email?: (string | null);
            }
            export interface FullAddressContactDetails {
                firstName?: (string | null);
                lastName?: (string | null);
                fullName?: (string | null);
                phone?: (string | null);
                company?: (string | null);
                email?: (string | null);
                vatId?: ($wrapper.wix.common.VatId | null);
            }
            export interface VatId {
                id?: (string | null);
                type?: ($wrapper.wix.common.VatType | null);
            }
            export enum VatType {
                UNSPECIFIED = "UNSPECIFIED",
                CPF = "CPF",
                CNPJ = "CNPJ",
            }
            export interface AddressLocation {
                latitude?: (number | null);
                longitude?: (number | null);
            }
            export interface BulkActionMetadata {
                totalSuccesses?: (number | null);
                totalFailures?: (number | null);
                undetailedFailures?: (number | null);
            }
            export interface ItemMetadata {
                id?: (string | null);
                originalIndex?: (number | null);
                success?: (boolean | null);
                error?: ($wrapper.wix.api.ApplicationError | null);
            }
            export enum BulkActionType {
                UNKNOWN_ACTION_TYPE = "UNKNOWN_ACTION_TYPE",
                INSERT = "INSERT",
                UPDATE = "UPDATE",
                DELETE = "DELETE",
            }
            export interface IdentificationData {
                contactId?: (string | null);
                identityType?: ($wrapper.wix.common.IdentificationData.IdentityType | null);
                anonymousVisitorId?: (string | null);
                memberId?: (string | null);
                wixUserId?: (string | null);
                appId?: (string | null);
            }
            export namespace IdentificationData {
                export enum IdentityType {
                    UNKNOWN = "UNKNOWN",
                    ANONYMOUS_VISITOR = "ANONYMOUS_VISITOR",
                    MEMBER = "MEMBER",
                    WIX_USER = "WIX_USER",
                    APP = "APP",
                }
            }
            export interface Image {
                id?: (string | null);
                url?: (string | null);
                height?: (number | null);
                width?: (number | null);
                altText?: (string | null);
                urlExpirationDate?: (Date | null);
                filename?: (string | null);
                sizeInBytes?: (string | null);
            }
            export interface Video {
                id?: (string | null);
                url?: (string | null);
                height?: (number | null);
                width?: (number | null);
                thumbnail?: ($wrapper.wix.common.Image | null);
            }
            export interface VideoV2 {
                id?: (string | null);
                url?: (string | null);
                resolutions?: ($wrapper.wix.common.VideoResolution[] | null);
                filename?: (string | null);
                posters?: ($wrapper.wix.common.Image[] | null);
                sizeInBytes?: (string | null);
                urlExpirationDate?: (Date | null);
            }
            export interface VideoResolution {
                url?: (string | null);
                height?: (number | null);
                width?: (number | null);
                poster?: ($wrapper.wix.common.Image | null);
                format?: (string | null);
                urlExpirationDate?: (Date | null);
                sizeInBytes?: (string | null);
                quality?: (string | null);
                filename?: (string | null);
                durationInSeconds?: (number | null);
                private?: (boolean | null);
                assetKey?: (string | null);
            }
            export interface Audio {
                id?: (string | null);
                url?: (string | null);
                urlExpirationDate?: (Date | null);
                sizeInBytes?: (string | null);
                filename?: (string | null);
                duration?: (number | null);
                private?: (boolean | null);
                assetKey?: (string | null);
                format?: (string | null);
                quality?: (string | null);
            }
            export interface Document {
                id?: (string | null);
                url?: (string | null);
                urlExpirationDate?: (Date | null);
                sizeInBytes?: (string | null);
                filename?: (string | null);
            }
            export interface Model3D {
                id?: (string | null);
                url?: (string | null);
                thumbnail?: ($wrapper.wix.common.Image | null);
                altText?: (string | null);
                urlExpirationDate?: (Date | null);
                filename?: (string | null);
                sizeInBytes?: (string | null);
            }
            export interface Archive {
                id?: (string | null);
                url?: (string | null);
                urlExpirationDate?: (Date | null);
                sizeInBytes?: (string | null);
                filename?: (string | null);
            }
            export interface MediaItem {
                image?: ($wrapper.wix.common.Image | null);
                video?: ($wrapper.wix.common.Video | null);
                document?: ($wrapper.wix.common.Document | null);
            }
            export interface Money {
                value?: (string | null);
                currency?: (string | null);
                formattedValue?: (string | null);
            }
            export interface PageUrl {
                base?: (string | null);
                path?: (string | null);
            }
            export interface PageUrlV2 {
                relativePath?: (string | null);
                url?: (string | null);
            }
            export interface Paging {
                limit?: (number | null);
                offset?: (number | null);
            }
            export interface CursorPaging {
                limit?: (number | null);
                cursor?: (string | null);
            }
            export interface PagingMetadata {
                count?: (number | null);
                offset?: (number | null);
                total?: (number | null);
                tooManyToCount?: (boolean | null);
                hasNext?: (boolean | null);
            }
            export interface PagingMetadataV2 {
                count?: (number | null);
                offset?: (number | null);
                total?: (number | null);
                tooManyToCount?: (boolean | null);
                cursors?: ($wrapper.wix.common.Cursors | null);
                hasNext?: (boolean | null);
            }
            export interface CursorPagingMetadata {
                count?: (number | null);
                cursors?: ($wrapper.wix.common.Cursors | null);
                hasNext?: (boolean | null);
            }
            export interface Cursors {
                next?: (string | null);
                prev?: (string | null);
            }
            export interface Sorting {
                fieldName?: (string | null);
                order?: ($wrapper.wix.common.SortOrder | null);
            }
            export enum SortOrder {
                ASC = "ASC",
                DESC = "DESC",
            }
            export namespace spi {
                export interface SpiBaseUri {
                    baseUri?: (string | null);
                    alternativeUris?: ($wrapper.wix.common.spi.SpiBaseUri.AlternativeUri[] | null);
                }
                export namespace SpiBaseUri {
                    export interface AlternativeUri {
                        methodName?: (string | null);
                        absoluteUri?: (string | null);
                    }
                }
                /**
                 * this message is not directly used by any service,
                 * it exists to describe the expected parameters that SHOULD be provided to invoked Velo methods as part of open-platform.
                 * e.g. SPIs, event-handlers, etc..
                 * NOTE: this context object MUST be provided as the last argument in each Velo method signature.
                 * 
                 * Example:
                 * ```typescript
                 * export function wixStores_onOrderCanceled(event: OrderCanceledEvent, context: Context) {
                 * ...
                 * }
                 * ```
                 */
                export interface Context {
                    requestId?: (string | null);
                    currency?: (string | null);
                    identity?: ($wrapper.wix.common.spi.Context.IdentificationData | null);
                    languages?: (string[] | null);
                    instanceId?: (string | null);
                }
                export namespace Context {
                    export interface IdentificationData {
                        identityType?: ($wrapper.wix.common.spi.Context.IdentificationData.IdentityType | null);
                        anonymousVisitorId?: (string | null);
                        memberId?: (string | null);
                        wixUserId?: (string | null);
                        appId?: (string | null);
                    }
                    export namespace IdentificationData {
                        export enum IdentityType {
                            UNKNOWN = "UNKNOWN",
                            ANONYMOUS_VISITOR = "ANONYMOUS_VISITOR",
                            MEMBER = "MEMBER",
                            WIX_USER = "WIX_USER",
                            APP = "APP",
                        }
                    }
                }
            }
            export interface WixLink {
                external?: ($wrapper.wix.common.ExternalLink | null);
                page?: ($wrapper.wix.common.PageLink | null);
                anchor?: ($wrapper.wix.common.AnchorLink | null);
                dynamicPage?: ($wrapper.wix.common.DynamicPageLink | null);
                document?: ($wrapper.wix.common.DocumentLink | null);
                email?: ($wrapper.wix.common.EmailLink | null);
                phone?: ($wrapper.wix.common.PhoneLink | null);
                address?: ($wrapper.wix.common.AddressLink | null);
                whatsApp?: ($wrapper.wix.common.WhatsAppLink | null);
            }
            export interface ExternalLink {
                url?: (string | null);
                target?: (string | null);
            }
            export interface PageLink {
                pageId?: (string | null);
                target?: (string | null);
            }
            export interface AnchorLink {
                anchorName?: (string | null);
                anchorDataId?: (string | null);
                pageId?: (string | null);
            }
            export interface DynamicPageLink {
                routerId?: (string | null);
                innerRoute?: (string | null);
                anchorDataId?: (string | null);
            }
            export interface DocumentLink {
                docId?: (string | null);
                name?: (string | null);
                indexable?: (boolean | null);
            }
            export interface EmailLink {
                recipient?: (string | null);
                subject?: (string | null);
                body?: (string | null);
            }
            export interface PhoneLink {
                phoneNumber?: (string | null);
            }
            export interface AddressLink {
                address?: (string | null);
            }
            export interface WhatsAppLink {
                phoneNumber?: (string | null);
            }
        }
        export namespace api {
            export interface ReferenceEntityField {
                path?: (string | null);
            }
            export interface CacheSettings {
                maxAgeSeconds?: (number | null);
            }
            export interface FieldSet {
                field?: (string[] | null);
            }
            export interface Deprecated {
                replacedBy?: (string | null);
                targetRemovalDate?: (string | null);
            }
            export interface Unique {
                field?: (string[] | null);
            }
            export interface Crud {
                method?: ($wrapper.wix.api.Crud.Method | null);
                createOptions?: ($wrapper.wix.api.CreateMethodOptions | null);
                getOptions?: ($wrapper.wix.api.GetItemMethodOptions | null);
                updateOptions?: ($wrapper.wix.api.UpdateMethodOptions | null);
                deleteOptions?: ($wrapper.wix.api.DeleteMethodOptions | null);
                listOptions?: ($wrapper.wix.api.ListMethodOptions | null);
                queryOptions?: ($wrapper.wix.api.QueryMethodOptions | null);
                searchOptions?: ($wrapper.wix.api.SearchMethodOptions | null);
                bulkCreateOptions?: ($wrapper.wix.api.BulkCreateMethodOptions | null);
                bulkUpdateOptions?: ($wrapper.wix.api.BulkUpdateMethodOptions | null);
                bulkUpdateByFilterOptions?: ($wrapper.wix.api.BulkUpdateByFilterMethodOptions | null);
                bulkDeleteOptions?: ($wrapper.wix.api.BulkDeleteMethodOptions | null);
                bulkDeleteByFilterOptions?: ($wrapper.wix.api.BulkDeleteByFilterMethodOptions | null);
                upsertOptions?: ($wrapper.wix.api.UpsertMethodOptions | null);
                bulkUpsertOptions?: ($wrapper.wix.api.BulkUpsertMethodOptions | null);
                listDeletedOptions?: ($wrapper.wix.api.ListDeletedMethodOptions | null);
                getDeletedOptions?: ($wrapper.wix.api.GetDeletedMethodOptions | null);
                restoreFromTrashbinOptions?: ($wrapper.wix.api.RestoreFromTrashbinMethodOptions | null);
                removeFromTrashbinOptions?: ($wrapper.wix.api.RemoveFromTrashbinMethodOptions | null);
                countOptions?: ($wrapper.wix.api.CountOptions | null);
            }
            export namespace Crud {
                export enum Method {
                    UNKNOWN_METHOD = "UNKNOWN_METHOD",
                    CREATE = "CREATE",
                    GET_ITEM = "GET_ITEM",
                    UPDATE = "UPDATE",
                    DELETE = "DELETE",
                    UPSERT = "UPSERT",
                    LIST = "LIST",
                    QUERY = "QUERY",
                    SEARCH = "SEARCH",
                    BULK_CREATE = "BULK_CREATE",
                    BULK_UPDATE = "BULK_UPDATE",
                    BULK_UPDATE_BY_FILTER = "BULK_UPDATE_BY_FILTER",
                    BULK_DELETE = "BULK_DELETE",
                    BULK_DELETE_BY_FILTER = "BULK_DELETE_BY_FILTER",
                    BULK_UPSERT = "BULK_UPSERT",
                    LIST_DELETED = "LIST_DELETED",
                    GET_DELETED = "GET_DELETED",
                    RESTORE_FROM_TRASHBIN = "RESTORE_FROM_TRASHBIN",
                    REMOVE_FROM_TRASHBIN = "REMOVE_FROM_TRASHBIN",
                    COUNT = "COUNT",
                }
            }
            export interface Paging {
                type?: ($wrapper.wix.api.Paging.Type | null);
                pagingMetadataField?: (string | null);
            }
            export namespace Paging {
                export enum Type {
                    UNKNOWN_TYPE = "UNKNOWN_TYPE",
                    OFFSET = "OFFSET",
                    CURSOR = "CURSOR",
                }
            }
            export interface CreateMethodOptions {
                itemField?: (string | null);
            }
            export interface GetItemMethodOptions {
                itemField?: (string | null);
                idField?: (string | null);
            }
            export interface UpdateMethodOptions {
                itemField?: (string | null);
                fieldmaskField?: (string | null);
            }
            export interface UpsertMethodOptions {
                itemField?: (string | null);
                fieldmaskField?: (string | null);
            }
            export interface DeleteMethodOptions {
                idField?: (string | null);
            }
            export interface ListMethodOptions {
                idsField?: (string | null);
                itemsField?: (string | null);
                paging?: ($wrapper.wix.api.Paging | null);
                meAliasableField?: (string[] | null);
            }
            export interface QueryMethodOptions {
                queryField?: (string | null);
                itemsField?: (string | null);
                paging?: ($wrapper.wix.api.Paging | null);
                wql?: ($wrapper.wix.api.Wql | null);
                meAliasableField?: (string[] | null);
            }
            export interface SearchMethodOptions {
                searchField?: (string | null);
                itemsField?: (string | null);
                paging?: ($wrapper.wix.api.Paging | null);
                wql?: ($wrapper.wix.api.Wql | null);
                meAliasableField?: (string[] | null);
                search?: ($wrapper.wix.api.Search[] | null);
            }
            export interface BulkCreateMethodOptions {
                itemField?: (string | null);
            }
            export interface BulkUpdateMethodOptions {
                itemField?: (string | null);
                fieldmaskField?: (string | null);
            }
            export interface BulkUpdateByFilterMethodOptions {
                itemField?: (string | null);
                fieldmaskField?: (string | null);
                filterField?: (string | null);
            }
            export interface BulkUpsertMethodOptions {
                itemField?: (string | null);
                fieldmaskField?: (string | null);
            }
            export interface BulkDeleteMethodOptions {
                idsField?: (string | null);
            }
            export interface BulkDeleteByFilterMethodOptions {
                filterField?: (string | null);
            }
            export interface ListDeletedMethodOptions {
                idsField?: (string | null);
                itemsField?: (string | null);
                paging?: ($wrapper.wix.api.Paging | null);
                meAliasableField?: (string[] | null);
            }
            export interface GetDeletedMethodOptions {
                itemField?: (string | null);
                idField?: (string | null);
            }
            export interface RestoreFromTrashbinMethodOptions {
                itemField?: (string | null);
                idField?: (string | null);
            }
            export interface RemoveFromTrashbinMethodOptions {
                idField?: (string | null);
            }
            export interface CountOptions {
                inheritWqlFrom?: (string | null);
            }
            export interface Wql {
                operatorFieldSupport?: ($wrapper.wix.api.Wql.OperatorFieldSupport[] | null);
                pattern?: ($wrapper.wix.api.Wql.OperatorFieldSupport[] | null);
            }
            export namespace Wql {
                export enum Operator {
                    ALL_APPLICABLE_OPERATORS = "ALL_APPLICABLE_OPERATORS",
                    EQ = "EQ",
                    GT = "GT",
                    GTE = "GTE",
                    IN = "IN",
                    LT = "LT",
                    LTE = "LTE",
                    NE = "NE",
                    NIN = "NIN",
                    BEGINS = "BEGINS",
                    EXISTS = "EXISTS",
                    ALL = "ALL",
                    HAS_ALL = "HAS_ALL",
                    ANY = "ANY",
                    HAS_SOME = "HAS_SOME",
                    EMPTY = "EMPTY",
                }
                export enum Sort {
                    NONE = "NONE",
                    ASC = "ASC",
                    DESC = "DESC",
                    BOTH = "BOTH",
                }
                export interface RequiredFields {
                    field?: (string[] | null);
                    requiredField?: ($wrapper.wix.api.Wql.RequiredFields.RequiredField[] | null);
                }
                export namespace RequiredFields {
                    export interface RequiredField {
                        path?: (string | null);
                        sort?: ($wrapper.wix.api.Wql.Sort | null);
                    }
                }
                export interface OperatorFieldSupport {
                    operator?: ($wrapper.wix.api.Wql.Operator[] | null);
                    glob?: (string | null);
                    field?: (string[] | null);
                    sort?: ($wrapper.wix.api.Wql.Sort | null);
                    requiredFields?: ($wrapper.wix.api.Wql.RequiredFields[] | null);
                    maturity?: ($wrapper.wix.api.Maturity | null);
                }
            }
            export interface Search {
                field?: (string[] | null);
                maturity?: ($wrapper.wix.api.Maturity | null);
            }
            export interface Hookable {
            }
            export interface Translatable {
                name?: (string | null);
                hidden?: (boolean | null);
                grouping?: (string | null);
                type?: ($wrapper.wix.api.Translatable.Type | null);
                displayOnly?: (boolean | null);
            }
            export namespace Translatable {
                export enum Type {
                    UNDEFINED_TYPE = "UNDEFINED_TYPE",
                    SHORT_TEXT = "SHORT_TEXT",
                    LONG_TEXT = "LONG_TEXT",
                    RICH_TEXT = "RICH_TEXT",
                    RICH_CONTENT_EDITOR = "RICH_CONTENT_EDITOR",
                    SELECTION = "SELECTION",
                    MULTI_SELECTION = "MULTI_SELECTION",
                    DOCUMENT = "DOCUMENT",
                    IMAGE = "IMAGE",
                    VIDEO = "VIDEO",
                    IMAGE_LINK = "IMAGE_LINK",
                }
            }
            export interface Conditional {
                permission?: (string | null);
                requestedField?: (string | null);
            }
            export interface ServiceAppendix {
                type?: ($wrapper.wix.api.ServiceAppendix.Type | null);
                path?: (string | null);
            }
            export namespace ServiceAppendix {
                export enum Type {
                    UNKNOWN_APPENDIX_TYPE = "UNKNOWN_APPENDIX_TYPE",
                    NILE = "NILE",
                    MESSAGE_BUS = "MESSAGE_BUS",
                }
            }
            export enum Exposure {
                PRIVATE = "PRIVATE",
                INTERNAL = "INTERNAL",
                PUBLIC = "PUBLIC",
            }
            export enum Maturity {
                ALPHA = "ALPHA",
                BETA = "BETA",
                IA = "IA",
                GA = "GA",
                NOT_IMPLEMENTED = "NOT_IMPLEMENTED",
            }
            /**
             * Decimal value validation rules.
             * Based on java.math.BigDecimal, implies (wix.api.format) = DECIMAL_VALUE
             */
            export interface DecimalValueOptions {
                lte?: (string | null);
                gte?: (string | null);
                lt?: (string | null);
                gt?: (string | null);
                maxScale?: (number | null);
            }
            export interface AlignedWithEnum {
                field?: (string | null);
            }
            export enum Format {
                EMAIL = "EMAIL",
                HOSTNAME = "HOSTNAME",
                IPV4 = "IPV4",
                IPV6 = "IPV6",
                URI = "URI",
                WEB_URL = "WEB_URL",
                PHONE = "PHONE",
                CREDIT_CARD = "CREDIT_CARD",
                GUID = "GUID",
                COUNTRY = "COUNTRY",
                LANGUAGE = "LANGUAGE",
                DECIMAL_VALUE = "DECIMAL_VALUE",
                CURRENCY = "CURRENCY",
                LANGUAGE_TAG = "LANGUAGE_TAG",
                COLOR_HEX = "COLOR_HEX",
                LOCAL_DATE = "LOCAL_DATE",
                LOCAL_TIME = "LOCAL_TIME",
                LOCAL_DATE_TIME = "LOCAL_DATE_TIME",
                URL_SLUG = "URL_SLUG",
                SYSTEM_SLUG = "SYSTEM_SLUG",
            }
            /**
             * ApplicationError: named Error for backwards compatibility
             */
            export interface Error {
                httpCode?: ($wrapper.wix.api.StatusCodes.HttpStatusCode | null);
                applicationCode?: (string | null);
                data?: (string | null);
            }
            /**
             * CustomValidationError: field level validation, only declare when you have specific validation in your service that is not coming from infra
             */
            export interface CustomValidationError {
                ruleName?: (string | null);
                data?: (string | null);
            }
            /**
             * InheritCrudErrors: does this method throw standard crud errors?
             */
            export interface InheritCrudErrors {
                method?: ($wrapper.wix.api.Crud.Method | null);
            }
            export interface StatusCodes {
            }
            export namespace StatusCodes {
                export enum HttpStatusCode {
                    OK = "OK",
                    UNAUTHENTICATED = "UNAUTHENTICATED",
                    PERMISSION_DENIED = "PERMISSION_DENIED",
                    INVALID_ARGUMENT = "INVALID_ARGUMENT",
                    NOT_FOUND = "NOT_FOUND",
                    INTERNAL = "INTERNAL",
                    UNAVAILABLE = "UNAVAILABLE",
                    RESOURCE_EXHAUSTED = "RESOURCE_EXHAUSTED",
                    CANCELED = "CANCELED",
                    ALREADY_EXISTS = "ALREADY_EXISTS",
                    FAILED_PRECONDITION = "FAILED_PRECONDITION",
                }
            }
            export interface Details {
                applicationError?: ($wrapper.wix.api.ApplicationError | null);
                validationError?: ($wrapper.wix.api.ValidationError | null);
                tracing?: ({ [k: string]: string } | null);
            }
            export interface ApplicationError {
                code?: (string | null);
                description?: (string | null);
                data?: ({ [key: string]: any } | null);
            }
            /**
             * example result:
             * {
             * "fieldViolations": [
             * {
             * "field": "fieldA",
             * "description": "invalid music note. supported notes: [do,re,mi,fa,sol,la,ti]",
             * "violatedRule": "OTHER",
             * "ruleName": "INVALID_NOTE",
             * "data": {
             * "value": "FI"
             * }
             * },
             * {
             * "field": "fieldB",
             * "description": "field value out of range. supported range: [0-20]",
             * "violatedRule": "MAX",
             * "data": {
             * "threshold": 20
             * }
             * },
             * {
             * "field": "fieldC",
             * "description": "invalid phone number. provide a valid phone number of size: [7-12], supported characters: [0-9, +, -, (, )]",
             * "violatedRule": "FORMAT",
             * "data": {
             * "type": "PHONE"
             * }
             * }
             * ]
             * }
             */
            export interface ValidationError {
                fieldViolations?: ($wrapper.wix.api.ValidationError.FieldViolation[] | null);
            }
            export namespace ValidationError {
                export enum RuleType {
                    VALIDATION = "VALIDATION",
                    OTHER = "OTHER",
                    MAX = "MAX",
                    MIN = "MIN",
                    MAX_LENGTH = "MAX_LENGTH",
                    MIN_LENGTH = "MIN_LENGTH",
                    MAX_SIZE = "MAX_SIZE",
                    MIN_SIZE = "MIN_SIZE",
                    FORMAT = "FORMAT",
                    DECIMAL_LTE = "DECIMAL_LTE",
                    DECIMAL_GTE = "DECIMAL_GTE",
                    DECIMAL_LT = "DECIMAL_LT",
                    DECIMAL_GT = "DECIMAL_GT",
                    DECIMAL_MAX_SCALE = "DECIMAL_MAX_SCALE",
                    INVALID_ENUM_VALUE = "INVALID_ENUM_VALUE",
                    REQUIRED_FIELD = "REQUIRED_FIELD",
                    FIELD_NOT_ALLOWED = "FIELD_NOT_ALLOWED",
                    ONE_OF_ALIGNMENT = "ONE_OF_ALIGNMENT",
                }
                export interface FieldViolation {
                    field?: (string | null);
                    description?: (string | null);
                    violatedRule?: ($wrapper.wix.api.ValidationError.RuleType | null);
                    ruleName?: (string | null);
                    data?: ({ [key: string]: any } | null);
                }
            }
            export interface LimitRuleInt32DataPayload {
                threshold?: (number | null);
            }
            export interface LimitRuleDoubleDataPayload {
                threshold?: (number | null);
            }
            export interface LimitRuleStringDataPayload {
                threshold?: (string | null);
            }
            export interface FormatRuleDataPayload {
                type?: (string | null);
            }
            export interface EnumRuleDataPayload {
                supported?: (string[] | null);
            }
        }
    }
    export namespace google {
        export namespace protobuf {
            export interface FileDescriptorSet {
                file?: ($wrapper.google.protobuf.FileDescriptorProto[] | null);
            }
            export interface FileDescriptorProto {
                name?: (string | null);
                package?: (string | null);
                dependency?: (string[] | null);
                publicDependency?: (number[] | null);
                weakDependency?: (number[] | null);
                messageType?: ($wrapper.google.protobuf.DescriptorProto[] | null);
                enumType?: ($wrapper.google.protobuf.EnumDescriptorProto[] | null);
                service?: ($wrapper.google.protobuf.ServiceDescriptorProto[] | null);
                extension?: ($wrapper.google.protobuf.FieldDescriptorProto[] | null);
                options?: ($wrapper.google.protobuf.FileOptions | null);
                sourceCodeInfo?: ($wrapper.google.protobuf.SourceCodeInfo | null);
                syntax?: (string | null);
            }
            export interface DescriptorProto {
                name?: (string | null);
                field?: ($wrapper.google.protobuf.FieldDescriptorProto[] | null);
                extension?: ($wrapper.google.protobuf.FieldDescriptorProto[] | null);
                nestedType?: ($wrapper.google.protobuf.DescriptorProto[] | null);
                enumType?: ($wrapper.google.protobuf.EnumDescriptorProto[] | null);
                extensionRange?: ($wrapper.google.protobuf.DescriptorProto.ExtensionRange[] | null);
                oneofDecl?: ($wrapper.google.protobuf.OneofDescriptorProto[] | null);
                options?: ($wrapper.google.protobuf.MessageOptions | null);
                reservedRange?: ($wrapper.google.protobuf.DescriptorProto.ReservedRange[] | null);
                reservedName?: (string[] | null);
            }
            export namespace DescriptorProto {
                export interface ExtensionRange {
                    start?: (number | null);
                    end?: (number | null);
                    options?: ($wrapper.google.protobuf.ExtensionRangeOptions | null);
                }
                export interface ReservedRange {
                    start?: (number | null);
                    end?: (number | null);
                }
            }
            export interface ExtensionRangeOptions {
                uninterpretedOption?: ($wrapper.google.protobuf.UninterpretedOption[] | null);
            }
            export interface FieldDescriptorProto {
                name?: (string | null);
                number?: (number | null);
                label?: ($wrapper.google.protobuf.FieldDescriptorProto.Label | null);
                type?: ($wrapper.google.protobuf.FieldDescriptorProto.Type | null);
                typeName?: (string | null);
                extendee?: (string | null);
                defaultValue?: (string | null);
                oneofIndex?: (number | null);
                jsonName?: (string | null);
                options?: ($wrapper.google.protobuf.FieldOptions | null);
                proto3Optional?: (boolean | null);
            }
            export namespace FieldDescriptorProto {
                export enum Type {
                    TYPE_DOUBLE = "TYPE_DOUBLE",
                    TYPE_FLOAT = "TYPE_FLOAT",
                    TYPE_INT64 = "TYPE_INT64",
                    TYPE_UINT64 = "TYPE_UINT64",
                    TYPE_INT32 = "TYPE_INT32",
                    TYPE_FIXED64 = "TYPE_FIXED64",
                    TYPE_FIXED32 = "TYPE_FIXED32",
                    TYPE_BOOL = "TYPE_BOOL",
                    TYPE_STRING = "TYPE_STRING",
                    TYPE_GROUP = "TYPE_GROUP",
                    TYPE_MESSAGE = "TYPE_MESSAGE",
                    TYPE_BYTES = "TYPE_BYTES",
                    TYPE_UINT32 = "TYPE_UINT32",
                    TYPE_ENUM = "TYPE_ENUM",
                    TYPE_SFIXED32 = "TYPE_SFIXED32",
                    TYPE_SFIXED64 = "TYPE_SFIXED64",
                    TYPE_SINT32 = "TYPE_SINT32",
                    TYPE_SINT64 = "TYPE_SINT64",
                }
                export enum Label {
                    LABEL_OPTIONAL = "LABEL_OPTIONAL",
                    LABEL_REQUIRED = "LABEL_REQUIRED",
                    LABEL_REPEATED = "LABEL_REPEATED",
                }
            }
            export interface OneofDescriptorProto {
                name?: (string | null);
                options?: ($wrapper.google.protobuf.OneofOptions | null);
            }
            export interface EnumDescriptorProto {
                name?: (string | null);
                value?: ($wrapper.google.protobuf.EnumValueDescriptorProto[] | null);
                options?: ($wrapper.google.protobuf.EnumOptions | null);
                reservedRange?: ($wrapper.google.protobuf.EnumDescriptorProto.EnumReservedRange[] | null);
                reservedName?: (string[] | null);
            }
            export namespace EnumDescriptorProto {
                export interface EnumReservedRange {
                    start?: (number | null);
                    end?: (number | null);
                }
            }
            export interface EnumValueDescriptorProto {
                name?: (string | null);
                number?: (number | null);
                options?: ($wrapper.google.protobuf.EnumValueOptions | null);
            }
            export interface ServiceDescriptorProto {
                name?: (string | null);
                method?: ($wrapper.google.protobuf.MethodDescriptorProto[] | null);
                options?: ($wrapper.google.protobuf.ServiceOptions | null);
            }
            export interface MethodDescriptorProto {
                name?: (string | null);
                inputType?: (string | null);
                outputType?: (string | null);
                options?: ($wrapper.google.protobuf.MethodOptions | null);
                clientStreaming?: (boolean | null);
                serverStreaming?: (boolean | null);
            }
            export interface FileOptions {
                javaPackage?: (string | null);
                javaOuterClassname?: (string | null);
                javaMultipleFiles?: (boolean | null);
                javaGenerateEqualsAndHash?: (boolean | null);
                javaStringCheckUtf8?: (boolean | null);
                optimizeFor?: ($wrapper.google.protobuf.FileOptions.OptimizeMode | null);
                goPackage?: (string | null);
                ccGenericServices?: (boolean | null);
                javaGenericServices?: (boolean | null);
                pyGenericServices?: (boolean | null);
                phpGenericServices?: (boolean | null);
                deprecated?: (boolean | null);
                ccEnableArenas?: (boolean | null);
                objcClassPrefix?: (string | null);
                csharpNamespace?: (string | null);
                swiftPrefix?: (string | null);
                phpClassPrefix?: (string | null);
                phpNamespace?: (string | null);
                phpMetadataNamespace?: (string | null);
                rubyPackage?: (string | null);
                uninterpretedOption?: ($wrapper.google.protobuf.UninterpretedOption[] | null);
            }
            export namespace FileOptions {
                export enum OptimizeMode {
                    SPEED = "SPEED",
                    CODE_SIZE = "CODE_SIZE",
                    LITE_RUNTIME = "LITE_RUNTIME",
                }
            }
            export interface MessageOptions {
                messageSetWireFormat?: (boolean | null);
                noStandardDescriptorAccessor?: (boolean | null);
                deprecated?: (boolean | null);
                mapEntry?: (boolean | null);
                uninterpretedOption?: ($wrapper.google.protobuf.UninterpretedOption[] | null);
                '.wix.api.decompositeOf'?: (string | null);
                '.wix.api.decompositionMinimumFields'?: ($wrapper.wix.api.FieldSet[] | null);
                '.wix.api.unwrapArrayValue'?: (boolean | null);
                '.wix.api.messageDeprecated'?: ($wrapper.wix.api.Deprecated | null);
                '.wix.api.unique'?: ($wrapper.wix.api.Unique[] | null);
            }
            export interface FieldOptions {
                ctype?: ($wrapper.google.protobuf.FieldOptions.CType | null);
                packed?: (boolean | null);
                jstype?: ($wrapper.google.protobuf.FieldOptions.JSType | null);
                lazy?: (boolean | null);
                deprecated?: (boolean | null);
                weak?: (boolean | null);
                uninterpretedOption?: ($wrapper.google.protobuf.UninterpretedOption[] | null);
                '.wix.api.fieldExposure'?: ($wrapper.wix.api.Exposure | null);
                '.wix.api.fieldMaturity'?: ($wrapper.wix.api.Maturity | null);
                '.wix.api.pii'?: (boolean | null);
                '.wix.api.referencedEntity'?: (string | null);
                '.wix.api.referencedEntityField'?: ($wrapper.wix.api.ReferenceEntityField | null);
                '.wix.api.fieldDeprecated'?: ($wrapper.wix.api.Deprecated | null);
                '.wix.api.translatable'?: ($wrapper.wix.api.Translatable | null);
                '.wix.api.sampleData'?: (string | null);
                '.wix.api.conditional'?: ($wrapper.wix.api.Conditional | null);
                '.wix.api.max'?: (number | null);
                '.wix.api.min'?: (number | null);
                '.wix.api.maxLength'?: (number | null);
                '.wix.api.minLength'?: (number | null);
                '.wix.api.maxSize'?: (number | null);
                '.wix.api.minSize'?: (number | null);
                '.wix.api.format'?: ($wrapper.wix.api.Format | null);
                '.wix.api.readOnly'?: (boolean | null);
                '.wix.api.immutable'?: (boolean | null);
                '.wix.api.decimalValue'?: ($wrapper.wix.api.DecimalValueOptions | null);
                '.wix.api.customValidation'?: ($wrapper.wix.api.CustomValidationError | null);
            }
            export namespace FieldOptions {
                export enum CType {
                    STRING = "STRING",
                    CORD = "CORD",
                    STRING_PIECE = "STRING_PIECE",
                }
                export enum JSType {
                    JS_NORMAL = "JS_NORMAL",
                    JS_STRING = "JS_STRING",
                    JS_NUMBER = "JS_NUMBER",
                }
            }
            export interface OneofOptions {
                uninterpretedOption?: ($wrapper.google.protobuf.UninterpretedOption[] | null);
                '.wix.api.alignedWithEnum'?: ($wrapper.wix.api.AlignedWithEnum | null);
            }
            export interface EnumOptions {
                allowAlias?: (boolean | null);
                deprecated?: (boolean | null);
                uninterpretedOption?: ($wrapper.google.protobuf.UninterpretedOption[] | null);
            }
            export interface EnumValueOptions {
                deprecated?: (boolean | null);
                uninterpretedOption?: ($wrapper.google.protobuf.UninterpretedOption[] | null);
                '.wix.api.enumMaturity'?: ($wrapper.wix.api.Maturity | null);
                '.wix.api.enumExposure'?: ($wrapper.wix.api.Exposure | null);
            }
            export interface ServiceOptions {
                deprecated?: (boolean | null);
                uninterpretedOption?: ($wrapper.google.protobuf.UninterpretedOption[] | null);
                '.wix.api.serviceMaturity'?: ($wrapper.wix.api.Maturity | null);
                '.wix.api.serviceExposure'?: ($wrapper.wix.api.Exposure | null);
                '.wix.api.serviceDeprecated'?: ($wrapper.wix.api.Deprecated | null);
                '.wix.api.appendixFiles'?: ($wrapper.wix.api.ServiceAppendix[] | null);
            }
            export interface MethodOptions {
                deprecated?: (boolean | null);
                idempotencyLevel?: ($wrapper.google.protobuf.MethodOptions.IdempotencyLevel | null);
                uninterpretedOption?: ($wrapper.google.protobuf.UninterpretedOption[] | null);
                '.wix.api.exposure'?: ($wrapper.wix.api.Exposure | null);
                '.wix.api.maturity'?: ($wrapper.wix.api.Maturity | null);
                '.wix.api.cacheable'?: ($wrapper.wix.api.CacheSettings | null);
                '.wix.api.deprecated'?: ($wrapper.wix.api.Deprecated | null);
                '.wix.api.crud'?: ($wrapper.wix.api.Crud | null);
                '.wix.api.hookable'?: ($wrapper.wix.api.Hookable | null);
                '.wix.api.acceptsLinguist'?: (boolean | null);
                '.wix.api.required'?: (string[] | null);
                '.wix.api.writable'?: (string[] | null);
                '.wix.api.error'?: ($wrapper.wix.api.Error[] | null);
                '.wix.api.customValidationError'?: ($wrapper.wix.api.CustomValidationError[] | null);
                '.wix.api.inheritCrudErrors'?: ($wrapper.wix.api.InheritCrudErrors[] | null);
            }
            export namespace MethodOptions {
                export enum IdempotencyLevel {
                    IDEMPOTENCY_UNKNOWN = "IDEMPOTENCY_UNKNOWN",
                    NO_SIDE_EFFECTS = "NO_SIDE_EFFECTS",
                    IDEMPOTENT = "IDEMPOTENT",
                }
            }
            export interface UninterpretedOption {
                name?: ($wrapper.google.protobuf.UninterpretedOption.NamePart[] | null);
                identifierValue?: (string | null);
                positiveIntValue?: ((number | string) | null);
                negativeIntValue?: ((number | string) | null);
                doubleValue?: (number | null);
                stringValue?: (Uint8Array | null);
                aggregateValue?: (string | null);
            }
            export namespace UninterpretedOption {
                export interface NamePart {
                    namePart?: (string | null);
                    isExtension?: (boolean | null);
                }
            }
            export interface SourceCodeInfo {
                location?: ($wrapper.google.protobuf.SourceCodeInfo.Location[] | null);
            }
            export namespace SourceCodeInfo {
                export interface Location {
                    path?: (number[] | null);
                    span?: (number[] | null);
                    leadingComments?: (string | null);
                    trailingComments?: (string | null);
                    leadingDetachedComments?: (string[] | null);
                }
            }
            export interface GeneratedCodeInfo {
                annotation?: ($wrapper.google.protobuf.GeneratedCodeInfo.Annotation[] | null);
            }
            export namespace GeneratedCodeInfo {
                export interface Annotation {
                    path?: (number[] | null);
                    sourceFile?: (string | null);
                    begin?: (number | null);
                    end?: (number | null);
                }
            }
        }
    }
}

export default $wrapper;
