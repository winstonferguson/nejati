

declare namespace $requests {
    export namespace wix {
        export namespace common {
            export interface Address {
                country?: string;
                subdivision?: string;
                city?: string;
                postalCode?: string;
                streetAddress?: $requests.wix.common.StreetAddress;
                addressLine?: string;
                addressLine2?: string;
                formattedAddress?: string;
                hint?: string;
                geocode?: $requests.wix.common.AddressLocation;
                countryFullname?: string;
                subdivisionFullname?: string;
                subdivisions: $requests.wix.common.Subdivision[];
            }
            export interface Subdivision {
                code: string;
                name: string;
                type: $requests.wix.common.Subdivision.SubdivisionType;
                typeInfo?: string;
            }
            export namespace Subdivision {
                export enum SubdivisionType {
                    UNKNOWN_SUBDIVISION_TYPE = "UNKNOWN_SUBDIVISION_TYPE",
                    ADMINISTRATIVE_AREA_LEVEL_1 = "ADMINISTRATIVE_AREA_LEVEL_1",
                    ADMINISTRATIVE_AREA_LEVEL_2 = "ADMINISTRATIVE_AREA_LEVEL_2",
                    ADMINISTRATIVE_AREA_LEVEL_3 = "ADMINISTRATIVE_AREA_LEVEL_3",
                    ADMINISTRATIVE_AREA_LEVEL_4 = "ADMINISTRATIVE_AREA_LEVEL_4",
                    ADMINISTRATIVE_AREA_LEVEL_5 = "ADMINISTRATIVE_AREA_LEVEL_5",
                    COUNTRY = "COUNTRY",
                }
            }
            export interface StreetAddress {
                number: string;
                name: string;
                apt: string;
                formattedAddressLine?: string;
            }
            export interface AddressContactDetails {
                fullName?: string;
                phone?: string;
                company?: string;
                email?: string;
            }
            export interface FullAddressContactDetails {
                firstName?: string;
                lastName?: string;
                fullName?: string;
                phone?: string;
                company?: string;
                email?: string;
                vatId?: $requests.wix.common.VatId;
            }
            export interface VatId {
                id: string;
                type: $requests.wix.common.VatType;
            }
            export enum VatType {
                UNSPECIFIED = "UNSPECIFIED",
                CPF = "CPF",
                CNPJ = "CNPJ",
            }
            export interface AddressLocation {
                latitude?: number;
                longitude?: number;
            }
            export interface BulkActionMetadata {
                totalSuccesses: number;
                totalFailures: number;
                undetailedFailures: number;
            }
            export interface ItemMetadata {
                id?: string;
                originalIndex: number;
                success: boolean;
                error?: $requests.wix.api.ApplicationError;
            }
            export enum BulkActionType {
                UNKNOWN_ACTION_TYPE = "UNKNOWN_ACTION_TYPE",
                INSERT = "INSERT",
                UPDATE = "UPDATE",
                DELETE = "DELETE",
            }
            export interface IdentificationData {
                contactId?: string;
                identityType: $requests.wix.common.IdentificationData.IdentityType;
                anonymousVisitorId?: string;
                memberId?: string;
                wixUserId?: string;
                appId?: string;
            }
            export namespace IdentificationData {
                export enum IdentityType {
                    UNKNOWN = "UNKNOWN",
                    ANONYMOUS_VISITOR = "ANONYMOUS_VISITOR",
                    MEMBER = "MEMBER",
                    WIX_USER = "WIX_USER",
                    APP = "APP",
                }
            }
            export interface Image {
                id: string;
                url: string;
                height: number;
                width: number;
                altText?: string;
                urlExpirationDate?: Date;
                filename?: string;
                sizeInBytes?: string;
            }
            export interface Video {
                id: string;
                url: string;
                height: number;
                width: number;
                thumbnail?: $requests.wix.common.Image;
            }
            export interface VideoV2 {
                id: string;
                url: string;
                resolutions: $requests.wix.common.VideoResolution[];
                filename?: string;
                posters: $requests.wix.common.Image[];
                sizeInBytes?: string;
                urlExpirationDate?: Date;
            }
            export interface VideoResolution {
                url: string;
                height: number;
                width: number;
                poster?: $requests.wix.common.Image;
                format: string;
                urlExpirationDate?: Date;
                sizeInBytes?: string;
                quality?: string;
                filename?: string;
                durationInSeconds?: number;
                private?: boolean;
                assetKey?: string;
            }
            export interface Audio {
                id: string;
                url: string;
                urlExpirationDate?: Date;
                sizeInBytes?: string;
                filename?: string;
                duration?: number;
                private?: boolean;
                assetKey?: string;
                format?: string;
                quality?: string;
            }
            export interface Document {
                id: string;
                url: string;
                urlExpirationDate?: Date;
                sizeInBytes?: string;
                filename?: string;
            }
            export interface Model3D {
                id: string;
                url: string;
                thumbnail?: $requests.wix.common.Image;
                altText?: string;
                urlExpirationDate?: Date;
                filename?: string;
                sizeInBytes?: string;
            }
            export interface Archive {
                id: string;
                url: string;
                urlExpirationDate?: Date;
                sizeInBytes?: string;
                filename?: string;
            }
            export interface MediaItem {
                image?: $requests.wix.common.Image;
                video?: $requests.wix.common.Video;
                document?: $requests.wix.common.Document;
            }
            export interface Money {
                value: string;
                currency: string;
                formattedValue?: string;
            }
            export interface PageUrl {
                base: string;
                path: string;
            }
            export interface PageUrlV2 {
                relativePath: string;
                url?: string;
            }
            export interface Paging {
                limit?: number;
                offset?: number;
            }
            export interface CursorPaging {
                limit?: number;
                cursor?: string;
            }
            export interface PagingMetadata {
                count?: number;
                offset?: number;
                total?: number;
                tooManyToCount?: boolean;
                hasNext?: boolean;
            }
            export interface PagingMetadataV2 {
                count?: number;
                offset?: number;
                total?: number;
                tooManyToCount?: boolean;
                cursors?: $requests.wix.common.Cursors;
                hasNext?: boolean;
            }
            export interface CursorPagingMetadata {
                count?: number;
                cursors?: $requests.wix.common.Cursors;
                hasNext?: boolean;
            }
            export interface Cursors {
                next?: string;
                prev?: string;
            }
            export interface Sorting {
                fieldName: string;
                order: $requests.wix.common.SortOrder;
            }
            export enum SortOrder {
                ASC = "ASC",
                DESC = "DESC",
            }
            export namespace spi {
                export interface SpiBaseUri {
                    baseUri: string;
                    alternativeUris: $requests.wix.common.spi.SpiBaseUri.AlternativeUri[];
                }
                export namespace SpiBaseUri {
                    export interface AlternativeUri {
                        methodName: string;
                        absoluteUri: string;
                    }
                }
                /**
                 * this message is not directly used by any service,
                 * it exists to describe the expected parameters that SHOULD be provided to invoked Velo methods as part of open-platform.
                 * e.g. SPIs, event-handlers, etc..
                 * NOTE: this context object MUST be provided as the last argument in each Velo method signature.
                 * 
                 * Example:
                 * ```typescript
                 * export function wixStores_onOrderCanceled(event: OrderCanceledEvent, context: Context) {
                 * ...
                 * }
                 * ```
                 */
                export interface Context {
                    requestId?: string;
                    currency?: string;
                    identity?: $requests.wix.common.spi.Context.IdentificationData;
                    languages: string[];
                    instanceId?: string;
                }
                export namespace Context {
                    export interface IdentificationData {
                        identityType: $requests.wix.common.spi.Context.IdentificationData.IdentityType;
                        anonymousVisitorId?: string;
                        memberId?: string;
                        wixUserId?: string;
                        appId?: string;
                    }
                    export namespace IdentificationData {
                        export enum IdentityType {
                            UNKNOWN = "UNKNOWN",
                            ANONYMOUS_VISITOR = "ANONYMOUS_VISITOR",
                            MEMBER = "MEMBER",
                            WIX_USER = "WIX_USER",
                            APP = "APP",
                        }
                    }
                }
            }
            export interface WixLink {
                external?: $requests.wix.common.ExternalLink;
                page?: $requests.wix.common.PageLink;
                anchor?: $requests.wix.common.AnchorLink;
                dynamicPage?: $requests.wix.common.DynamicPageLink;
                document?: $requests.wix.common.DocumentLink;
                email?: $requests.wix.common.EmailLink;
                phone?: $requests.wix.common.PhoneLink;
                address?: $requests.wix.common.AddressLink;
                whatsApp?: $requests.wix.common.WhatsAppLink;
            }
            export interface ExternalLink {
                url: string;
                target?: string;
            }
            export interface PageLink {
                pageId: string;
                target?: string;
            }
            export interface AnchorLink {
                anchorName: string;
                anchorDataId: string;
                pageId: string;
            }
            export interface DynamicPageLink {
                routerId: string;
                innerRoute: string;
                anchorDataId?: string;
            }
            export interface DocumentLink {
                docId: string;
                name?: string;
                indexable: boolean;
            }
            export interface EmailLink {
                recipient: string;
                subject?: string;
                body?: string;
            }
            export interface PhoneLink {
                phoneNumber: string;
            }
            export interface AddressLink {
                address: string;
            }
            export interface WhatsAppLink {
                phoneNumber: string;
            }
        }
        export namespace api {
            export interface ReferenceEntityField {
                path: string;
            }
            export interface CacheSettings {
                maxAgeSeconds: number;
            }
            export interface FieldSet {
                field: string[];
            }
            export interface Deprecated {
                replacedBy: string;
                targetRemovalDate: string;
            }
            export interface Unique {
                field: string[];
            }
            export interface Crud {
                method: $requests.wix.api.Crud.Method;
                createOptions?: $requests.wix.api.CreateMethodOptions;
                getOptions?: $requests.wix.api.GetItemMethodOptions;
                updateOptions?: $requests.wix.api.UpdateMethodOptions;
                deleteOptions?: $requests.wix.api.DeleteMethodOptions;
                listOptions?: $requests.wix.api.ListMethodOptions;
                queryOptions?: $requests.wix.api.QueryMethodOptions;
                searchOptions?: $requests.wix.api.SearchMethodOptions;
                bulkCreateOptions?: $requests.wix.api.BulkCreateMethodOptions;
                bulkUpdateOptions?: $requests.wix.api.BulkUpdateMethodOptions;
                bulkUpdateByFilterOptions?: $requests.wix.api.BulkUpdateByFilterMethodOptions;
                bulkDeleteOptions?: $requests.wix.api.BulkDeleteMethodOptions;
                bulkDeleteByFilterOptions?: $requests.wix.api.BulkDeleteByFilterMethodOptions;
                upsertOptions?: $requests.wix.api.UpsertMethodOptions;
                bulkUpsertOptions?: $requests.wix.api.BulkUpsertMethodOptions;
                listDeletedOptions?: $requests.wix.api.ListDeletedMethodOptions;
                getDeletedOptions?: $requests.wix.api.GetDeletedMethodOptions;
                restoreFromTrashbinOptions?: $requests.wix.api.RestoreFromTrashbinMethodOptions;
                removeFromTrashbinOptions?: $requests.wix.api.RemoveFromTrashbinMethodOptions;
                countOptions?: $requests.wix.api.CountOptions;
            }
            export namespace Crud {
                export enum Method {
                    UNKNOWN_METHOD = "UNKNOWN_METHOD",
                    CREATE = "CREATE",
                    GET_ITEM = "GET_ITEM",
                    UPDATE = "UPDATE",
                    DELETE = "DELETE",
                    UPSERT = "UPSERT",
                    LIST = "LIST",
                    QUERY = "QUERY",
                    SEARCH = "SEARCH",
                    BULK_CREATE = "BULK_CREATE",
                    BULK_UPDATE = "BULK_UPDATE",
                    BULK_UPDATE_BY_FILTER = "BULK_UPDATE_BY_FILTER",
                    BULK_DELETE = "BULK_DELETE",
                    BULK_DELETE_BY_FILTER = "BULK_DELETE_BY_FILTER",
                    BULK_UPSERT = "BULK_UPSERT",
                    LIST_DELETED = "LIST_DELETED",
                    GET_DELETED = "GET_DELETED",
                    RESTORE_FROM_TRASHBIN = "RESTORE_FROM_TRASHBIN",
                    REMOVE_FROM_TRASHBIN = "REMOVE_FROM_TRASHBIN",
                    COUNT = "COUNT",
                }
            }
            export interface Paging {
                type: $requests.wix.api.Paging.Type;
                pagingMetadataField: string;
            }
            export namespace Paging {
                export enum Type {
                    UNKNOWN_TYPE = "UNKNOWN_TYPE",
                    OFFSET = "OFFSET",
                    CURSOR = "CURSOR",
                }
            }
            export interface CreateMethodOptions {
                itemField: string;
            }
            export interface GetItemMethodOptions {
                itemField: string;
                idField: string;
            }
            export interface UpdateMethodOptions {
                itemField: string;
                fieldmaskField: string;
            }
            export interface UpsertMethodOptions {
                itemField: string;
                fieldmaskField: string;
            }
            export interface DeleteMethodOptions {
                idField: string;
            }
            export interface ListMethodOptions {
                idsField: string;
                itemsField: string;
                paging?: $requests.wix.api.Paging;
                meAliasableField: string[];
            }
            export interface QueryMethodOptions {
                queryField: string;
                itemsField: string;
                paging?: $requests.wix.api.Paging;
                wql?: $requests.wix.api.Wql;
                meAliasableField: string[];
            }
            export interface SearchMethodOptions {
                searchField: string;
                itemsField: string;
                paging?: $requests.wix.api.Paging;
                wql?: $requests.wix.api.Wql;
                meAliasableField: string[];
                search: $requests.wix.api.Search[];
            }
            export interface BulkCreateMethodOptions {
                itemField: string;
            }
            export interface BulkUpdateMethodOptions {
                itemField: string;
                fieldmaskField: string;
            }
            export interface BulkUpdateByFilterMethodOptions {
                itemField: string;
                fieldmaskField: string;
                filterField: string;
            }
            export interface BulkUpsertMethodOptions {
                itemField: string;
                fieldmaskField: string;
            }
            export interface BulkDeleteMethodOptions {
                idsField: string;
            }
            export interface BulkDeleteByFilterMethodOptions {
                filterField: string;
            }
            export interface ListDeletedMethodOptions {
                idsField: string;
                itemsField: string;
                paging?: $requests.wix.api.Paging;
                meAliasableField: string[];
            }
            export interface GetDeletedMethodOptions {
                itemField: string;
                idField: string;
            }
            export interface RestoreFromTrashbinMethodOptions {
                itemField: string;
                idField: string;
            }
            export interface RemoveFromTrashbinMethodOptions {
                idField: string;
            }
            export interface CountOptions {
                inheritWqlFrom: string;
            }
            export interface Wql {
                operatorFieldSupport: $requests.wix.api.Wql.OperatorFieldSupport[];
                pattern: $requests.wix.api.Wql.OperatorFieldSupport[];
            }
            export namespace Wql {
                export enum Operator {
                    ALL_APPLICABLE_OPERATORS = "ALL_APPLICABLE_OPERATORS",
                    EQ = "EQ",
                    GT = "GT",
                    GTE = "GTE",
                    IN = "IN",
                    LT = "LT",
                    LTE = "LTE",
                    NE = "NE",
                    NIN = "NIN",
                    BEGINS = "BEGINS",
                    EXISTS = "EXISTS",
                    ALL = "ALL",
                    HAS_ALL = "HAS_ALL",
                    ANY = "ANY",
                    HAS_SOME = "HAS_SOME",
                    EMPTY = "EMPTY",
                }
                export enum Sort {
                    NONE = "NONE",
                    ASC = "ASC",
                    DESC = "DESC",
                    BOTH = "BOTH",
                }
                export interface RequiredFields {
                    field: string[];
                    requiredField: $requests.wix.api.Wql.RequiredFields.RequiredField[];
                }
                export namespace RequiredFields {
                    export interface RequiredField {
                        path: string;
                        sort: $requests.wix.api.Wql.Sort;
                    }
                }
                export interface OperatorFieldSupport {
                    operator: $requests.wix.api.Wql.Operator[];
                    glob: string;
                    field: string[];
                    sort: $requests.wix.api.Wql.Sort;
                    requiredFields: $requests.wix.api.Wql.RequiredFields[];
                    maturity: $requests.wix.api.Maturity;
                }
            }
            export interface Search {
                field: string[];
                maturity: $requests.wix.api.Maturity;
            }
            export interface Hookable {
            }
            export interface Translatable {
                name: string;
                hidden: boolean;
                grouping: string;
                type: $requests.wix.api.Translatable.Type;
                displayOnly: boolean;
            }
            export namespace Translatable {
                export enum Type {
                    UNDEFINED_TYPE = "UNDEFINED_TYPE",
                    SHORT_TEXT = "SHORT_TEXT",
                    LONG_TEXT = "LONG_TEXT",
                    RICH_TEXT = "RICH_TEXT",
                    RICH_CONTENT_EDITOR = "RICH_CONTENT_EDITOR",
                    SELECTION = "SELECTION",
                    MULTI_SELECTION = "MULTI_SELECTION",
                    DOCUMENT = "DOCUMENT",
                    IMAGE = "IMAGE",
                    VIDEO = "VIDEO",
                    IMAGE_LINK = "IMAGE_LINK",
                }
            }
            export interface Conditional {
                permission: string;
                requestedField: string;
            }
            export interface ServiceAppendix {
                type: $requests.wix.api.ServiceAppendix.Type;
                path: string;
            }
            export namespace ServiceAppendix {
                export enum Type {
                    UNKNOWN_APPENDIX_TYPE = "UNKNOWN_APPENDIX_TYPE",
                    NILE = "NILE",
                    MESSAGE_BUS = "MESSAGE_BUS",
                }
            }
            export enum Exposure {
                PRIVATE = "PRIVATE",
                INTERNAL = "INTERNAL",
                PUBLIC = "PUBLIC",
            }
            export enum Maturity {
                ALPHA = "ALPHA",
                BETA = "BETA",
                IA = "IA",
                GA = "GA",
                NOT_IMPLEMENTED = "NOT_IMPLEMENTED",
            }
            /**
             * Decimal value validation rules.
             * Based on java.math.BigDecimal, implies (wix.api.format) = DECIMAL_VALUE
             */
            export interface DecimalValueOptions {
                lte: string;
                gte: string;
                lt: string;
                gt: string;
                maxScale: number;
            }
            export interface AlignedWithEnum {
                field: string;
            }
            export enum Format {
                EMAIL = "EMAIL",
                HOSTNAME = "HOSTNAME",
                IPV4 = "IPV4",
                IPV6 = "IPV6",
                URI = "URI",
                WEB_URL = "WEB_URL",
                PHONE = "PHONE",
                CREDIT_CARD = "CREDIT_CARD",
                GUID = "GUID",
                COUNTRY = "COUNTRY",
                LANGUAGE = "LANGUAGE",
                DECIMAL_VALUE = "DECIMAL_VALUE",
                CURRENCY = "CURRENCY",
                LANGUAGE_TAG = "LANGUAGE_TAG",
                COLOR_HEX = "COLOR_HEX",
                LOCAL_DATE = "LOCAL_DATE",
                LOCAL_TIME = "LOCAL_TIME",
                LOCAL_DATE_TIME = "LOCAL_DATE_TIME",
                URL_SLUG = "URL_SLUG",
                SYSTEM_SLUG = "SYSTEM_SLUG",
            }
            /**
             * ApplicationError: named Error for backwards compatibility
             */
            export interface Error {
                httpCode: $requests.wix.api.StatusCodes.HttpStatusCode;
                applicationCode: string;
                data: string;
            }
            /**
             * CustomValidationError: field level validation, only declare when you have specific validation in your service that is not coming from infra
             */
            export interface CustomValidationError {
                ruleName: string;
                data: string;
            }
            /**
             * InheritCrudErrors: does this method throw standard crud errors?
             */
            export interface InheritCrudErrors {
                method: $requests.wix.api.Crud.Method;
            }
            export interface StatusCodes {
            }
            export namespace StatusCodes {
                export enum HttpStatusCode {
                    OK = "OK",
                    UNAUTHENTICATED = "UNAUTHENTICATED",
                    PERMISSION_DENIED = "PERMISSION_DENIED",
                    INVALID_ARGUMENT = "INVALID_ARGUMENT",
                    NOT_FOUND = "NOT_FOUND",
                    INTERNAL = "INTERNAL",
                    UNAVAILABLE = "UNAVAILABLE",
                    RESOURCE_EXHAUSTED = "RESOURCE_EXHAUSTED",
                    CANCELED = "CANCELED",
                    ALREADY_EXISTS = "ALREADY_EXISTS",
                    FAILED_PRECONDITION = "FAILED_PRECONDITION",
                }
            }
            export interface Details {
                applicationError?: $requests.wix.api.ApplicationError;
                validationError?: $requests.wix.api.ValidationError;
                tracing?: { [k: string]: string };
            }
            export interface ApplicationError {
                code: string;
                description: string;
                data?: { [key: string]: any };
            }
            /**
             * example result:
             * {
             * "fieldViolations": [
             * {
             * "field": "fieldA",
             * "description": "invalid music note. supported notes: [do,re,mi,fa,sol,la,ti]",
             * "violatedRule": "OTHER",
             * "ruleName": "INVALID_NOTE",
             * "data": {
             * "value": "FI"
             * }
             * },
             * {
             * "field": "fieldB",
             * "description": "field value out of range. supported range: [0-20]",
             * "violatedRule": "MAX",
             * "data": {
             * "threshold": 20
             * }
             * },
             * {
             * "field": "fieldC",
             * "description": "invalid phone number. provide a valid phone number of size: [7-12], supported characters: [0-9, +, -, (, )]",
             * "violatedRule": "FORMAT",
             * "data": {
             * "type": "PHONE"
             * }
             * }
             * ]
             * }
             */
            export interface ValidationError {
                fieldViolations: $requests.wix.api.ValidationError.FieldViolation[];
            }
            export namespace ValidationError {
                export enum RuleType {
                    VALIDATION = "VALIDATION",
                    OTHER = "OTHER",
                    MAX = "MAX",
                    MIN = "MIN",
                    MAX_LENGTH = "MAX_LENGTH",
                    MIN_LENGTH = "MIN_LENGTH",
                    MAX_SIZE = "MAX_SIZE",
                    MIN_SIZE = "MIN_SIZE",
                    FORMAT = "FORMAT",
                    DECIMAL_LTE = "DECIMAL_LTE",
                    DECIMAL_GTE = "DECIMAL_GTE",
                    DECIMAL_LT = "DECIMAL_LT",
                    DECIMAL_GT = "DECIMAL_GT",
                    DECIMAL_MAX_SCALE = "DECIMAL_MAX_SCALE",
                    INVALID_ENUM_VALUE = "INVALID_ENUM_VALUE",
                    REQUIRED_FIELD = "REQUIRED_FIELD",
                    FIELD_NOT_ALLOWED = "FIELD_NOT_ALLOWED",
                    ONE_OF_ALIGNMENT = "ONE_OF_ALIGNMENT",
                }
                export interface FieldViolation {
                    field: string;
                    description: string;
                    violatedRule: $requests.wix.api.ValidationError.RuleType;
                    ruleName?: string;
                    data?: { [key: string]: any };
                }
            }
            export interface LimitRuleInt32DataPayload {
                threshold: number;
            }
            export interface LimitRuleDoubleDataPayload {
                threshold: number;
            }
            export interface LimitRuleStringDataPayload {
                threshold: string;
            }
            export interface FormatRuleDataPayload {
                type: string;
            }
            export interface EnumRuleDataPayload {
                supported: string[];
            }
        }
    }
    export namespace google {
        export namespace protobuf {
            export interface FileDescriptorSet {
                file: $requests.google.protobuf.FileDescriptorProto[];
            }
            export interface FileDescriptorProto {
                name: string;
                package: string;
                dependency: string[];
                publicDependency: number[];
                weakDependency: number[];
                messageType: $requests.google.protobuf.DescriptorProto[];
                enumType: $requests.google.protobuf.EnumDescriptorProto[];
                service: $requests.google.protobuf.ServiceDescriptorProto[];
                extension: $requests.google.protobuf.FieldDescriptorProto[];
                options?: $requests.google.protobuf.FileOptions;
                sourceCodeInfo?: $requests.google.protobuf.SourceCodeInfo;
                syntax: string;
            }
            export interface DescriptorProto {
                name: string;
                field: $requests.google.protobuf.FieldDescriptorProto[];
                extension: $requests.google.protobuf.FieldDescriptorProto[];
                nestedType: $requests.google.protobuf.DescriptorProto[];
                enumType: $requests.google.protobuf.EnumDescriptorProto[];
                extensionRange: $requests.google.protobuf.DescriptorProto.ExtensionRange[];
                oneofDecl: $requests.google.protobuf.OneofDescriptorProto[];
                options?: $requests.google.protobuf.MessageOptions;
                reservedRange: $requests.google.protobuf.DescriptorProto.ReservedRange[];
                reservedName: string[];
            }
            export namespace DescriptorProto {
                export interface ExtensionRange {
                    start: number;
                    end: number;
                    options?: $requests.google.protobuf.ExtensionRangeOptions;
                }
                export interface ReservedRange {
                    start: number;
                    end: number;
                }
            }
            export interface ExtensionRangeOptions {
                uninterpretedOption: $requests.google.protobuf.UninterpretedOption[];
            }
            export interface FieldDescriptorProto {
                name: string;
                number: number;
                label: $requests.google.protobuf.FieldDescriptorProto.Label;
                type: $requests.google.protobuf.FieldDescriptorProto.Type;
                typeName: string;
                extendee: string;
                defaultValue: string;
                oneofIndex: number;
                jsonName: string;
                options?: $requests.google.protobuf.FieldOptions;
                proto3Optional: boolean;
            }
            export namespace FieldDescriptorProto {
                export enum Type {
                    TYPE_DOUBLE = "TYPE_DOUBLE",
                    TYPE_FLOAT = "TYPE_FLOAT",
                    TYPE_INT64 = "TYPE_INT64",
                    TYPE_UINT64 = "TYPE_UINT64",
                    TYPE_INT32 = "TYPE_INT32",
                    TYPE_FIXED64 = "TYPE_FIXED64",
                    TYPE_FIXED32 = "TYPE_FIXED32",
                    TYPE_BOOL = "TYPE_BOOL",
                    TYPE_STRING = "TYPE_STRING",
                    TYPE_GROUP = "TYPE_GROUP",
                    TYPE_MESSAGE = "TYPE_MESSAGE",
                    TYPE_BYTES = "TYPE_BYTES",
                    TYPE_UINT32 = "TYPE_UINT32",
                    TYPE_ENUM = "TYPE_ENUM",
                    TYPE_SFIXED32 = "TYPE_SFIXED32",
                    TYPE_SFIXED64 = "TYPE_SFIXED64",
                    TYPE_SINT32 = "TYPE_SINT32",
                    TYPE_SINT64 = "TYPE_SINT64",
                }
                export enum Label {
                    LABEL_OPTIONAL = "LABEL_OPTIONAL",
                    LABEL_REQUIRED = "LABEL_REQUIRED",
                    LABEL_REPEATED = "LABEL_REPEATED",
                }
            }
            export interface OneofDescriptorProto {
                name: string;
                options?: $requests.google.protobuf.OneofOptions;
            }
            export interface EnumDescriptorProto {
                name: string;
                value: $requests.google.protobuf.EnumValueDescriptorProto[];
                options?: $requests.google.protobuf.EnumOptions;
                reservedRange: $requests.google.protobuf.EnumDescriptorProto.EnumReservedRange[];
                reservedName: string[];
            }
            export namespace EnumDescriptorProto {
                export interface EnumReservedRange {
                    start: number;
                    end: number;
                }
            }
            export interface EnumValueDescriptorProto {
                name: string;
                number: number;
                options?: $requests.google.protobuf.EnumValueOptions;
            }
            export interface ServiceDescriptorProto {
                name: string;
                method: $requests.google.protobuf.MethodDescriptorProto[];
                options?: $requests.google.protobuf.ServiceOptions;
            }
            export interface MethodDescriptorProto {
                name: string;
                inputType: string;
                outputType: string;
                options?: $requests.google.protobuf.MethodOptions;
                clientStreaming: boolean;
                serverStreaming: boolean;
            }
            export interface FileOptions {
                javaPackage: string;
                javaOuterClassname: string;
                javaMultipleFiles: boolean;
                javaGenerateEqualsAndHash: boolean;
                javaStringCheckUtf8: boolean;
                optimizeFor: $requests.google.protobuf.FileOptions.OptimizeMode;
                goPackage: string;
                ccGenericServices: boolean;
                javaGenericServices: boolean;
                pyGenericServices: boolean;
                phpGenericServices: boolean;
                deprecated: boolean;
                ccEnableArenas: boolean;
                objcClassPrefix: string;
                csharpNamespace: string;
                swiftPrefix: string;
                phpClassPrefix: string;
                phpNamespace: string;
                phpMetadataNamespace: string;
                rubyPackage: string;
                uninterpretedOption: $requests.google.protobuf.UninterpretedOption[];
            }
            export namespace FileOptions {
                export enum OptimizeMode {
                    SPEED = "SPEED",
                    CODE_SIZE = "CODE_SIZE",
                    LITE_RUNTIME = "LITE_RUNTIME",
                }
            }
            export interface MessageOptions {
                messageSetWireFormat: boolean;
                noStandardDescriptorAccessor: boolean;
                deprecated: boolean;
                mapEntry: boolean;
                uninterpretedOption: $requests.google.protobuf.UninterpretedOption[];
                '.wix.api.decompositeOf': string;
                '.wix.api.decompositionMinimumFields': $requests.wix.api.FieldSet[];
                '.wix.api.unwrapArrayValue': boolean;
                '.wix.api.messageDeprecated'?: $requests.wix.api.Deprecated;
                '.wix.api.unique': $requests.wix.api.Unique[];
            }
            export interface FieldOptions {
                ctype: $requests.google.protobuf.FieldOptions.CType;
                packed: boolean;
                jstype: $requests.google.protobuf.FieldOptions.JSType;
                lazy: boolean;
                deprecated: boolean;
                weak: boolean;
                uninterpretedOption: $requests.google.protobuf.UninterpretedOption[];
                '.wix.api.fieldExposure': $requests.wix.api.Exposure;
                '.wix.api.fieldMaturity': $requests.wix.api.Maturity;
                '.wix.api.pii': boolean;
                '.wix.api.referencedEntity': string;
                '.wix.api.referencedEntityField'?: $requests.wix.api.ReferenceEntityField;
                '.wix.api.fieldDeprecated'?: $requests.wix.api.Deprecated;
                '.wix.api.translatable'?: $requests.wix.api.Translatable;
                '.wix.api.sampleData': string;
                '.wix.api.conditional'?: $requests.wix.api.Conditional;
                '.wix.api.max': number;
                '.wix.api.min': number;
                '.wix.api.maxLength': number;
                '.wix.api.minLength': number;
                '.wix.api.maxSize': number;
                '.wix.api.minSize': number;
                '.wix.api.format': $requests.wix.api.Format;
                '.wix.api.readOnly': boolean;
                '.wix.api.immutable': boolean;
                '.wix.api.decimalValue'?: $requests.wix.api.DecimalValueOptions;
                '.wix.api.customValidation'?: $requests.wix.api.CustomValidationError;
            }
            export namespace FieldOptions {
                export enum CType {
                    STRING = "STRING",
                    CORD = "CORD",
                    STRING_PIECE = "STRING_PIECE",
                }
                export enum JSType {
                    JS_NORMAL = "JS_NORMAL",
                    JS_STRING = "JS_STRING",
                    JS_NUMBER = "JS_NUMBER",
                }
            }
            export interface OneofOptions {
                uninterpretedOption: $requests.google.protobuf.UninterpretedOption[];
                '.wix.api.alignedWithEnum'?: $requests.wix.api.AlignedWithEnum;
            }
            export interface EnumOptions {
                allowAlias: boolean;
                deprecated: boolean;
                uninterpretedOption: $requests.google.protobuf.UninterpretedOption[];
            }
            export interface EnumValueOptions {
                deprecated: boolean;
                uninterpretedOption: $requests.google.protobuf.UninterpretedOption[];
                '.wix.api.enumMaturity': $requests.wix.api.Maturity;
                '.wix.api.enumExposure': $requests.wix.api.Exposure;
            }
            export interface ServiceOptions {
                deprecated: boolean;
                uninterpretedOption: $requests.google.protobuf.UninterpretedOption[];
                '.wix.api.serviceMaturity': $requests.wix.api.Maturity;
                '.wix.api.serviceExposure': $requests.wix.api.Exposure;
                '.wix.api.serviceDeprecated'?: $requests.wix.api.Deprecated;
                '.wix.api.appendixFiles': $requests.wix.api.ServiceAppendix[];
            }
            export interface MethodOptions {
                deprecated: boolean;
                idempotencyLevel: $requests.google.protobuf.MethodOptions.IdempotencyLevel;
                uninterpretedOption: $requests.google.protobuf.UninterpretedOption[];
                '.wix.api.exposure': $requests.wix.api.Exposure;
                '.wix.api.maturity': $requests.wix.api.Maturity;
                '.wix.api.cacheable'?: $requests.wix.api.CacheSettings;
                '.wix.api.deprecated'?: $requests.wix.api.Deprecated;
                '.wix.api.crud'?: $requests.wix.api.Crud;
                '.wix.api.hookable'?: $requests.wix.api.Hookable;
                '.wix.api.acceptsLinguist': boolean;
                '.wix.api.required': string[];
                '.wix.api.writable': string[];
                '.wix.api.error': $requests.wix.api.Error[];
                '.wix.api.customValidationError': $requests.wix.api.CustomValidationError[];
                '.wix.api.inheritCrudErrors': $requests.wix.api.InheritCrudErrors[];
            }
            export namespace MethodOptions {
                export enum IdempotencyLevel {
                    IDEMPOTENCY_UNKNOWN = "IDEMPOTENCY_UNKNOWN",
                    NO_SIDE_EFFECTS = "NO_SIDE_EFFECTS",
                    IDEMPOTENT = "IDEMPOTENT",
                }
            }
            export interface UninterpretedOption {
                name: $requests.google.protobuf.UninterpretedOption.NamePart[];
                identifierValue: string;
                positiveIntValue: (number | string);
                negativeIntValue: (number | string);
                doubleValue: number;
                stringValue: Uint8Array;
                aggregateValue: string;
            }
            export namespace UninterpretedOption {
                export interface NamePart {
                    namePart: string;
                    isExtension: boolean;
                }
            }
            export interface SourceCodeInfo {
                location: $requests.google.protobuf.SourceCodeInfo.Location[];
            }
            export namespace SourceCodeInfo {
                export interface Location {
                    path: number[];
                    span: number[];
                    leadingComments: string;
                    trailingComments: string;
                    leadingDetachedComments: string[];
                }
            }
            export interface GeneratedCodeInfo {
                annotation: $requests.google.protobuf.GeneratedCodeInfo.Annotation[];
            }
            export namespace GeneratedCodeInfo {
                export interface Annotation {
                    path: number[];
                    sourceFile: string;
                    begin: number;
                    end: number;
                }
            }
        }
    }
}
export {$requests as requests};

declare namespace $responses {
    export namespace wix {
        export namespace common {
            export interface Address {
                country?: string;
                subdivision?: string;
                city?: string;
                postalCode?: string;
                streetAddress?: $responses.wix.common.StreetAddress;
                addressLine?: string;
                addressLine2?: string;
                formattedAddress?: string;
                hint?: string;
                geocode?: $responses.wix.common.AddressLocation;
                countryFullname?: string;
                subdivisionFullname?: string;
                subdivisions?: $responses.wix.common.Subdivision[];
            }
            export interface Subdivision {
                code?: string;
                name?: string;
                type?: $responses.wix.common.Subdivision.SubdivisionType;
                typeInfo?: string;
            }
            export namespace Subdivision {
                export enum SubdivisionType {
                    UNKNOWN_SUBDIVISION_TYPE = "UNKNOWN_SUBDIVISION_TYPE",
                    ADMINISTRATIVE_AREA_LEVEL_1 = "ADMINISTRATIVE_AREA_LEVEL_1",
                    ADMINISTRATIVE_AREA_LEVEL_2 = "ADMINISTRATIVE_AREA_LEVEL_2",
                    ADMINISTRATIVE_AREA_LEVEL_3 = "ADMINISTRATIVE_AREA_LEVEL_3",
                    ADMINISTRATIVE_AREA_LEVEL_4 = "ADMINISTRATIVE_AREA_LEVEL_4",
                    ADMINISTRATIVE_AREA_LEVEL_5 = "ADMINISTRATIVE_AREA_LEVEL_5",
                    COUNTRY = "COUNTRY",
                }
            }
            export interface StreetAddress {
                number?: string;
                name?: string;
                apt?: string;
                formattedAddressLine?: string;
            }
            export interface AddressContactDetails {
                fullName?: string;
                phone?: string;
                company?: string;
                email?: string;
            }
            export interface FullAddressContactDetails {
                firstName?: string;
                lastName?: string;
                fullName?: string;
                phone?: string;
                company?: string;
                email?: string;
                vatId?: $responses.wix.common.VatId;
            }
            export interface VatId {
                id?: string;
                type?: $responses.wix.common.VatType;
            }
            export enum VatType {
                UNSPECIFIED = "UNSPECIFIED",
                CPF = "CPF",
                CNPJ = "CNPJ",
            }
            export interface AddressLocation {
                latitude?: number;
                longitude?: number;
            }
            export interface BulkActionMetadata {
                totalSuccesses?: number;
                totalFailures?: number;
                undetailedFailures?: number;
            }
            export interface ItemMetadata {
                id?: string;
                originalIndex?: number;
                success?: boolean;
                error?: $responses.wix.api.ApplicationError;
            }
            export enum BulkActionType {
                UNKNOWN_ACTION_TYPE = "UNKNOWN_ACTION_TYPE",
                INSERT = "INSERT",
                UPDATE = "UPDATE",
                DELETE = "DELETE",
            }
            export interface IdentificationData {
                contactId?: string;
                identityType?: $responses.wix.common.IdentificationData.IdentityType;
                anonymousVisitorId?: string;
                memberId?: string;
                wixUserId?: string;
                appId?: string;
            }
            export namespace IdentificationData {
                export enum IdentityType {
                    UNKNOWN = "UNKNOWN",
                    ANONYMOUS_VISITOR = "ANONYMOUS_VISITOR",
                    MEMBER = "MEMBER",
                    WIX_USER = "WIX_USER",
                    APP = "APP",
                }
            }
            export interface Image {
                id?: string;
                url?: string;
                height?: number;
                width?: number;
                altText?: string;
                urlExpirationDate?: Date;
                filename?: string;
                sizeInBytes?: string;
            }
            export interface Video {
                id?: string;
                url?: string;
                height?: number;
                width?: number;
                thumbnail?: $responses.wix.common.Image;
            }
            export interface VideoV2 {
                id?: string;
                url?: string;
                resolutions?: $responses.wix.common.VideoResolution[];
                filename?: string;
                posters?: $responses.wix.common.Image[];
                sizeInBytes?: string;
                urlExpirationDate?: Date;
            }
            export interface VideoResolution {
                url?: string;
                height?: number;
                width?: number;
                poster?: $responses.wix.common.Image;
                format?: string;
                urlExpirationDate?: Date;
                sizeInBytes?: string;
                quality?: string;
                filename?: string;
                durationInSeconds?: number;
                private?: boolean;
                assetKey?: string;
            }
            export interface Audio {
                id?: string;
                url?: string;
                urlExpirationDate?: Date;
                sizeInBytes?: string;
                filename?: string;
                duration?: number;
                private?: boolean;
                assetKey?: string;
                format?: string;
                quality?: string;
            }
            export interface Document {
                id?: string;
                url?: string;
                urlExpirationDate?: Date;
                sizeInBytes?: string;
                filename?: string;
            }
            export interface Model3D {
                id?: string;
                url?: string;
                thumbnail?: $responses.wix.common.Image;
                altText?: string;
                urlExpirationDate?: Date;
                filename?: string;
                sizeInBytes?: string;
            }
            export interface Archive {
                id?: string;
                url?: string;
                urlExpirationDate?: Date;
                sizeInBytes?: string;
                filename?: string;
            }
            export interface MediaItem {
                image?: $responses.wix.common.Image;
                video?: $responses.wix.common.Video;
                document?: $responses.wix.common.Document;
            }
            export interface Money {
                value?: string;
                currency?: string;
                formattedValue?: string;
            }
            export interface PageUrl {
                base?: string;
                path?: string;
            }
            export interface PageUrlV2 {
                relativePath?: string;
                url?: string;
            }
            export interface Paging {
                limit?: number;
                offset?: number;
            }
            export interface CursorPaging {
                limit?: number;
                cursor?: string;
            }
            export interface PagingMetadata {
                count?: number;
                offset?: number;
                total?: number;
                tooManyToCount?: boolean;
                hasNext?: boolean;
            }
            export interface PagingMetadataV2 {
                count?: number;
                offset?: number;
                total?: number;
                tooManyToCount?: boolean;
                cursors?: $responses.wix.common.Cursors;
                hasNext?: boolean;
            }
            export interface CursorPagingMetadata {
                count?: number;
                cursors?: $responses.wix.common.Cursors;
                hasNext?: boolean;
            }
            export interface Cursors {
                next?: string;
                prev?: string;
            }
            export interface Sorting {
                fieldName?: string;
                order?: $responses.wix.common.SortOrder;
            }
            export enum SortOrder {
                ASC = "ASC",
                DESC = "DESC",
            }
            export namespace spi {
                export interface SpiBaseUri {
                    baseUri?: string;
                    alternativeUris?: $responses.wix.common.spi.SpiBaseUri.AlternativeUri[];
                }
                export namespace SpiBaseUri {
                    export interface AlternativeUri {
                        methodName?: string;
                        absoluteUri?: string;
                    }
                }
                /**
                 * this message is not directly used by any service,
                 * it exists to describe the expected parameters that SHOULD be provided to invoked Velo methods as part of open-platform.
                 * e.g. SPIs, event-handlers, etc..
                 * NOTE: this context object MUST be provided as the last argument in each Velo method signature.
                 * 
                 * Example:
                 * ```typescript
                 * export function wixStores_onOrderCanceled(event: OrderCanceledEvent, context: Context) {
                 * ...
                 * }
                 * ```
                 */
                export interface Context {
                    requestId?: string;
                    currency?: string;
                    identity?: $responses.wix.common.spi.Context.IdentificationData;
                    languages?: string[];
                    instanceId?: string;
                }
                export namespace Context {
                    export interface IdentificationData {
                        identityType?: $responses.wix.common.spi.Context.IdentificationData.IdentityType;
                        anonymousVisitorId?: string;
                        memberId?: string;
                        wixUserId?: string;
                        appId?: string;
                    }
                    export namespace IdentificationData {
                        export enum IdentityType {
                            UNKNOWN = "UNKNOWN",
                            ANONYMOUS_VISITOR = "ANONYMOUS_VISITOR",
                            MEMBER = "MEMBER",
                            WIX_USER = "WIX_USER",
                            APP = "APP",
                        }
                    }
                }
            }
            export interface WixLink {
                external?: $responses.wix.common.ExternalLink;
                page?: $responses.wix.common.PageLink;
                anchor?: $responses.wix.common.AnchorLink;
                dynamicPage?: $responses.wix.common.DynamicPageLink;
                document?: $responses.wix.common.DocumentLink;
                email?: $responses.wix.common.EmailLink;
                phone?: $responses.wix.common.PhoneLink;
                address?: $responses.wix.common.AddressLink;
                whatsApp?: $responses.wix.common.WhatsAppLink;
            }
            export interface ExternalLink {
                url?: string;
                target?: string;
            }
            export interface PageLink {
                pageId?: string;
                target?: string;
            }
            export interface AnchorLink {
                anchorName?: string;
                anchorDataId?: string;
                pageId?: string;
            }
            export interface DynamicPageLink {
                routerId?: string;
                innerRoute?: string;
                anchorDataId?: string;
            }
            export interface DocumentLink {
                docId?: string;
                name?: string;
                indexable?: boolean;
            }
            export interface EmailLink {
                recipient?: string;
                subject?: string;
                body?: string;
            }
            export interface PhoneLink {
                phoneNumber?: string;
            }
            export interface AddressLink {
                address?: string;
            }
            export interface WhatsAppLink {
                phoneNumber?: string;
            }
        }
        export namespace api {
            export interface ReferenceEntityField {
                path?: string;
            }
            export interface CacheSettings {
                maxAgeSeconds?: number;
            }
            export interface FieldSet {
                field?: string[];
            }
            export interface Deprecated {
                replacedBy?: string;
                targetRemovalDate?: string;
            }
            export interface Unique {
                field?: string[];
            }
            export interface Crud {
                method?: $responses.wix.api.Crud.Method;
                createOptions?: $responses.wix.api.CreateMethodOptions;
                getOptions?: $responses.wix.api.GetItemMethodOptions;
                updateOptions?: $responses.wix.api.UpdateMethodOptions;
                deleteOptions?: $responses.wix.api.DeleteMethodOptions;
                listOptions?: $responses.wix.api.ListMethodOptions;
                queryOptions?: $responses.wix.api.QueryMethodOptions;
                searchOptions?: $responses.wix.api.SearchMethodOptions;
                bulkCreateOptions?: $responses.wix.api.BulkCreateMethodOptions;
                bulkUpdateOptions?: $responses.wix.api.BulkUpdateMethodOptions;
                bulkUpdateByFilterOptions?: $responses.wix.api.BulkUpdateByFilterMethodOptions;
                bulkDeleteOptions?: $responses.wix.api.BulkDeleteMethodOptions;
                bulkDeleteByFilterOptions?: $responses.wix.api.BulkDeleteByFilterMethodOptions;
                upsertOptions?: $responses.wix.api.UpsertMethodOptions;
                bulkUpsertOptions?: $responses.wix.api.BulkUpsertMethodOptions;
                listDeletedOptions?: $responses.wix.api.ListDeletedMethodOptions;
                getDeletedOptions?: $responses.wix.api.GetDeletedMethodOptions;
                restoreFromTrashbinOptions?: $responses.wix.api.RestoreFromTrashbinMethodOptions;
                removeFromTrashbinOptions?: $responses.wix.api.RemoveFromTrashbinMethodOptions;
                countOptions?: $responses.wix.api.CountOptions;
            }
            export namespace Crud {
                export enum Method {
                    UNKNOWN_METHOD = "UNKNOWN_METHOD",
                    CREATE = "CREATE",
                    GET_ITEM = "GET_ITEM",
                    UPDATE = "UPDATE",
                    DELETE = "DELETE",
                    UPSERT = "UPSERT",
                    LIST = "LIST",
                    QUERY = "QUERY",
                    SEARCH = "SEARCH",
                    BULK_CREATE = "BULK_CREATE",
                    BULK_UPDATE = "BULK_UPDATE",
                    BULK_UPDATE_BY_FILTER = "BULK_UPDATE_BY_FILTER",
                    BULK_DELETE = "BULK_DELETE",
                    BULK_DELETE_BY_FILTER = "BULK_DELETE_BY_FILTER",
                    BULK_UPSERT = "BULK_UPSERT",
                    LIST_DELETED = "LIST_DELETED",
                    GET_DELETED = "GET_DELETED",
                    RESTORE_FROM_TRASHBIN = "RESTORE_FROM_TRASHBIN",
                    REMOVE_FROM_TRASHBIN = "REMOVE_FROM_TRASHBIN",
                    COUNT = "COUNT",
                }
            }
            export interface Paging {
                type?: $responses.wix.api.Paging.Type;
                pagingMetadataField?: string;
            }
            export namespace Paging {
                export enum Type {
                    UNKNOWN_TYPE = "UNKNOWN_TYPE",
                    OFFSET = "OFFSET",
                    CURSOR = "CURSOR",
                }
            }
            export interface CreateMethodOptions {
                itemField?: string;
            }
            export interface GetItemMethodOptions {
                itemField?: string;
                idField?: string;
            }
            export interface UpdateMethodOptions {
                itemField?: string;
                fieldmaskField?: string;
            }
            export interface UpsertMethodOptions {
                itemField?: string;
                fieldmaskField?: string;
            }
            export interface DeleteMethodOptions {
                idField?: string;
            }
            export interface ListMethodOptions {
                idsField?: string;
                itemsField?: string;
                paging?: $responses.wix.api.Paging;
                meAliasableField?: string[];
            }
            export interface QueryMethodOptions {
                queryField?: string;
                itemsField?: string;
                paging?: $responses.wix.api.Paging;
                wql?: $responses.wix.api.Wql;
                meAliasableField?: string[];
            }
            export interface SearchMethodOptions {
                searchField?: string;
                itemsField?: string;
                paging?: $responses.wix.api.Paging;
                wql?: $responses.wix.api.Wql;
                meAliasableField?: string[];
                search?: $responses.wix.api.Search[];
            }
            export interface BulkCreateMethodOptions {
                itemField?: string;
            }
            export interface BulkUpdateMethodOptions {
                itemField?: string;
                fieldmaskField?: string;
            }
            export interface BulkUpdateByFilterMethodOptions {
                itemField?: string;
                fieldmaskField?: string;
                filterField?: string;
            }
            export interface BulkUpsertMethodOptions {
                itemField?: string;
                fieldmaskField?: string;
            }
            export interface BulkDeleteMethodOptions {
                idsField?: string;
            }
            export interface BulkDeleteByFilterMethodOptions {
                filterField?: string;
            }
            export interface ListDeletedMethodOptions {
                idsField?: string;
                itemsField?: string;
                paging?: $responses.wix.api.Paging;
                meAliasableField?: string[];
            }
            export interface GetDeletedMethodOptions {
                itemField?: string;
                idField?: string;
            }
            export interface RestoreFromTrashbinMethodOptions {
                itemField?: string;
                idField?: string;
            }
            export interface RemoveFromTrashbinMethodOptions {
                idField?: string;
            }
            export interface CountOptions {
                inheritWqlFrom?: string;
            }
            export interface Wql {
                operatorFieldSupport?: $responses.wix.api.Wql.OperatorFieldSupport[];
                pattern?: $responses.wix.api.Wql.OperatorFieldSupport[];
            }
            export namespace Wql {
                export enum Operator {
                    ALL_APPLICABLE_OPERATORS = "ALL_APPLICABLE_OPERATORS",
                    EQ = "EQ",
                    GT = "GT",
                    GTE = "GTE",
                    IN = "IN",
                    LT = "LT",
                    LTE = "LTE",
                    NE = "NE",
                    NIN = "NIN",
                    BEGINS = "BEGINS",
                    EXISTS = "EXISTS",
                    ALL = "ALL",
                    HAS_ALL = "HAS_ALL",
                    ANY = "ANY",
                    HAS_SOME = "HAS_SOME",
                    EMPTY = "EMPTY",
                }
                export enum Sort {
                    NONE = "NONE",
                    ASC = "ASC",
                    DESC = "DESC",
                    BOTH = "BOTH",
                }
                export interface RequiredFields {
                    field?: string[];
                    requiredField?: $responses.wix.api.Wql.RequiredFields.RequiredField[];
                }
                export namespace RequiredFields {
                    export interface RequiredField {
                        path?: string;
                        sort?: $responses.wix.api.Wql.Sort;
                    }
                }
                export interface OperatorFieldSupport {
                    operator?: $responses.wix.api.Wql.Operator[];
                    glob?: string;
                    field?: string[];
                    sort?: $responses.wix.api.Wql.Sort;
                    requiredFields?: $responses.wix.api.Wql.RequiredFields[];
                    maturity?: $responses.wix.api.Maturity;
                }
            }
            export interface Search {
                field?: string[];
                maturity?: $responses.wix.api.Maturity;
            }
            export interface Hookable {
            }
            export interface Translatable {
                name?: string;
                hidden?: boolean;
                grouping?: string;
                type?: $responses.wix.api.Translatable.Type;
                displayOnly?: boolean;
            }
            export namespace Translatable {
                export enum Type {
                    UNDEFINED_TYPE = "UNDEFINED_TYPE",
                    SHORT_TEXT = "SHORT_TEXT",
                    LONG_TEXT = "LONG_TEXT",
                    RICH_TEXT = "RICH_TEXT",
                    RICH_CONTENT_EDITOR = "RICH_CONTENT_EDITOR",
                    SELECTION = "SELECTION",
                    MULTI_SELECTION = "MULTI_SELECTION",
                    DOCUMENT = "DOCUMENT",
                    IMAGE = "IMAGE",
                    VIDEO = "VIDEO",
                    IMAGE_LINK = "IMAGE_LINK",
                }
            }
            export interface Conditional {
                permission?: string;
                requestedField?: string;
            }
            export interface ServiceAppendix {
                type?: $responses.wix.api.ServiceAppendix.Type;
                path?: string;
            }
            export namespace ServiceAppendix {
                export enum Type {
                    UNKNOWN_APPENDIX_TYPE = "UNKNOWN_APPENDIX_TYPE",
                    NILE = "NILE",
                    MESSAGE_BUS = "MESSAGE_BUS",
                }
            }
            export enum Exposure {
                PRIVATE = "PRIVATE",
                INTERNAL = "INTERNAL",
                PUBLIC = "PUBLIC",
            }
            export enum Maturity {
                ALPHA = "ALPHA",
                BETA = "BETA",
                IA = "IA",
                GA = "GA",
                NOT_IMPLEMENTED = "NOT_IMPLEMENTED",
            }
            /**
             * Decimal value validation rules.
             * Based on java.math.BigDecimal, implies (wix.api.format) = DECIMAL_VALUE
             */
            export interface DecimalValueOptions {
                lte?: string;
                gte?: string;
                lt?: string;
                gt?: string;
                maxScale?: number;
            }
            export interface AlignedWithEnum {
                field?: string;
            }
            export enum Format {
                EMAIL = "EMAIL",
                HOSTNAME = "HOSTNAME",
                IPV4 = "IPV4",
                IPV6 = "IPV6",
                URI = "URI",
                WEB_URL = "WEB_URL",
                PHONE = "PHONE",
                CREDIT_CARD = "CREDIT_CARD",
                GUID = "GUID",
                COUNTRY = "COUNTRY",
                LANGUAGE = "LANGUAGE",
                DECIMAL_VALUE = "DECIMAL_VALUE",
                CURRENCY = "CURRENCY",
                LANGUAGE_TAG = "LANGUAGE_TAG",
                COLOR_HEX = "COLOR_HEX",
                LOCAL_DATE = "LOCAL_DATE",
                LOCAL_TIME = "LOCAL_TIME",
                LOCAL_DATE_TIME = "LOCAL_DATE_TIME",
                URL_SLUG = "URL_SLUG",
                SYSTEM_SLUG = "SYSTEM_SLUG",
            }
            /**
             * ApplicationError: named Error for backwards compatibility
             */
            export interface Error {
                httpCode?: $responses.wix.api.StatusCodes.HttpStatusCode;
                applicationCode?: string;
                data?: string;
            }
            /**
             * CustomValidationError: field level validation, only declare when you have specific validation in your service that is not coming from infra
             */
            export interface CustomValidationError {
                ruleName?: string;
                data?: string;
            }
            /**
             * InheritCrudErrors: does this method throw standard crud errors?
             */
            export interface InheritCrudErrors {
                method?: $responses.wix.api.Crud.Method;
            }
            export interface StatusCodes {
            }
            export namespace StatusCodes {
                export enum HttpStatusCode {
                    OK = "OK",
                    UNAUTHENTICATED = "UNAUTHENTICATED",
                    PERMISSION_DENIED = "PERMISSION_DENIED",
                    INVALID_ARGUMENT = "INVALID_ARGUMENT",
                    NOT_FOUND = "NOT_FOUND",
                    INTERNAL = "INTERNAL",
                    UNAVAILABLE = "UNAVAILABLE",
                    RESOURCE_EXHAUSTED = "RESOURCE_EXHAUSTED",
                    CANCELED = "CANCELED",
                    ALREADY_EXISTS = "ALREADY_EXISTS",
                    FAILED_PRECONDITION = "FAILED_PRECONDITION",
                }
            }
            export interface Details {
                applicationError?: $responses.wix.api.ApplicationError;
                validationError?: $responses.wix.api.ValidationError;
                tracing?: { [k: string]: string };
            }
            export interface ApplicationError {
                code?: string;
                description?: string;
                data?: { [key: string]: any };
            }
            /**
             * example result:
             * {
             * "fieldViolations": [
             * {
             * "field": "fieldA",
             * "description": "invalid music note. supported notes: [do,re,mi,fa,sol,la,ti]",
             * "violatedRule": "OTHER",
             * "ruleName": "INVALID_NOTE",
             * "data": {
             * "value": "FI"
             * }
             * },
             * {
             * "field": "fieldB",
             * "description": "field value out of range. supported range: [0-20]",
             * "violatedRule": "MAX",
             * "data": {
             * "threshold": 20
             * }
             * },
             * {
             * "field": "fieldC",
             * "description": "invalid phone number. provide a valid phone number of size: [7-12], supported characters: [0-9, +, -, (, )]",
             * "violatedRule": "FORMAT",
             * "data": {
             * "type": "PHONE"
             * }
             * }
             * ]
             * }
             */
            export interface ValidationError {
                fieldViolations?: $responses.wix.api.ValidationError.FieldViolation[];
            }
            export namespace ValidationError {
                export enum RuleType {
                    VALIDATION = "VALIDATION",
                    OTHER = "OTHER",
                    MAX = "MAX",
                    MIN = "MIN",
                    MAX_LENGTH = "MAX_LENGTH",
                    MIN_LENGTH = "MIN_LENGTH",
                    MAX_SIZE = "MAX_SIZE",
                    MIN_SIZE = "MIN_SIZE",
                    FORMAT = "FORMAT",
                    DECIMAL_LTE = "DECIMAL_LTE",
                    DECIMAL_GTE = "DECIMAL_GTE",
                    DECIMAL_LT = "DECIMAL_LT",
                    DECIMAL_GT = "DECIMAL_GT",
                    DECIMAL_MAX_SCALE = "DECIMAL_MAX_SCALE",
                    INVALID_ENUM_VALUE = "INVALID_ENUM_VALUE",
                    REQUIRED_FIELD = "REQUIRED_FIELD",
                    FIELD_NOT_ALLOWED = "FIELD_NOT_ALLOWED",
                    ONE_OF_ALIGNMENT = "ONE_OF_ALIGNMENT",
                }
                export interface FieldViolation {
                    field?: string;
                    description?: string;
                    violatedRule?: $responses.wix.api.ValidationError.RuleType;
                    ruleName?: string;
                    data?: { [key: string]: any };
                }
            }
            export interface LimitRuleInt32DataPayload {
                threshold?: number;
            }
            export interface LimitRuleDoubleDataPayload {
                threshold?: number;
            }
            export interface LimitRuleStringDataPayload {
                threshold?: string;
            }
            export interface FormatRuleDataPayload {
                type?: string;
            }
            export interface EnumRuleDataPayload {
                supported?: string[];
            }
        }
    }
    export namespace google {
        export namespace protobuf {
            export interface FileDescriptorSet {
                file?: $responses.google.protobuf.FileDescriptorProto[];
            }
            export interface FileDescriptorProto {
                name?: string;
                package?: string;
                dependency?: string[];
                publicDependency?: number[];
                weakDependency?: number[];
                messageType?: $responses.google.protobuf.DescriptorProto[];
                enumType?: $responses.google.protobuf.EnumDescriptorProto[];
                service?: $responses.google.protobuf.ServiceDescriptorProto[];
                extension?: $responses.google.protobuf.FieldDescriptorProto[];
                options?: $responses.google.protobuf.FileOptions;
                sourceCodeInfo?: $responses.google.protobuf.SourceCodeInfo;
                syntax?: string;
            }
            export interface DescriptorProto {
                name?: string;
                field?: $responses.google.protobuf.FieldDescriptorProto[];
                extension?: $responses.google.protobuf.FieldDescriptorProto[];
                nestedType?: $responses.google.protobuf.DescriptorProto[];
                enumType?: $responses.google.protobuf.EnumDescriptorProto[];
                extensionRange?: $responses.google.protobuf.DescriptorProto.ExtensionRange[];
                oneofDecl?: $responses.google.protobuf.OneofDescriptorProto[];
                options?: $responses.google.protobuf.MessageOptions;
                reservedRange?: $responses.google.protobuf.DescriptorProto.ReservedRange[];
                reservedName?: string[];
            }
            export namespace DescriptorProto {
                export interface ExtensionRange {
                    start?: number;
                    end?: number;
                    options?: $responses.google.protobuf.ExtensionRangeOptions;
                }
                export interface ReservedRange {
                    start?: number;
                    end?: number;
                }
            }
            export interface ExtensionRangeOptions {
                uninterpretedOption?: $responses.google.protobuf.UninterpretedOption[];
            }
            export interface FieldDescriptorProto {
                name?: string;
                number?: number;
                label?: $responses.google.protobuf.FieldDescriptorProto.Label;
                type?: $responses.google.protobuf.FieldDescriptorProto.Type;
                typeName?: string;
                extendee?: string;
                defaultValue?: string;
                oneofIndex?: number;
                jsonName?: string;
                options?: $responses.google.protobuf.FieldOptions;
                proto3Optional?: boolean;
            }
            export namespace FieldDescriptorProto {
                export enum Type {
                    TYPE_DOUBLE = "TYPE_DOUBLE",
                    TYPE_FLOAT = "TYPE_FLOAT",
                    TYPE_INT64 = "TYPE_INT64",
                    TYPE_UINT64 = "TYPE_UINT64",
                    TYPE_INT32 = "TYPE_INT32",
                    TYPE_FIXED64 = "TYPE_FIXED64",
                    TYPE_FIXED32 = "TYPE_FIXED32",
                    TYPE_BOOL = "TYPE_BOOL",
                    TYPE_STRING = "TYPE_STRING",
                    TYPE_GROUP = "TYPE_GROUP",
                    TYPE_MESSAGE = "TYPE_MESSAGE",
                    TYPE_BYTES = "TYPE_BYTES",
                    TYPE_UINT32 = "TYPE_UINT32",
                    TYPE_ENUM = "TYPE_ENUM",
                    TYPE_SFIXED32 = "TYPE_SFIXED32",
                    TYPE_SFIXED64 = "TYPE_SFIXED64",
                    TYPE_SINT32 = "TYPE_SINT32",
                    TYPE_SINT64 = "TYPE_SINT64",
                }
                export enum Label {
                    LABEL_OPTIONAL = "LABEL_OPTIONAL",
                    LABEL_REQUIRED = "LABEL_REQUIRED",
                    LABEL_REPEATED = "LABEL_REPEATED",
                }
            }
            export interface OneofDescriptorProto {
                name?: string;
                options?: $responses.google.protobuf.OneofOptions;
            }
            export interface EnumDescriptorProto {
                name?: string;
                value?: $responses.google.protobuf.EnumValueDescriptorProto[];
                options?: $responses.google.protobuf.EnumOptions;
                reservedRange?: $responses.google.protobuf.EnumDescriptorProto.EnumReservedRange[];
                reservedName?: string[];
            }
            export namespace EnumDescriptorProto {
                export interface EnumReservedRange {
                    start?: number;
                    end?: number;
                }
            }
            export interface EnumValueDescriptorProto {
                name?: string;
                number?: number;
                options?: $responses.google.protobuf.EnumValueOptions;
            }
            export interface ServiceDescriptorProto {
                name?: string;
                method?: $responses.google.protobuf.MethodDescriptorProto[];
                options?: $responses.google.protobuf.ServiceOptions;
            }
            export interface MethodDescriptorProto {
                name?: string;
                inputType?: string;
                outputType?: string;
                options?: $responses.google.protobuf.MethodOptions;
                clientStreaming?: boolean;
                serverStreaming?: boolean;
            }
            export interface FileOptions {
                javaPackage?: string;
                javaOuterClassname?: string;
                javaMultipleFiles?: boolean;
                javaGenerateEqualsAndHash?: boolean;
                javaStringCheckUtf8?: boolean;
                optimizeFor?: $responses.google.protobuf.FileOptions.OptimizeMode;
                goPackage?: string;
                ccGenericServices?: boolean;
                javaGenericServices?: boolean;
                pyGenericServices?: boolean;
                phpGenericServices?: boolean;
                deprecated?: boolean;
                ccEnableArenas?: boolean;
                objcClassPrefix?: string;
                csharpNamespace?: string;
                swiftPrefix?: string;
                phpClassPrefix?: string;
                phpNamespace?: string;
                phpMetadataNamespace?: string;
                rubyPackage?: string;
                uninterpretedOption?: $responses.google.protobuf.UninterpretedOption[];
            }
            export namespace FileOptions {
                export enum OptimizeMode {
                    SPEED = "SPEED",
                    CODE_SIZE = "CODE_SIZE",
                    LITE_RUNTIME = "LITE_RUNTIME",
                }
            }
            export interface MessageOptions {
                messageSetWireFormat?: boolean;
                noStandardDescriptorAccessor?: boolean;
                deprecated?: boolean;
                mapEntry?: boolean;
                uninterpretedOption?: $responses.google.protobuf.UninterpretedOption[];
                '.wix.api.decompositeOf'?: string;
                '.wix.api.decompositionMinimumFields'?: $responses.wix.api.FieldSet[];
                '.wix.api.unwrapArrayValue'?: boolean;
                '.wix.api.messageDeprecated'?: $responses.wix.api.Deprecated;
                '.wix.api.unique'?: $responses.wix.api.Unique[];
            }
            export interface FieldOptions {
                ctype?: $responses.google.protobuf.FieldOptions.CType;
                packed?: boolean;
                jstype?: $responses.google.protobuf.FieldOptions.JSType;
                lazy?: boolean;
                deprecated?: boolean;
                weak?: boolean;
                uninterpretedOption?: $responses.google.protobuf.UninterpretedOption[];
                '.wix.api.fieldExposure'?: $responses.wix.api.Exposure;
                '.wix.api.fieldMaturity'?: $responses.wix.api.Maturity;
                '.wix.api.pii'?: boolean;
                '.wix.api.referencedEntity'?: string;
                '.wix.api.referencedEntityField'?: $responses.wix.api.ReferenceEntityField;
                '.wix.api.fieldDeprecated'?: $responses.wix.api.Deprecated;
                '.wix.api.translatable'?: $responses.wix.api.Translatable;
                '.wix.api.sampleData'?: string;
                '.wix.api.conditional'?: $responses.wix.api.Conditional;
                '.wix.api.max'?: number;
                '.wix.api.min'?: number;
                '.wix.api.maxLength'?: number;
                '.wix.api.minLength'?: number;
                '.wix.api.maxSize'?: number;
                '.wix.api.minSize'?: number;
                '.wix.api.format'?: $responses.wix.api.Format;
                '.wix.api.readOnly'?: boolean;
                '.wix.api.immutable'?: boolean;
                '.wix.api.decimalValue'?: $responses.wix.api.DecimalValueOptions;
                '.wix.api.customValidation'?: $responses.wix.api.CustomValidationError;
            }
            export namespace FieldOptions {
                export enum CType {
                    STRING = "STRING",
                    CORD = "CORD",
                    STRING_PIECE = "STRING_PIECE",
                }
                export enum JSType {
                    JS_NORMAL = "JS_NORMAL",
                    JS_STRING = "JS_STRING",
                    JS_NUMBER = "JS_NUMBER",
                }
            }
            export interface OneofOptions {
                uninterpretedOption?: $responses.google.protobuf.UninterpretedOption[];
                '.wix.api.alignedWithEnum'?: $responses.wix.api.AlignedWithEnum;
            }
            export interface EnumOptions {
                allowAlias?: boolean;
                deprecated?: boolean;
                uninterpretedOption?: $responses.google.protobuf.UninterpretedOption[];
            }
            export interface EnumValueOptions {
                deprecated?: boolean;
                uninterpretedOption?: $responses.google.protobuf.UninterpretedOption[];
                '.wix.api.enumMaturity'?: $responses.wix.api.Maturity;
                '.wix.api.enumExposure'?: $responses.wix.api.Exposure;
            }
            export interface ServiceOptions {
                deprecated?: boolean;
                uninterpretedOption?: $responses.google.protobuf.UninterpretedOption[];
                '.wix.api.serviceMaturity'?: $responses.wix.api.Maturity;
                '.wix.api.serviceExposure'?: $responses.wix.api.Exposure;
                '.wix.api.serviceDeprecated'?: $responses.wix.api.Deprecated;
                '.wix.api.appendixFiles'?: $responses.wix.api.ServiceAppendix[];
            }
            export interface MethodOptions {
                deprecated?: boolean;
                idempotencyLevel?: $responses.google.protobuf.MethodOptions.IdempotencyLevel;
                uninterpretedOption?: $responses.google.protobuf.UninterpretedOption[];
                '.wix.api.exposure'?: $responses.wix.api.Exposure;
                '.wix.api.maturity'?: $responses.wix.api.Maturity;
                '.wix.api.cacheable'?: $responses.wix.api.CacheSettings;
                '.wix.api.deprecated'?: $responses.wix.api.Deprecated;
                '.wix.api.crud'?: $responses.wix.api.Crud;
                '.wix.api.hookable'?: $responses.wix.api.Hookable;
                '.wix.api.acceptsLinguist'?: boolean;
                '.wix.api.required'?: string[];
                '.wix.api.writable'?: string[];
                '.wix.api.error'?: $responses.wix.api.Error[];
                '.wix.api.customValidationError'?: $responses.wix.api.CustomValidationError[];
                '.wix.api.inheritCrudErrors'?: $responses.wix.api.InheritCrudErrors[];
            }
            export namespace MethodOptions {
                export enum IdempotencyLevel {
                    IDEMPOTENCY_UNKNOWN = "IDEMPOTENCY_UNKNOWN",
                    NO_SIDE_EFFECTS = "NO_SIDE_EFFECTS",
                    IDEMPOTENT = "IDEMPOTENT",
                }
            }
            export interface UninterpretedOption {
                name?: $responses.google.protobuf.UninterpretedOption.NamePart[];
                identifierValue?: string;
                positiveIntValue?: (number | string);
                negativeIntValue?: (number | string);
                doubleValue?: number;
                stringValue?: Uint8Array;
                aggregateValue?: string;
            }
            export namespace UninterpretedOption {
                export interface NamePart {
                    namePart?: string;
                    isExtension?: boolean;
                }
            }
            export interface SourceCodeInfo {
                location?: $responses.google.protobuf.SourceCodeInfo.Location[];
            }
            export namespace SourceCodeInfo {
                export interface Location {
                    path?: number[];
                    span?: number[];
                    leadingComments?: string;
                    trailingComments?: string;
                    leadingDetachedComments?: string[];
                }
            }
            export interface GeneratedCodeInfo {
                annotation?: $responses.google.protobuf.GeneratedCodeInfo.Annotation[];
            }
            export namespace GeneratedCodeInfo {
                export interface Annotation {
                    path?: number[];
                    sourceFile?: string;
                    begin?: number;
                    end?: number;
                }
            }
        }
    }
}
export {$responses as responses};
