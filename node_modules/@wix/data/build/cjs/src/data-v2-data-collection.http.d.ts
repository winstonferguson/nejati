import { RequestOptionsFactory } from '@wix/sdk-types';
import { CreateDataCollectionRequest, CreateDataCollectionResponse, DeleteDataCollectionRequest, DeleteDataCollectionResponse, GetDataCollectionRequest, GetDataCollectionResponse, ListDataCollectionsRequest, ListDataCollectionsResponse, UpdateDataCollectionRequest, UpdateDataCollectionResponse, CreateDataCollectionResponseNonNullableFields, GetDataCollectionResponseNonNullableFields, ListDataCollectionsResponseNonNullableFields, UpdateDataCollectionResponseNonNullableFields } from './data-v2-data-collection.types';
/**
 * Creates a new data collection.
 *
 * The request body must include an ID, details for at least 1 field, and a permissions object. If any of these are missing, the collection isn't created.
 */
export declare function createDataCollection(payload: CreateDataCollectionRequest): RequestOptionsFactory<CreateDataCollectionResponse & CreateDataCollectionResponseNonNullableFields>;
/** Retrieves a data collection by ID. */
export declare function getDataCollection(payload: GetDataCollectionRequest): RequestOptionsFactory<GetDataCollectionResponse & GetDataCollectionResponseNonNullableFields>;
/**
 * Retrieves a list of all data collections associated with the site or project.
 *
 * By default, the list is ordered by ID in ascending order.
 */
export declare function listDataCollections(payload: ListDataCollectionsRequest): RequestOptionsFactory<ListDataCollectionsResponse & ListDataCollectionsResponseNonNullableFields>;
/**
 * Updates a data collection.
 *
 * A collection ID, revision number, permissions, and at least 1 field must be provided within `options.collection`.
 * If a collection with that ID exists, and if its current `revision` number matches the one provided, it is updated.
 * Otherwise, the request fails.
 *
 * When a collection is updated, its `_updatedDate` property is changed to the current date and its `revision` property is incremented.
 *
 * > **Note:**
 * > After a collection is updated, it only contains the properties included in the `updateDataCollection()` call. If the existing collection has properties with values and those properties
 * > aren't included in the updated collection details, their values are lost.
 */
export declare function updateDataCollection(payload: UpdateDataCollectionRequest): RequestOptionsFactory<UpdateDataCollectionResponse & UpdateDataCollectionResponseNonNullableFields>;
/**
 * Deletes a data collection.
 *
 * > **Note:**
 * > Once a collection is deleted, it can't be restored.
 */
export declare function deleteDataCollection(payload: DeleteDataCollectionRequest): RequestOptionsFactory<DeleteDataCollectionResponse>;
