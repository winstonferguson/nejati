import { insertDataItem as universalInsertDataItem, updateDataItem as universalUpdateDataItem, saveDataItem as universalSaveDataItem, getDataItem as universalGetDataItem, removeDataItem as universalRemoveDataItem, truncateDataItems as universalTruncateDataItems, queryDataItems as universalQueryDataItems, aggregateDataItems as universalAggregateDataItems, countDataItems as universalCountDataItems, queryDistinctValues as universalQueryDistinctValues, bulkInsertDataItems as universalBulkInsertDataItems, bulkUpdateDataItems as universalBulkUpdateDataItems, bulkSaveDataItems as universalBulkSaveDataItems, bulkRemoveDataItems as universalBulkRemoveDataItems, queryReferencedDataItems as universalQueryReferencedDataItems, isReferencedDataItem as universalIsReferencedDataItem, insertDataItemReference as universalInsertDataItemReference, removeDataItemReference as universalRemoveDataItemReference, bulkInsertDataItemReferences as universalBulkInsertDataItemReferences, bulkRemoveDataItemReferences as universalBulkRemoveDataItemReferences, replaceDataItemReferences as universalReplaceDataItemReferences, } from './data-v2-data-item.universal';
export const __metadata = { PACKAGE_NAME: '@wix/data' };
export function insertDataItem(httpClient) {
    return (options) => universalInsertDataItem(options, 
    // @ts-ignore
    { httpClient });
}
export function updateDataItem(httpClient) {
    return (_id, options) => universalUpdateDataItem(_id, options, 
    // @ts-ignore
    { httpClient });
}
export function saveDataItem(httpClient) {
    return (options) => universalSaveDataItem(options, 
    // @ts-ignore
    { httpClient });
}
export function getDataItem(httpClient) {
    return (dataItemId, options) => universalGetDataItem(dataItemId, options, 
    // @ts-ignore
    { httpClient });
}
export function removeDataItem(httpClient) {
    return (dataItemId, options) => universalRemoveDataItem(dataItemId, options, 
    // @ts-ignore
    { httpClient });
}
export function truncateDataItems(httpClient) {
    return (options) => universalTruncateDataItems(options, 
    // @ts-ignore
    { httpClient });
}
export function queryDataItems(httpClient) {
    return (options) => universalQueryDataItems(options, 
    // @ts-ignore
    { httpClient });
}
export function aggregateDataItems(httpClient) {
    return (options) => universalAggregateDataItems(options, 
    // @ts-ignore
    { httpClient });
}
export function countDataItems(httpClient) {
    return (options) => universalCountDataItems(options, 
    // @ts-ignore
    { httpClient });
}
export function queryDistinctValues(httpClient) {
    return (options) => universalQueryDistinctValues(options, 
    // @ts-ignore
    { httpClient });
}
export function bulkInsertDataItems(httpClient) {
    return (options) => universalBulkInsertDataItems(options, 
    // @ts-ignore
    { httpClient });
}
export function bulkUpdateDataItems(httpClient) {
    return (options) => universalBulkUpdateDataItems(options, 
    // @ts-ignore
    { httpClient });
}
export function bulkSaveDataItems(httpClient) {
    return (options) => universalBulkSaveDataItems(options, 
    // @ts-ignore
    { httpClient });
}
export function bulkRemoveDataItems(httpClient) {
    return (options) => universalBulkRemoveDataItems(options, 
    // @ts-ignore
    { httpClient });
}
export function queryReferencedDataItems(httpClient) {
    return (options) => universalQueryReferencedDataItems(options, 
    // @ts-ignore
    { httpClient });
}
export function isReferencedDataItem(httpClient) {
    return (options) => universalIsReferencedDataItem(options, 
    // @ts-ignore
    { httpClient });
}
export function insertDataItemReference(httpClient) {
    return (options) => universalInsertDataItemReference(options, 
    // @ts-ignore
    { httpClient });
}
export function removeDataItemReference(httpClient) {
    return (options) => universalRemoveDataItemReference(options, 
    // @ts-ignore
    { httpClient });
}
export function bulkInsertDataItemReferences(httpClient) {
    return (options) => universalBulkInsertDataItemReferences(options, 
    // @ts-ignore
    { httpClient });
}
export function bulkRemoveDataItemReferences(httpClient) {
    return (options) => universalBulkRemoveDataItemReferences(options, 
    // @ts-ignore
    { httpClient });
}
export function replaceDataItemReferences(httpClient) {
    return (options) => universalReplaceDataItemReferences(options, 
    // @ts-ignore
    { httpClient });
}
export { Environment, Action, SortOrder, BulkActionType, } from './data-v2-data-item.universal';
//# sourceMappingURL=data-v2-data-item.public.js.map