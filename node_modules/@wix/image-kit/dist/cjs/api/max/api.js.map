{"version":3,"names":["_imageServiceConstants","require","_imageServiceUtils","_attributes","_transform","_uri","_srcset","_imagePlaceholderUtils","PLACEHOLDER_IMG_CSS_OVERRIDES","width","height","getPlaceholder","fittingType","src","target","options","isValidRequest","emptyData","autoEncode","isSEOBot","shouldLoadHQImage","hasAnimation","canTransformImage","isImageTransformApplicable","id","getData","useSrcset","newTarget","validateTargetDimensions","alignment","htmlTag","isFakeTile","getIsFakeTile","scaledDimensions","getScaledDimensions","blur","getBlurValue","convertedFittingType","getConvertedFitting","overrideCSS","getCSSOverrides","uri","filters","attr","css","img","container","Object","assign","transformed","data","targetObj","getTarget","transformObj","getTransform","getURI","srcset","getSrcset","getAttributes"],"sources":["../../../../src/api/max/api.ts"],"sourcesContent":["import { emptyData } from '../../helpers/imageServiceConstants';\nimport {\n  isImageTransformApplicable,\n  isValidRequest,\n} from '../../helpers/imageServiceUtils';\nimport { getAttributes } from '../../engines/attributes';\nimport { getTransform, getTarget } from '../transform';\nimport { getURI } from '../uri';\nimport { getSrcset } from '../srcset';\nimport type {\n  ImageDataAttributes,\n  FittingType,\n  ImageTransformSource,\n  ImageTransformTarget,\n  ImagePlaceholderTransformTarget,\n  ImageTransformOptions,\n} from '../../types';\nimport {\n  getScaledDimensions,\n  getBlurValue,\n  getCSSOverrides,\n  validateTargetDimensions,\n  getIsFakeTile,\n  getConvertedFitting,\n} from '../../helpers/imagePlaceholderUtils';\n\nconst PLACEHOLDER_IMG_CSS_OVERRIDES = { width: '100%', height: '100%' };\n\n/**\n * returns image _placeholder_ transform uri and the\n * needed css for alignment and positioning\n *\n * @param {FittingType}             fittingType imageServicesTypes.fittingTypes\n * @param {ImageTransformSource}    src         image\n * @param {ImagePlaceholderTransformTarget}    target      target dimensions\n * @param {ImageTransformOptions} [options]   environment / transformation  options\n *\n * @returns {ImageDataAttributes}\n */\nfunction getPlaceholder(\n  fittingType: FittingType,\n  src: ImageTransformSource,\n  target: ImagePlaceholderTransformTarget,\n  options: ImageTransformOptions = {},\n): ImageDataAttributes {\n  if (!isValidRequest(fittingType, src, target as ImageTransformTarget)) {\n    return emptyData;\n  }\n\n  const {\n    autoEncode = true,\n    isSEOBot,\n    shouldLoadHQImage,\n    hasAnimation,\n  } = options;\n\n  const canTransformImage = isImageTransformApplicable(src.id, hasAnimation);\n\n  if (!canTransformImage || shouldLoadHQImage) {\n    /* Either:\n     * 1. Transform isn't applicable so target is original size applied with fluid CSS\n     * 2. User asked for an HQ image, so they must have supplied target size (width/height)\n     */\n    return getData(fittingType, src, target as ImageTransformTarget, {\n      ...options,\n      autoEncode,\n      useSrcset: canTransformImage,\n    });\n  }\n\n  // If there aren't dimensions, we make them up\n  const newTarget = {\n    ...target,\n    ...validateTargetDimensions(src, target),\n  } as ImageTransformTarget;\n\n  const { alignment, htmlTag } = newTarget;\n  const isFakeTile = getIsFakeTile(fittingType, src, newTarget);\n\n  const scaledDimensions = getScaledDimensions(\n    fittingType,\n    src,\n    newTarget,\n    isSEOBot,\n  );\n\n  const blur = getBlurValue(newTarget.width, fittingType, isSEOBot);\n\n  const convertedFittingType = getConvertedFitting(fittingType, isFakeTile);\n\n  const overrideCSS = getCSSOverrides(\n    fittingType,\n    src,\n    target,\n    alignment as string,\n  );\n\n  const { uri } = getData(\n    convertedFittingType as FittingType,\n    src,\n    {\n      ...scaledDimensions,\n      alignment,\n      htmlTag,\n    },\n    {\n      autoEncode,\n      filters: blur ? { blur } : {},\n      hasAnimation,\n    },\n  );\n\n  const { attr = {}, css } = getData(\n    fittingType,\n    src,\n    {\n      ...newTarget,\n      alignment,\n      htmlTag,\n    },\n    {},\n  );\n\n  css!.img = css!.img || {};\n  css!.container = css!.container || {};\n  Object.assign(css!.img, overrideCSS.img, PLACEHOLDER_IMG_CSS_OVERRIDES);\n  Object.assign(css!.container, overrideCSS.container);\n\n  return { uri, css, attr, transformed: true };\n}\n\n/**\n * returns image transform uri and the\n * needed css for alignment and positioning\n *\n * @param {FittingType}             fittingType         imageServicesTypes.fittingTypes\n * @param {ImageTransformSource}    src                 source image\n * @param {ImageTransformTarget}    target              target component\n * @param {ImageTransformOptions}   [options]          transform options\n *\n * @returns {ImageDataAttributes}\n */\nfunction getData(\n  fittingType: FittingType,\n  src: ImageTransformSource,\n  target: ImageTransformTarget,\n  options?: ImageTransformOptions,\n) {\n  let data: ImageDataAttributes = {} as ImageDataAttributes;\n\n  // check if valid request\n  if (isValidRequest(fittingType, src, target)) {\n    // handle site BG legacy fitting types if needed\n    const targetObj = getTarget(fittingType, src, target);\n    // parse request and create working OBJ\n    const transformObj = getTransform(fittingType, src, targetObj, options);\n\n    data.uri = getURI(fittingType, src, targetObj, options, transformObj);\n\n    if (options?.useSrcset) {\n      data.srcset = getSrcset(fittingType, src, targetObj, options, data);\n    }\n\n    // set the CSS or the SVG property\n    Object.assign(data, getAttributes(transformObj, targetObj), {\n      transformed: transformObj.transformed,\n    });\n  } else {\n    // empty data\n    data = emptyData;\n  }\n\n  // return data to be used in html\n  return data;\n}\n\nexport { getData, getPlaceholder };\n"],"mappings":"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"}