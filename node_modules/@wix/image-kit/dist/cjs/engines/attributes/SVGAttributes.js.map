{"version":3,"names":["_imageServiceConstants","require","_imageServiceUtils","getSvgAttr","transformsObj","target","attributes","css","container","attr","img","fittingType","alignType","alignment","width","sourceWidth","height","sourceHeight","src","imageScale","position","fittingTypes","ORIGINAL_SIZE","LEGACY_ORIGINAL_SIZE","TILE","parts","length","preserveAspectRatio","SCALE_TO_FIT","LEGACY_FIT_WIDTH","LEGACY_FIT_HEIGHT","LEGACY_FULL","transform","STRETCH","x","y","SCALE_TO_FILL","isImageTransformApplicable","id","getDimension","transformTypes","FILL","right","bottom","center","Math","round","middle","alignTypes","TOP_LEFT","TOP","TOP_RIGHT","LEFT","CENTER","RIGHT","BOTTOM_LEFT","BOTTOM","BOTTOM_RIGHT","viewBox","join"],"sources":["../../../../src/engines/attributes/SVGAttributes.ts"],"sourcesContent":["import {\n  fittingTypes,\n  alignTypes,\n  transformTypes,\n} from '../../helpers/imageServiceConstants';\nimport {\n  getDimension,\n  isImageTransformApplicable,\n} from '../../helpers/imageServiceUtils';\nimport type { ImageTransformObject, ImageTransformTarget } from '../../types';\n\ntype SVGImageAttributes = {\n  css: {\n    container: {\n      position?: string;\n    };\n  };\n  attr: {\n    container: {\n      width?: number;\n      height?: number;\n      viewBox?: string;\n    };\n    img: {\n      x?: number;\n      y?: number;\n      width?: number | string;\n      height?: number | string;\n      transform?: string;\n      preserveAspectRatio?: string;\n    };\n  };\n};\n\n/* eslint-disable indent */\n/**\n * get CSS or SVG attributes to be used in the browser\n * @param {ImageTransformObject}  transformsObj  transform parts object\n * @param {ImageTransformTarget}  target\n *\n * @returns {SVGImageAttributes}\n */\nfunction getSvgAttr(\n  transformsObj: ImageTransformObject,\n  target: ImageTransformTarget,\n): SVGImageAttributes {\n  const attributes: SVGImageAttributes = {\n    css: {\n      container: {},\n    },\n    attr: {\n      container: {},\n      img: {},\n    },\n  };\n  const { css, attr } = attributes;\n  const { fittingType } = transformsObj;\n  const alignType = target.alignment;\n  const { width: sourceWidth, height: sourceHeight } = transformsObj.src;\n  let imageScale;\n\n  css.container.position = 'relative';\n\n  // populate SVG attributes object\n  // eslint-disable-line indent\n  switch (fittingType) {\n    case fittingTypes.ORIGINAL_SIZE:\n    case fittingTypes.LEGACY_ORIGINAL_SIZE:\n    case fittingTypes.TILE:\n      if (transformsObj.parts && transformsObj.parts.length) {\n        attr.img.width = transformsObj.parts[0].width;\n        attr.img.height = transformsObj.parts[0].height;\n      } else {\n        attr.img.width = sourceWidth;\n        attr.img.height = sourceHeight;\n      }\n      attr.img.preserveAspectRatio = 'xMidYMid slice';\n      break;\n\n    case fittingTypes.SCALE_TO_FIT:\n    case fittingTypes.LEGACY_FIT_WIDTH:\n    case fittingTypes.LEGACY_FIT_HEIGHT:\n    case fittingTypes.LEGACY_FULL:\n      attr.img.width = '100%';\n      attr.img.height = '100%';\n      attr.img.transform = '';\n      attr.img.preserveAspectRatio = '';\n      break;\n\n    case fittingTypes.STRETCH:\n      attr.img.width = target.width;\n      attr.img.height = target.height;\n      attr.img.x = 0;\n      attr.img.y = 0;\n      attr.img.transform = '';\n      attr.img.preserveAspectRatio = 'none';\n      break;\n\n    case fittingTypes.SCALE_TO_FILL:\n      if (!isImageTransformApplicable(transformsObj.src.id)) {\n        imageScale = getDimension(\n          sourceWidth,\n          sourceHeight,\n          target.width,\n          target.height,\n          transformTypes.FILL,\n        );\n        attr.img.width = imageScale.width;\n        attr.img.height = imageScale.height;\n      } else {\n        attr.img.width = target.width;\n        attr.img.height = target.height;\n      }\n      attr.img.x = 0;\n      attr.img.y = 0;\n      attr.img.transform = '';\n      attr.img.preserveAspectRatio = 'xMidYMid slice';\n      break;\n  }\n\n  // set alignment for cases where the requested src is smaller or bigger than the target element,\n  if (\n    typeof attr.img.width === 'number' &&\n    typeof attr.img.height === 'number' &&\n    (attr.img.width !== target.width || attr.img.height !== target.height)\n  ) {\n    // x and y to use in svg <pattern> element\n    let x = 0;\n    let y = 0;\n    let right;\n    let bottom;\n    if (fittingType === fittingTypes.TILE) {\n      right = target.width % attr.img.width;\n      bottom = target.height % attr.img.height;\n    } else {\n      right = target.width - attr.img.width;\n      bottom = target.height - attr.img.height;\n    }\n    const center = Math.round(right / 2);\n    const middle = Math.round(bottom / 2);\n\n    switch (alignType) {\n      case alignTypes.TOP_LEFT:\n        x = 0;\n        y = 0;\n        break;\n      case alignTypes.TOP:\n        x = center;\n        y = 0;\n        break;\n      case alignTypes.TOP_RIGHT:\n        x = right;\n        y = 0;\n        break;\n\n      case alignTypes.LEFT:\n        x = 0;\n        y = middle;\n        break;\n      case alignTypes.CENTER:\n        x = center;\n        y = middle;\n        break;\n      case alignTypes.RIGHT:\n        x = right;\n        y = middle;\n        break;\n\n      case alignTypes.BOTTOM_LEFT:\n        x = 0;\n        y = bottom;\n        break;\n      case alignTypes.BOTTOM:\n        x = center;\n        y = bottom;\n        break;\n      case alignTypes.BOTTOM_RIGHT:\n        x = right;\n        y = bottom;\n        break;\n    }\n\n    attr.img.x = x;\n    attr.img.y = y;\n  }\n\n  attr.container.width = target.width;\n  attr.container.height = target.height;\n  attr.container.viewBox = [0, 0, target.width, target.height].join(' ');\n\n  // return attributes object\n  return attributes;\n}\n/* eslint-enable indent */\n\nexport { getSvgAttr as get };\n"],"mappings":"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"}