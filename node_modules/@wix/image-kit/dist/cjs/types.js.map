{"version":3,"names":[],"sources":["../../src/types.ts"],"sourcesContent":["export type FittingType =\n  | 'fill'\n  | 'fit'\n  | 'stretch'\n  | 'original_size'\n  | 'tile'\n  | 'legacy_fill'\n  | 'tile_horizontal'\n  | 'tile_vertical'\n  | 'fit_and_tile'\n  | 'legacy_strip_tile'\n  | 'legacy_strip_tile_horizontal'\n  | 'legacy_strip_tile_vertical'\n  | 'legacy_strip_fill'\n  | 'legacy_strip_fit'\n  | 'legacy_strip_fit_and_tile'\n  | 'legacy_strip_original_size'\n  | 'actual_size'\n  | 'fitWidth'\n  | 'fitHeight'\n  | 'full'\n  | 'legacy_tile'\n  | 'legacy_tile_horizontal'\n  | 'legacy_tile_vertical'\n  | 'legacy_normal';\n\nexport type AlignType =\n  | 'center'\n  | 'top'\n  | 'top_left'\n  | 'top_right'\n  | 'left'\n  | 'right'\n  | 'bottom'\n  | 'bottom_left'\n  | 'bottom_right';\n\nexport type HTMLTag = 'bg' | 'img' | 'svg';\n\nexport type UpscaleMethod = 'auto' | 'classic' | 'super';\n\nexport type TemplateUnsharpMask = {\n  amount?: string;\n  radius?: string;\n  threshold?: string;\n};\n\nexport type OptionUnsharpMask = {\n  amount?: number;\n  radius?: number;\n  threshold?: number;\n};\n\nexport type TransformType =\n  | 'fit'\n  | 'fill'\n  | 'fill_focal'\n  | 'crop'\n  | 'legacy_crop'\n  | 'legacy_fill';\n\nexport type AlignmentParam =\n  | 'c'\n  | 't'\n  | 'tl'\n  | 'tr'\n  | 'b'\n  | 'bl'\n  | 'br'\n  | 'l'\n  | 'r';\n\nexport type ImageQuality = 'HIGH' | 'MEDIUM' | 'LOW' | 'TINY';\n\nexport type ImageQualityData = {\n  size: number;\n  quality: number;\n  maxUpscale: number;\n};\n\nexport type FileType =\n  | 'jpg'\n  | 'jpeg'\n  | 'jpe'\n  | 'png'\n  | 'webp'\n  | 'wix_ico_mp'\n  | 'wix_mp'\n  | 'gif'\n  | 'svg'\n  | 'unrecognized';\n\nexport type ImageTransformData = {\n  width: number;\n  height: number;\n  forceUSM: boolean;\n  scaleFactor: number;\n  cssUpscaleNeeded: boolean;\n};\n\nexport type TransformCropPart = ImageTransformData & {\n  transformType: TransformType[3];\n  x: number;\n  y: number;\n  upscale: boolean;\n};\n\nexport type TransformFitPart = ImageTransformData & {\n  transformType: TransformType[0];\n  alignment: AlignmentParam[0];\n  upscale: boolean;\n  upscaleMethodValue: number;\n};\n\nexport type TransformFillPart = ImageTransformData & {\n  transformType: TransformType[1];\n  alignment: AlignmentParam;\n  focalPointX?: number | string;\n  focalPointY?: number | string;\n  upscale: boolean;\n  upscaleMethodValue: number;\n};\n\nexport type TransformLegacyFitPart = {\n  transformType: TransformType[0];\n  width: number;\n  height: number;\n  upscale: boolean;\n  forceUSM: boolean;\n  scaleFactor: number;\n  cssUpscaleNeeded: boolean;\n};\n\nexport type TransformLegacyFillPart = {\n  transformType: TransformType[5];\n  width: number;\n  height: number;\n  alignment: AlignmentParam;\n  upscale: boolean;\n  forceUSM: boolean;\n  scaleFactor: number;\n  cssUpscaleNeeded: boolean;\n};\n\nexport type TransformLegacyCropPart = {\n  transformType: TransformType[4];\n  width: number;\n  height: number;\n  alignment: AlignmentParam;\n  upscale: boolean;\n  forceUSM: boolean;\n  scaleFactor: number;\n  cssUpscaleNeeded: boolean;\n};\n\nexport type ImageTransformSource = {\n  id: string;\n  width: number;\n  height: number;\n  name?: string;\n  crop?: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  };\n  focalPoint?: {\n    x?: number;\n    y?: number;\n  };\n};\n\nexport type ImagePlaceholderTransformTarget = {\n  width?: number;\n  height?: number;\n  pixelAspectRatio?: number;\n  alignment?: AlignType;\n  htmlTag?: HTMLTag;\n};\n\nexport type ImageTransformTarget = ImagePlaceholderTransformTarget & {\n  width: number;\n  height: number;\n};\n\nexport type ImageDataAttributes = {\n  uri?: string;\n  srcset?: {\n    dpr?: string[];\n  };\n  css?: {\n    img?: {\n      top?: number | string;\n      bottom?: number | string;\n      left?: number | string;\n      right?: number | string;\n      width?: string | number;\n      height?: string | number;\n      objectFit?: string;\n    };\n    container?: {\n      backgroundSize?: string;\n      backgroundRepeat?: string;\n      backgroundPosition?: string;\n    };\n  };\n  attr?: {\n    img?: {\n      x?: number;\n      y?: number;\n      width?: string;\n      height?: string;\n      preserveAspectRatio?: string;\n    };\n    container?: {};\n  };\n  transformed: boolean;\n};\n\nexport type ImageTransformFiltersOption = {\n  contrast?: number;\n  brightness?: number;\n  saturation?: number;\n  hue?: number;\n  blur?: number;\n};\n\nexport type ImageTransformOptions = {\n  filters?: ImageTransformFiltersOption;\n  progressive?: boolean;\n  unsharpMask?: OptionUnsharpMask;\n  focalPoint?: {\n    x: number;\n    y: number;\n  };\n  name?: string;\n  quality?: number;\n  upscaleMethod?: UpscaleMethod;\n  watermark?: string;\n  isSEOBot?: boolean;\n  baseHostURL?: string;\n  preferredExtension?: string;\n  autoEncode?: boolean;\n  shouldLoadHQImage?: boolean;\n  useSrcset?: boolean;\n  hasAnimation?: boolean;\n};\n\nexport type ImageTransformObjectPart =\n  | TransformCropPart\n  | TransformFitPart\n  | TransformFillPart\n  | TransformLegacyFitPart\n  | TransformLegacyFillPart\n  | TransformLegacyCropPart;\n\nexport type ImageTransformObject = {\n  parts: ImageTransformObjectPart[];\n  fileName: string;\n  fileExtension: string;\n  fileType: string;\n  fittingType: FittingType;\n  preferredExtension: string;\n  src: {\n    id: string;\n    width: number;\n    height: number;\n    isCropped: boolean;\n  };\n  focalPoint: {\n    x?: number;\n    y?: number;\n  };\n  devicePixelRatio: number;\n  quality: number;\n  upscaleMethod: UpscaleMethod;\n  progressive: boolean;\n  watermark?: string;\n  autoEncode?: boolean;\n  unsharpMask?: TemplateUnsharpMask;\n  filters: {\n    blur?: number;\n  };\n  transformed: boolean;\n};\n\nexport type Dimensions = {\n  width: number;\n  height: number;\n};\n\nexport type Point = {\n  x: number;\n  y: number;\n};\n"],"mappings":""}