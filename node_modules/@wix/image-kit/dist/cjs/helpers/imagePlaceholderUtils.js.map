{"version":3,"names":["_imageServiceConstants","require","_imageServiceUtils","ALIGN_TYPE_TO_POSITION","alignTypes","CENTER","TOP_LEFT","TOP_RIGHT","TOP","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM","RIGHT","LEFT","POSITION_TO_ALIGN_TYPE","Object","entries","reduce","acc","align","position","TILE_FITTING_TYPES","fittingTypes","TILE","TILE_HORIZONTAL","TILE_VERTICAL","LEGACY_BG_FIT_AND_TILE","LEGACY_BG_FIT_AND_TILE_HORIZONTAL","LEGACY_BG_FIT_AND_TILE_VERTICAL","NON_SCALING_FITTING_TYPES","LEGACY_ORIGINAL_SIZE","ORIGINAL_SIZE","LEGACY_BG_NORMAL","getIsFakeTile","fittingType","src","width","targetWidth","height","targetHeight","getScaledDimensions","isSEOBot","isScalable","includes","isFakeTile","isTile","_width","_height","scaleFactor","getScaleFactorByWidth","isPNG","id","getConvertedFitting","isFill","SCALE_TO_FILL","SCALE_TO_FIT","validateTargetDimensions","Math","min","heightRatio","isHighQuality","getBlurValue","getCSSOverrides","target","alignment","returnValue","img","container","alignTypeFromFocalPoint","focalPoint","convertFocalPointToAlignType","alignType","objectPosition","convertFillFocalToPosition","objectFit","top","left","right","bottom","backgroundSize","x","y","sW","sH","tW","tH","fpX","fpY","fillScaleFactor","max","imgScaledW","imgScaledH","posX","floor","posY"],"sources":["../../../src/helpers/imagePlaceholderUtils.ts"],"sourcesContent":["import { alignTypes, fittingTypes } from './imageServiceConstants';\nimport { isPNG } from './imageServiceUtils';\nimport type {\n  FittingType,\n  Dimensions,\n  ImageTransformSource,\n  Point,\n} from '../types';\n\nconst ALIGN_TYPE_TO_POSITION = {\n  [alignTypes.CENTER]: '50% 50%',\n  [alignTypes.TOP_LEFT]: '0% 0%',\n  [alignTypes.TOP_RIGHT]: '100% 0%',\n  [alignTypes.TOP]: '50% 0%',\n  [alignTypes.BOTTOM_LEFT]: '0% 100%',\n  [alignTypes.BOTTOM_RIGHT]: '100% 100%',\n  [alignTypes.BOTTOM]: '50% 100%',\n  [alignTypes.RIGHT]: '100% 50%',\n  [alignTypes.LEFT]: '0% 50%',\n};\n\nconst POSITION_TO_ALIGN_TYPE = Object.entries(ALIGN_TYPE_TO_POSITION).reduce(\n  (acc: Record<string, string>, [align, position]) => {\n    acc[position] = align;\n    return acc;\n  },\n  {},\n);\n\nconst TILE_FITTING_TYPES = [\n  fittingTypes.TILE,\n  fittingTypes.TILE_HORIZONTAL,\n  fittingTypes.TILE_VERTICAL,\n  fittingTypes.LEGACY_BG_FIT_AND_TILE,\n  fittingTypes.LEGACY_BG_FIT_AND_TILE_HORIZONTAL,\n  fittingTypes.LEGACY_BG_FIT_AND_TILE_VERTICAL,\n];\n\nconst NON_SCALING_FITTING_TYPES = [\n  fittingTypes.LEGACY_ORIGINAL_SIZE,\n  fittingTypes.ORIGINAL_SIZE,\n  fittingTypes.LEGACY_BG_NORMAL,\n];\n\nfunction getIsFakeTile(\n  fittingType: string,\n  src: ImageTransformSource,\n  {\n    width: targetWidth,\n    height: targetHeight,\n  }: { width: number; height: number },\n) {\n  return (\n    fittingType === fittingTypes.TILE &&\n    src.width > targetWidth &&\n    src.height > targetHeight\n  );\n}\n/**\n *\n * @param {FittingType}             fittingType      imageServicesTypes.fittingTypes\n * @param {ImageTransformSource}    src              source image\n * @param {Dimensions}              target           target container dimensions\n * @param {boolean}                 [isSEOBot=false] whether it is a render for a bot request\n * @returns {Dimensions} scaled dimensions\n */\nfunction getScaledDimensions(\n  fittingType: FittingType,\n  src: ImageTransformSource,\n  { width, height }: Dimensions,\n  isSEOBot = false,\n) {\n  if (isSEOBot) {\n    return { width, height };\n  }\n\n  const isScalable = !NON_SCALING_FITTING_TYPES.includes(fittingType);\n  const isFakeTile = getIsFakeTile(fittingType, src, { width, height });\n  const isTile = !isFakeTile && TILE_FITTING_TYPES.includes(fittingType);\n  const _width = isTile ? src.width : width;\n  const _height = isTile ? src.height : height;\n  const scaleFactor = isScalable\n    ? getScaleFactorByWidth(_width, isPNG(src.id))\n    : 1;\n\n  return {\n    width: isFakeTile ? 1920 : _width * scaleFactor,\n    height: _height * scaleFactor,\n  };\n}\n\n/**\n *\n * @param {FittingType} fittingType  imageServicesTypes.fittingTypes\n * @param {boolean} isFakeTile\n * @returns {string} fittingType\n */\nfunction getConvertedFitting(fittingType: FittingType, isFakeTile: boolean) {\n  const isTile = TILE_FITTING_TYPES.includes(fittingType) && !isFakeTile;\n  const isFill = fittingType === fittingTypes.SCALE_TO_FILL;\n  return isFill || isTile ? fittingTypes.SCALE_TO_FIT : fittingType;\n}\n\n/**\n *\n * @param {ImageTransformSource}    src                 source image\n * @param {number || ''}            width\n * @param {number || ''}            height\n * @returns {Dimensions}    width, height\n */\nfunction validateTargetDimensions(\n  src: ImageTransformSource,\n  { width, height }: { width?: number; height?: number },\n) {\n  if (!width || !height) {\n    const _width = width || Math.min(980, src.width);\n    const heightRatio = _width / src.width;\n    return {\n      width: _width,\n      height: height || src.height * heightRatio,\n    };\n  }\n  return { width, height };\n}\n\n/**\n *\n * @param {number} width\n * @param {boolean} isHighQuality\n * @return {number}\n */\nfunction getScaleFactorByWidth(width: number, isHighQuality: boolean) {\n  if (width > 900) {\n    return isHighQuality ? 0.05 : 0.15;\n  } else if (width > 500) {\n    return isHighQuality ? 0.1 : 0.18;\n  } else if (width > 200) {\n    return 0.25;\n  }\n\n  return 1;\n}\n\n/**\n *\n * @param {number} width\n * @param {FittingType} fittingType imageServicesTypes.fittingTypes\n * @param {boolean} isSEOBot\n * @return {number}\n */\nfunction getBlurValue(\n  width: number,\n  fittingType: FittingType,\n  isSEOBot?: boolean,\n) {\n  if (isSEOBot) {\n    return 0;\n  }\n  if (TILE_FITTING_TYPES.includes(fittingType)) {\n    return 1;\n  }\n\n  if (width > 200) {\n    return 2;\n  }\n\n  return 3;\n}\n\n/**\n *\n * @param {FittingType}                       fittingType\n * @param {ImageTransformSource}              src                  source image\n * @param {{width?: number; height?: number}} target               target element\n * @param {string}                            [alignment='center']\n * @returns {{img}, {container}}\n */\nfunction getCSSOverrides(\n  fittingType: FittingType,\n  src: ImageTransformSource,\n  target: { width?: number; height?: number },\n  alignment = 'center',\n) {\n  const returnValue = {\n    img: {},\n    container: {},\n  };\n\n  if (fittingType === fittingTypes.SCALE_TO_FILL) {\n    const alignTypeFromFocalPoint =\n      src.focalPoint && convertFocalPointToAlignType(src.focalPoint as Point);\n    const alignType = alignTypeFromFocalPoint || alignment;\n\n    if (src.focalPoint && !alignTypeFromFocalPoint) {\n      returnValue.img = {\n        objectPosition: convertFillFocalToPosition(\n          src,\n          target,\n          src.focalPoint as Point,\n        ),\n      };\n    } else {\n      returnValue.img = {\n        objectPosition: ALIGN_TYPE_TO_POSITION[alignType],\n      };\n    }\n  } else if (\n    [fittingTypes.LEGACY_ORIGINAL_SIZE, fittingTypes.ORIGINAL_SIZE].includes(\n      fittingType,\n    )\n  ) {\n    returnValue.img = {\n      objectFit: 'none',\n      top: 'auto',\n      left: 'auto',\n      right: 'auto',\n      bottom: 'auto',\n    };\n  } else if (TILE_FITTING_TYPES.includes(fittingType)) {\n    returnValue.container = {\n      backgroundSize: `${src.width}px ${src.height}px`,\n    };\n  }\n\n  return returnValue;\n}\n\n/**\n * Try to convert focal point value to 9 grid alignment value\n *\n * @param {Point}    focalPoint\n * @returns {AlignType} align type\n */\nfunction convertFocalPointToAlignType(focalPoint: Point) {\n  const position = `${focalPoint.x}% ${focalPoint.y}%`;\n\n  return POSITION_TO_ALIGN_TYPE[position] || '';\n}\n\n/**\n *\n * @param {Dimensions} src source dimensions\n * @param {width?: number; height?: number} target target dimensions\n * @param {Point} focalPoint x/y as 0-100 percentages\n * @returns {string} in 'x% y%' format\n */\nfunction convertFillFocalToPosition(\n  src: Dimensions,\n  target: { width?: number; height?: number },\n  focalPoint: Point,\n) {\n  const { width: sW, height: sH } = src;\n  const { width: tW, height: tH } = target;\n  const { x: fpX, y: fpY } = focalPoint;\n\n  if (!tW || !tH) {\n    return `${fpX}% ${fpY}%`;\n  }\n\n  const fillScaleFactor = Math.max(tW / sW, tH / sH);\n\n  const imgScaledW = sW * fillScaleFactor;\n  const imgScaledH = sH * fillScaleFactor;\n\n  const x = Math.max(\n    0,\n    Math.min(imgScaledW - tW, imgScaledW * (fpX / 100) - tW / 2),\n  );\n  const y = Math.max(\n    0,\n    Math.min(imgScaledH - tH, imgScaledH * (fpY / 100) - tH / 2),\n  );\n\n  const posX = x && Math.floor((x / (imgScaledW - tW)) * 100);\n  const posY = y && Math.floor((y / (imgScaledH - tH)) * 100);\n\n  return `${posX}% ${posY}%`;\n}\n\nexport {\n  getBlurValue,\n  getConvertedFitting,\n  getCSSOverrides,\n  getIsFakeTile,\n  getScaledDimensions,\n  validateTargetDimensions,\n};\n"],"mappings":"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"}