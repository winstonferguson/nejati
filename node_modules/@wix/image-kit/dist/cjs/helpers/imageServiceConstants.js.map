{"version":3,"names":["API_VERSION","exports","MAX_DEVICE_PIXEL_RATIO","DSKTP_MAX_BG_SITE_LEGACY_WIDTH","DSKTP_MAX_BG_SITE_LEGACY_HEIGHT","MOBILE_MAX_BG_SITE_LEGACY_WIDTH","MOBILE_MAX_BG_SITE_LEGACY_HEIGHT","fittingTypes","SCALE_TO_FILL","SCALE_TO_FIT","STRETCH","ORIGINAL_SIZE","TILE","TILE_HORIZONTAL","TILE_VERTICAL","FIT_AND_TILE","LEGACY_STRIP_TILE","LEGACY_STRIP_TILE_HORIZONTAL","LEGACY_STRIP_TILE_VERTICAL","LEGACY_STRIP_SCALE_TO_FILL","LEGACY_STRIP_SCALE_TO_FIT","LEGACY_STRIP_FIT_AND_TILE","LEGACY_STRIP_ORIGINAL_SIZE","LEGACY_ORIGINAL_SIZE","LEGACY_FIT_WIDTH","LEGACY_FIT_HEIGHT","LEGACY_FULL","LEGACY_BG_FIT_AND_TILE","LEGACY_BG_FIT_AND_TILE_HORIZONTAL","LEGACY_BG_FIT_AND_TILE_VERTICAL","LEGACY_BG_NORMAL","transformTypes","FIT","FILL","FILL_FOCAL","CROP","LEGACY_CROP","LEGACY_FILL","alignTypes","CENTER","TOP","TOP_LEFT","TOP_RIGHT","BOTTOM","BOTTOM_LEFT","BOTTOM_RIGHT","LEFT","RIGHT","ALIGN_TYPE_TO_FOCAL_POINT","x","y","alignTypesMap","center","top","top_left","top_right","bottom","bottom_left","bottom_right","left","right","htmlTag","BG","IMG","SVG","upscaleMethods","AUTO","CLASSIC","SUPER","upscaleMethodsValues","classic","super","defaultUSM","radius","amount","threshold","emptyData","uri","css","img","container","attr","transformed","MAX_TRANSFORMED_IMAGE_WIDTH","MAX_TRANSFORMED_IMAGE_HEIGHT","SAFE_TRANSFORMED_AREA","SUPER_UPSCALE_MODELS","imageScaleDefaults","HIGH","size","quality","maxUpscale","MEDIUM","LOW","TINY","imageQuality","imageFilters","CONTRAST","BRIGHTNESS","SATURATION","HUE","BLUR","fileType","JPG","JPEG","JPE","PNG","WEBP","WIX_ICO_MP","WIX_MP","GIF","UNRECOGNIZED","supportedExtensions"],"sources":["../../../src/helpers/imageServiceConstants.ts"],"sourcesContent":["import type {\n  HTMLTag,\n  AlignmentParam,\n  AlignType,\n  FittingType,\n  FileType,\n  ImageQuality,\n  ImageQualityData,\n  ImageTransformFiltersOption,\n  TransformType,\n  UpscaleMethod,\n  ImageDataAttributes,\n} from '../types';\n\n/**\n * image service api version\n */\nconst API_VERSION = 'v1';\n\n/**\nthe maximum retina factor\n */\nconst MAX_DEVICE_PIXEL_RATIO = 2;\n\n/**\n site BG legacy max width x height\n */\nconst DSKTP_MAX_BG_SITE_LEGACY_WIDTH = 1920;\nconst DSKTP_MAX_BG_SITE_LEGACY_HEIGHT = 1920;\nconst MOBILE_MAX_BG_SITE_LEGACY_WIDTH = 1000;\nconst MOBILE_MAX_BG_SITE_LEGACY_HEIGHT = 1000;\n\n/**\n * Enum string values of requested image fitting types\n * Note: TILE_HORIZONTAL, TILE_VERTICAL, FIT_AND_TILE are supported for legacy purposes but are not exposed\n * in the documentation because they should not be exposed for new features\n */\nconst fittingTypes: Record<string, FittingType> = {\n  SCALE_TO_FILL: 'fill',\n  SCALE_TO_FIT: 'fit',\n  STRETCH: 'stretch',\n  ORIGINAL_SIZE: 'original_size',\n  TILE: 'tile',\n  TILE_HORIZONTAL: 'tile_horizontal',\n  TILE_VERTICAL: 'tile_vertical',\n  FIT_AND_TILE: 'fit_and_tile',\n  LEGACY_STRIP_TILE: 'legacy_strip_tile',\n  LEGACY_STRIP_TILE_HORIZONTAL: 'legacy_strip_tile_horizontal',\n  LEGACY_STRIP_TILE_VERTICAL: 'legacy_strip_tile_vertical',\n  LEGACY_STRIP_SCALE_TO_FILL: 'legacy_strip_fill',\n  LEGACY_STRIP_SCALE_TO_FIT: 'legacy_strip_fit',\n  LEGACY_STRIP_FIT_AND_TILE: 'legacy_strip_fit_and_tile',\n  LEGACY_STRIP_ORIGINAL_SIZE: 'legacy_strip_original_size',\n  LEGACY_ORIGINAL_SIZE: 'actual_size',\n  LEGACY_FIT_WIDTH: 'fitWidth',\n  LEGACY_FIT_HEIGHT: 'fitHeight',\n  LEGACY_FULL: 'full',\n  LEGACY_BG_FIT_AND_TILE: 'legacy_tile',\n  LEGACY_BG_FIT_AND_TILE_HORIZONTAL: 'legacy_tile_horizontal',\n  LEGACY_BG_FIT_AND_TILE_VERTICAL: 'legacy_tile_vertical',\n  LEGACY_BG_NORMAL: 'legacy_normal',\n};\n\n/**\n * Enum string values of image transform types as passed to the image service api\n */\nconst transformTypes: Record<string, TransformType> = {\n  FIT: 'fit',\n  FILL: 'fill',\n  FILL_FOCAL: 'fill_focal',\n  CROP: 'crop',\n  LEGACY_CROP: 'legacy_crop',\n  LEGACY_FILL: 'legacy_fill',\n};\n\n/**\n * Enum string values of requested image align types\n * @type {{CENTER: string, RIGHT: string, LEFT: string, TOP: string, BOTTOM: string, TOP_RIGHT: string, TOP_LEFT: string, BOTTOM_RIGHT: string, BOTTOM_LEFT: string}}\n */\nconst alignTypes: Record<string, AlignType> = {\n  CENTER: 'center',\n  TOP: 'top',\n  TOP_LEFT: 'top_left',\n  TOP_RIGHT: 'top_right',\n  BOTTOM: 'bottom',\n  BOTTOM_LEFT: 'bottom_left',\n  BOTTOM_RIGHT: 'bottom_right',\n  LEFT: 'left',\n  RIGHT: 'right',\n};\n\n/**\n * Enum 9Grid alignment to focal point\n */\nconst ALIGN_TYPE_TO_FOCAL_POINT = {\n  [alignTypes.CENTER]: { x: 0.5, y: 0.5 },\n  [alignTypes.TOP_LEFT]: { x: 0, y: 0 },\n  [alignTypes.TOP_RIGHT]: { x: 1.0, y: 0 },\n  [alignTypes.TOP]: { x: 0.5, y: 0 },\n  [alignTypes.BOTTOM_LEFT]: { x: 0, y: 1.0 },\n  [alignTypes.BOTTOM_RIGHT]: { x: 1.0, y: 1.0 },\n  [alignTypes.BOTTOM]: { x: 0.5, y: 1.0 },\n  [alignTypes.RIGHT]: { x: 1.0, y: 0.5 },\n  [alignTypes.LEFT]: { x: 0, y: 0.5 },\n};\n\n/**\n * Enum string values of image align types as passed to the image service\n */\nconst alignTypesMap: Record<AlignType, AlignmentParam> = {\n  center: 'c',\n  top: 't',\n  top_left: 'tl',\n  top_right: 'tr',\n  bottom: 'b',\n  bottom_left: 'bl',\n  bottom_right: 'br',\n  left: 'l',\n  right: 'r',\n};\n\n/**\n * Enum string values of html tag used to construct the css or svg attributes\n *  @type {{BG: string, IMG: string, SVG: string}}\n */\nconst htmlTag: Record<string, HTMLTag> = {\n  BG: 'bg',\n  IMG: 'img',\n  SVG: 'svg',\n};\n\n/**\n * Enum string values of upscale method\n *  @type {{DEFAULT: string, SUPER: string}}\n */\nconst upscaleMethods: Record<string, UpscaleMethod> = {\n  AUTO: 'auto',\n  CLASSIC: 'classic',\n  SUPER: 'super',\n};\n\n/**\n *  api values of upscale method\n *  @type {{default: number, super: number}}\n */\nconst upscaleMethodsValues = {\n  classic: 1,\n  super: 2,\n};\n\n/**\n * default unsharp mask values\n *  @type {{radius: number, amount: number, threshold: number}}\n */\nconst defaultUSM = {\n  radius: '0.66',\n  amount: '1.00',\n  threshold: '0.01',\n};\n\n/**\n * default empty data\n */\nconst emptyData = {\n  uri: '',\n  css: {\n    img: {},\n    container: {},\n  },\n  attr: {\n    img: {},\n    container: {},\n  },\n  transformed: false,\n} as ImageDataAttributes;\n\nconst MAX_TRANSFORMED_IMAGE_WIDTH = 5000;\nconst MAX_TRANSFORMED_IMAGE_HEIGHT = 5000;\nconst SAFE_TRANSFORMED_AREA =\n  MAX_TRANSFORMED_IMAGE_WIDTH * MAX_TRANSFORMED_IMAGE_HEIGHT;\n\n/**\n * super res machine learning upscale factor models -\n * @type {number[]}\n */\nconst SUPER_UPSCALE_MODELS = [1.5, 2, 4];\n\n/**\n * image qualities\n */\nconst imageScaleDefaults: Record<ImageQuality, ImageQualityData> = {\n  HIGH: {\n    size: 1400 * 1400,\n    quality: 90,\n    maxUpscale: 1,\n  },\n  MEDIUM: {\n    size: 600 * 600,\n    quality: 85,\n    maxUpscale: 1,\n  },\n  LOW: {\n    size: 400 * 400,\n    quality: 80,\n    maxUpscale: 1.2,\n  },\n  TINY: {\n    size: 0,\n    quality: 80,\n    maxUpscale: 1.4,\n  },\n};\n\n/**\n * image quality\n * @type {{HIGH: string, MEDIUM: string, LOW: string, TINY: string}}\n */\nconst imageQuality: Record<ImageQuality, ImageQuality> = {\n  HIGH: 'HIGH',\n  MEDIUM: 'MEDIUM',\n  LOW: 'LOW',\n  TINY: 'TINY',\n};\n\n/**\n * image filters\n * @type {{CONTRAST: string, BRIGHTNESS: string, SATURATION: string, HUE: string, BLUR: string}}\n */\nconst imageFilters: Record<string, keyof ImageTransformFiltersOption> = {\n  CONTRAST: 'contrast',\n  BRIGHTNESS: 'brightness',\n  SATURATION: 'saturation',\n  HUE: 'hue',\n  BLUR: 'blur',\n};\n\nconst fileType: Record<string, FileType> = {\n  JPG: 'jpg',\n  JPEG: 'jpeg',\n  JPE: 'jpe',\n  PNG: 'png',\n  WEBP: 'webp',\n  WIX_ICO_MP: 'wix_ico_mp',\n  WIX_MP: 'wix_mp',\n  GIF: 'gif',\n  SVG: 'svg',\n  UNRECOGNIZED: 'unrecognized',\n};\n\nconst supportedExtensions = [\n  fileType.JPG,\n  fileType.JPEG,\n  fileType.JPE,\n  fileType.PNG,\n  fileType.GIF,\n  fileType.WEBP,\n];\n\nexport {\n  alignTypes,\n  alignTypesMap,\n  transformTypes,\n  fittingTypes,\n  htmlTag,\n  upscaleMethods,\n  upscaleMethodsValues,\n  defaultUSM,\n  emptyData,\n  imageQuality,\n  imageFilters,\n  imageScaleDefaults,\n  fileType,\n  supportedExtensions,\n  DSKTP_MAX_BG_SITE_LEGACY_WIDTH,\n  MOBILE_MAX_BG_SITE_LEGACY_WIDTH,\n  DSKTP_MAX_BG_SITE_LEGACY_HEIGHT,\n  MOBILE_MAX_BG_SITE_LEGACY_HEIGHT,\n  SAFE_TRANSFORMED_AREA,\n  SUPER_UPSCALE_MODELS,\n  MAX_DEVICE_PIXEL_RATIO,\n  ALIGN_TYPE_TO_FOCAL_POINT,\n  API_VERSION,\n};\n"],"mappings":"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"}