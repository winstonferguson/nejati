{"version":3,"names":["_imageServiceConstants","require","_imageServiceUtils","setTransformParts","transformsObj","src","target","rect","crop","getOverlappingRect","width","height","isCropped","parts","push","getCropPart","fittingType","fittingTypes","SCALE_TO_FIT","LEGACY_FIT_WIDTH","LEGACY_FIT_HEIGHT","LEGACY_FULL","FIT_AND_TILE","LEGACY_BG_FIT_AND_TILE","LEGACY_BG_FIT_AND_TILE_HORIZONTAL","LEGACY_BG_FIT_AND_TILE_VERTICAL","LEGACY_BG_NORMAL","getFitPart","SCALE_TO_FILL","getFillPart","STRETCH","getStretchPart","TILE_HORIZONTAL","TILE_VERTICAL","TILE","LEGACY_ORIGINAL_SIZE","ORIGINAL_SIZE","getAlignedRect","focalPoint","alignment","Object","assign","LEGACY_STRIP_TILE_HORIZONTAL","LEGACY_STRIP_TILE_VERTICAL","LEGACY_STRIP_TILE","LEGACY_STRIP_ORIGINAL_SIZE","getLegacyCropPart","LEGACY_STRIP_SCALE_TO_FIT","LEGACY_STRIP_FIT_AND_TILE","getLegacyFitPart","LEGACY_STRIP_SCALE_TO_FILL","getLegacyFillPart","transformedData","getTransformData","transformTypes","FIT","devicePixelRatio","upscaleMethod","transformType","FILL","Math","round","alignTypesMap","center","upscale","scaleFactor","forceUSM","cssUpscaleNeeded","upscaleMethodValue","getFocalPoint","FILL_FOCAL","getAlignment","focalPointX","x","focalPointY","y","getScaleFactor","clonedTarget","CROP","LEGACY_FILL","LEGACY_CROP"],"sources":["../../../src/helpers/imageTransformParts.ts"],"sourcesContent":["import type {\n  TransformFitPart,\n  TransformCropPart,\n  TransformFillPart,\n  TransformLegacyFillPart,\n  TransformLegacyFitPart,\n  TransformLegacyCropPart,\n  ImageTransformObject,\n  ImageTransformTarget,\n  ImageTransformSource,\n} from '../types';\nimport {\n  fittingTypes,\n  transformTypes,\n  alignTypesMap,\n} from './imageServiceConstants';\nimport {\n  getAlignment,\n  getScaleFactor,\n  getOverlappingRect,\n  getAlignedRect,\n  getTransformData,\n  getFocalPoint,\n} from './imageServiceUtils';\n\n/**\n * request analysis, returns parsed transforms object\n * @param {object}                  transformsObj\n * @param {ImageTransformSource}    src\n * @param {ImageTransformTarget}    target\n */\nfunction setTransformParts(\n  transformsObj: ImageTransformObject,\n  src: ImageTransformSource,\n  target: ImageTransformTarget,\n) {\n  let rect;\n\n  // crop source image if needed\n  // set crop part and adjust source dimensions\n  if (src.crop) {\n    rect = getOverlappingRect(src, src.crop);\n\n    if (rect) {\n      transformsObj.src.width = rect.width;\n      transformsObj.src.height = rect.height;\n      transformsObj.src.isCropped = true;\n      transformsObj.parts.push(getCropPart(rect));\n    }\n  }\n\n  // set additional transform part\n  switch (transformsObj.fittingType) {\n    case fittingTypes.SCALE_TO_FIT:\n    case fittingTypes.LEGACY_FIT_WIDTH:\n    case fittingTypes.LEGACY_FIT_HEIGHT:\n    case fittingTypes.LEGACY_FULL:\n    case fittingTypes.FIT_AND_TILE:\n    case fittingTypes.LEGACY_BG_FIT_AND_TILE:\n    case fittingTypes.LEGACY_BG_FIT_AND_TILE_HORIZONTAL:\n    case fittingTypes.LEGACY_BG_FIT_AND_TILE_VERTICAL:\n    case fittingTypes.LEGACY_BG_NORMAL:\n      // fit\n      transformsObj.parts.push(getFitPart(transformsObj, target));\n      break;\n\n    case fittingTypes.SCALE_TO_FILL:\n      // fill\n      transformsObj.parts.push(getFillPart(transformsObj, target));\n      break;\n\n    case fittingTypes.STRETCH:\n      // stretch\n      transformsObj.parts.push(getStretchPart(transformsObj, target));\n      break;\n\n    case fittingTypes.TILE_HORIZONTAL:\n    case fittingTypes.TILE_VERTICAL:\n    case fittingTypes.TILE:\n    case fittingTypes.LEGACY_ORIGINAL_SIZE:\n    case fittingTypes.ORIGINAL_SIZE:\n      // use crop transform\n      // if crop of source image was requested adjust cropping rectangle\n      rect = getAlignedRect(\n        transformsObj.src,\n        target,\n        transformsObj.focalPoint,\n        target.alignment,\n      );\n\n      if (transformsObj.src.isCropped) {\n        Object.assign(transformsObj.parts[0], rect);\n\n        // update source width & height accordingly\n        transformsObj.src.width = rect.width;\n        transformsObj.src.height = rect.height;\n      } else {\n        transformsObj.parts.push(getCropPart(rect));\n      }\n      break;\n\n    // ---------------------------------------------------------------------------------------\n    // handles a legacy bug on bgImageStrip, background html tag\n    // component Full Width Strip stored incorrect image source width and height\n    // ---------------------------------------------------------------------------------------\n    case fittingTypes.LEGACY_STRIP_TILE_HORIZONTAL:\n    case fittingTypes.LEGACY_STRIP_TILE_VERTICAL:\n    case fittingTypes.LEGACY_STRIP_TILE:\n    case fittingTypes.LEGACY_STRIP_ORIGINAL_SIZE:\n      // crop request of source image is not supported\n      // use legacy crop\n      transformsObj.parts.push(getLegacyCropPart(target));\n      break;\n\n    case fittingTypes.LEGACY_STRIP_SCALE_TO_FIT:\n    case fittingTypes.LEGACY_STRIP_FIT_AND_TILE:\n      // legacy fit\n      transformsObj.parts.push(getLegacyFitPart(target));\n      break;\n\n    case fittingTypes.LEGACY_STRIP_SCALE_TO_FILL:\n      // legacy fill\n      transformsObj.parts.push(getLegacyFillPart(target));\n      break;\n  }\n}\n\n/**\n * returns fit part of the image transform uri\n * @param {object}                  transformsObj\n * @param {ImageTransformTarget}    target\n *\n * @returns {TransformFitPart}\n */\nfunction getFitPart(\n  transformsObj: ImageTransformObject,\n  target: ImageTransformTarget,\n): TransformFitPart {\n  // calculate the transformed image size needed\n  const transformedData = getTransformData(\n    transformsObj.src.width,\n    transformsObj.src.height,\n    transformTypes.FIT,\n    target,\n    transformsObj.devicePixelRatio,\n    transformsObj.upscaleMethod,\n  );\n\n  const transformType = transformTypes.FILL;\n\n  // return fit transform data\n  return {\n    transformType,\n    width: Math.round(transformedData.width),\n    height: Math.round(transformedData.height),\n    alignment: alignTypesMap.center,\n    upscale: transformedData.scaleFactor > 1,\n    forceUSM: transformedData.forceUSM,\n    scaleFactor: transformedData.scaleFactor,\n    cssUpscaleNeeded: transformedData.cssUpscaleNeeded,\n    upscaleMethodValue: transformedData.upscaleMethodValue,\n  };\n}\n\n/**\n * returns fill part of the image transform uri\n * @param {ImageTransformObject} transformsObj\n * @param {ImageTransformTarget} target\n *\n * @returns {TransformFillPart}\n */\nfunction getFillPart(\n  transformsObj: ImageTransformObject,\n  target: ImageTransformTarget,\n): TransformFillPart {\n  // calculate the transformed image size needed\n  const transformedData = getTransformData(\n    transformsObj.src.width,\n    transformsObj.src.height,\n    transformTypes.FILL,\n    target,\n    transformsObj.devicePixelRatio,\n    transformsObj.upscaleMethod,\n  );\n  const focalPoint = getFocalPoint(transformsObj.focalPoint);\n  const transformType = focalPoint\n    ? transformTypes.FILL_FOCAL\n    : transformTypes.FILL;\n\n  return {\n    transformType,\n    width: Math.round(transformedData.width),\n    height: Math.round(transformedData.height),\n    alignment: getAlignment(target),\n    focalPointX: focalPoint && focalPoint.x,\n    focalPointY: focalPoint && focalPoint.y,\n    upscale: transformedData.scaleFactor > 1,\n    forceUSM: transformedData.forceUSM,\n    scaleFactor: transformedData.scaleFactor,\n    cssUpscaleNeeded: transformedData.cssUpscaleNeeded,\n    upscaleMethodValue: transformedData.upscaleMethodValue,\n  };\n}\n\n/**\n * returns fill part of the image transform uri\n * @param {ImageTransformObject} transformsObj\n * @param {ImageTransformTarget} target\n *\n * @returns {TransformFitPart}\n */\nfunction getStretchPart(\n  transformsObj: ImageTransformObject,\n  target: ImageTransformTarget,\n): TransformFitPart {\n  // stretch data\n  const scaleFactor = getScaleFactor(\n    transformsObj.src.width,\n    transformsObj.src.height,\n    target.width,\n    target.height,\n    transformTypes.FILL,\n  );\n  const clonedTarget = { ...target };\n  clonedTarget.width = transformsObj.src.width * scaleFactor;\n  clonedTarget.height = transformsObj.src.height * scaleFactor;\n\n  // return stretch part\n  return getFitPart(transformsObj, clonedTarget);\n}\n\n/**\n * returns crop part of the image transform uri\n * @param {{x: number, y: number, width: number, height: number}}  rect     x, y, width, height\n *\n * @returns {TransformCropPart}\n */\nfunction getCropPart(rect: {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}): TransformCropPart {\n  return {\n    transformType: transformTypes.CROP,\n    x: Math.round(rect.x),\n    y: Math.round(rect.y),\n    width: Math.round(rect.width),\n    height: Math.round(rect.height),\n    upscale: false,\n    forceUSM: false,\n    scaleFactor: 1,\n    cssUpscaleNeeded: false,\n  };\n}\n\n// ---------------------------------------------------------------------------------------\n// handles a legacy bug on bgImageStrip, background html tag\n// component Full Width Strip stored incorrect image source width and height\n// ---------------------------------------------------------------------------------------\n\n/**\n * returns fit part of the image transform uri\n * @param {ImageTransformTarget}    target\n *\n * @returns {TransformLegacyFitPart}\n */\nfunction getLegacyFitPart(\n  target: ImageTransformTarget,\n): TransformLegacyFitPart {\n  return {\n    transformType: transformTypes.FIT,\n    width: Math.round(target.width),\n    height: Math.round(target.height),\n    upscale: false,\n    forceUSM: true,\n    scaleFactor: 1,\n    cssUpscaleNeeded: false,\n  };\n}\n\n/**\n * returns fill part of the image transform uri\n * @param {ImageTransformTarget}    target\n *\n * @returns {TransformLegacyFillPart}\n */\nfunction getLegacyFillPart(\n  target: ImageTransformTarget,\n): TransformLegacyFillPart {\n  return {\n    transformType: transformTypes.LEGACY_FILL,\n    width: Math.round(target.width),\n    height: Math.round(target.height),\n    alignment: getAlignment(target),\n    upscale: false,\n    forceUSM: true,\n    scaleFactor: 1,\n    cssUpscaleNeeded: false,\n  };\n}\n\n/**\n * returns legacy crop part of the image transform uri\n * @param {ImageTransformTarget}     target\n *\n * @returns {TransformLegacyCropPart}\n */\nfunction getLegacyCropPart(\n  target: ImageTransformTarget,\n): TransformLegacyCropPart {\n  return {\n    transformType: transformTypes.LEGACY_CROP,\n    width: Math.round(target.width),\n    height: Math.round(target.height),\n    alignment: getAlignment(target),\n    upscale: false,\n    forceUSM: false,\n    scaleFactor: 1,\n    cssUpscaleNeeded: false,\n  };\n}\n\nexport { setTransformParts };\n"],"mappings":"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"}