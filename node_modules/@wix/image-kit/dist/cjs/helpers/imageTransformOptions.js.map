{"version":3,"names":["_utils","require","_imageServiceUtils","_imageServiceConstants","setTransformOptions","transformsObj","options","quality","getQuality","progressive","getProgressive","watermark","getWatermark","autoEncode","unsharpMask","getUnsharpMask","filters","getFilters","isPNG","fileType","PNG","isJPG","JPG","isWEBP","WEBP","isQualitySupported","transformData","last","parts","defaultQuality","getPreferredImageQuality","width","height","filterOptions","isValidImageFilter","imageFilters","CONTRAST","BRIGHTNESS","SATURATION","HUE","BLUR","filterValue","minValue","maxValue","isNaN","isUSMValid","_options$unsharpMask","_options$unsharpMask2","_options$unsharpMask3","radius","roundToFixed","amount","threshold","isZeroUSM","isUSMNeeded","defaultUSM","transformPart","upscale","scaleFactor","forceUSM","usm"],"sources":["../../../src/helpers/imageTransformOptions.ts"],"sourcesContent":["import { last } from './utils';\nimport { getPreferredImageQuality, roundToFixed } from './imageServiceUtils';\nimport { defaultUSM, fileType, imageFilters } from './imageServiceConstants';\nimport type {\n  ImageTransformFiltersOption,\n  ImageTransformObject,\n  ImageTransformOptions,\n  OptionUnsharpMask,\n  TemplateUnsharpMask,\n} from '../types';\n\n/**\n * returns image filters part of the image transform uri\n * @param {ImageTransformObject}    transformsObj    transform parts object\n * @param {ImageTransformOptions}   [options]\n */\nfunction setTransformOptions(\n  transformsObj: ImageTransformObject,\n  options?: ImageTransformOptions,\n) {\n  options = options || {};\n  // options - general\n  transformsObj.quality = getQuality(transformsObj, options);\n  transformsObj.progressive = getProgressive(options);\n  transformsObj.watermark = getWatermark(options);\n  transformsObj.autoEncode = options.autoEncode ?? true;\n  // options - filters & adjustments\n  transformsObj.unsharpMask = getUnsharpMask(transformsObj, options);\n  transformsObj.filters = getFilters(options);\n}\n\n/**\n *\n * @param {ImageTransformOptions}   options\n * @returns {string}\n */\nfunction getWatermark(options: ImageTransformOptions) {\n  return options.watermark;\n}\n\n/**\n * returns progressive if required\n * @param {ImageTransformOptions}   options\n *\n * @returns {boolean}\n */\nfunction getProgressive(options: ImageTransformOptions) {\n  return options.progressive !== false;\n}\n\n/**\n * returns image filters part of the image transform uri\n * @param {ImageTransformObject}    transformsObj    transform parts object\n * @param {ImageTransformOptions}   options\n *\n * @returns {number}\n */\nfunction getQuality(\n  transformsObj: ImageTransformObject,\n  options: ImageTransformOptions,\n) {\n  const isPNG = transformsObj.fileType === fileType.PNG;\n  const isJPG = transformsObj.fileType === fileType.JPG;\n  const isWEBP = transformsObj.fileType === fileType.WEBP;\n\n  const isQualitySupported = isJPG || isPNG || isWEBP;\n  if (isQualitySupported) {\n    const transformData = last(transformsObj.parts);\n\n    const defaultQuality = getPreferredImageQuality(\n      transformData.width,\n      transformData.height,\n    );\n    let quality =\n      options.quality && options.quality >= 5 && options.quality <= 90\n        ? options.quality\n        : defaultQuality;\n    // increase quality by 5 for webp images\n    quality = isPNG ? quality + 5 : quality;\n    return quality;\n  }\n  // quality not supported\n  return 0;\n}\n\n/**\n * returns the desired transformed image filters\n * @param {ImageTransformOptions}   options\n *\n * @returns {object}\n */\nfunction getFilters(options: ImageTransformOptions) {\n  const filterOptions: ImageTransformFiltersOption = options.filters || {};\n  const filters: ImageTransformFiltersOption = {};\n\n  // contrast\n  if (isValidImageFilter(filterOptions[imageFilters.CONTRAST], -100, 100)) {\n    filters[imageFilters.CONTRAST] = filterOptions[imageFilters.CONTRAST];\n  }\n\n  // brightness\n  if (isValidImageFilter(filterOptions[imageFilters.BRIGHTNESS], -100, 100)) {\n    filters[imageFilters.BRIGHTNESS] = filterOptions[imageFilters.BRIGHTNESS];\n  }\n\n  // saturation\n  if (isValidImageFilter(filterOptions[imageFilters.SATURATION], -100, 100)) {\n    filters[imageFilters.SATURATION] = filterOptions[imageFilters.SATURATION];\n  }\n\n  // hue\n  if (isValidImageFilter(filterOptions[imageFilters.HUE], -180, 180)) {\n    filters[imageFilters.HUE] = filterOptions[imageFilters.HUE];\n  }\n\n  // blur\n  if (isValidImageFilter(filterOptions[imageFilters.BLUR], 0, 100)) {\n    filters[imageFilters.BLUR] = filterOptions[imageFilters.BLUR];\n  }\n\n  return filters;\n}\n\n/**\n * indicates if requested filter value is valid\n * @param {number|undefined}  filterValue     filter's value\n * @param {number}  minValue        min range\n * @param {number}  maxValue        max range\n *\n * @returns {boolean}\n */\nfunction isValidImageFilter(\n  filterValue: number | undefined,\n  minValue: number,\n  maxValue: number,\n) {\n  // check if filter name and filter values range valid\n  return (\n    typeof filterValue === 'number' &&\n    !isNaN(filterValue) &&\n    filterValue !== 0 &&\n    filterValue >= minValue &&\n    filterValue <= maxValue\n  );\n}\n\n/**\n * returns the desired transformed image unSharpMask values\n * @param {ImageTransformObject}    transformsObj    transform parts object\n * @param {ImageTransformOptions}   options\n *\n * @returns {object}\n */\nfunction getUnsharpMask(\n  transformsObj: ImageTransformObject,\n  options: ImageTransformOptions,\n): TemplateUnsharpMask | undefined {\n  // If options.unsharpMask is a valid value, use it\n  if (isUSMValid(options.unsharpMask)) {\n    // If we got usm, change values to have trailing zeros (.00), else return undefined\n    return {\n      radius: roundToFixed(options.unsharpMask?.radius!, 2),\n      amount: roundToFixed(options.unsharpMask?.amount!, 2),\n      threshold: roundToFixed(options.unsharpMask?.threshold!, 2),\n    };\n    // if options.unsharpMask is not all zeros and not valid and usm should be used, use default\n  } else if (!isZeroUSM(options.unsharpMask) && isUSMNeeded(transformsObj)) {\n    return defaultUSM;\n  }\n\n  return;\n}\n\n/**\n * indicates if usm is needed\n * @param {ImageTransformObject}      transformsObj   transform parts object\n *\n * @returns {boolean}\n */\nfunction isUSMNeeded(transformsObj: ImageTransformObject) {\n  // ---------------------------------------------------------------------------------------\n  // do not apply usm if transformed image width & height is same as source image or larger\n  // and no force usm is desired\n  // ---------------------------------------------------------------------------------------\n  const transformPart = last(transformsObj.parts);\n  const upscale = transformPart.scaleFactor >= 1;\n\n  // return if usm is needed\n  return !upscale || transformPart.forceUSM;\n}\n\n/**\n * indicates if all usm values are presented and in range\n * @param {OptionUnsharpMask|undefined}  usm     unsharp mask\n *\n * @returns {boolean}\n */\nfunction isUSMValid(usm: OptionUnsharpMask | undefined) {\n  usm = usm || ({} as OptionUnsharpMask);\n  const radius =\n    typeof usm.radius === 'number' &&\n    !isNaN(usm.radius) &&\n    usm.radius >= 0.1 &&\n    usm.radius <= 500;\n  const amount =\n    typeof usm.amount === 'number' &&\n    !isNaN(usm.amount) &&\n    usm.amount >= 0 &&\n    usm.amount <= 10;\n  const threshold =\n    typeof usm.threshold === 'number' &&\n    !isNaN(usm.threshold) &&\n    usm.threshold >= 0 &&\n    usm.threshold <= 255;\n\n  // return is a valid USM data\n  return radius && amount && threshold;\n}\n\n/**\n * indicates if all usm values are presented and are zero. an explicit request to not apply usm\n * @param {OptionUnsharpMask|undefined}  usm     unsharp mask\n *\n * @returns {boolean}\n */\nfunction isZeroUSM(usm: OptionUnsharpMask | undefined) {\n  usm = usm || ({} as OptionUnsharpMask);\n  return (\n    typeof usm.radius === 'number' &&\n    !isNaN(usm.radius) &&\n    usm.radius === 0 &&\n    typeof usm.amount === 'number' &&\n    !isNaN(usm.amount) &&\n    usm.amount === 0 &&\n    typeof usm.threshold === 'number' &&\n    !isNaN(usm.threshold) &&\n    usm.threshold === 0\n  );\n}\n\nexport { setTransformOptions };\n"],"mappings":"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"}