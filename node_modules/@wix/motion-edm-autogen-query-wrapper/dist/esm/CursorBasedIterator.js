import { __extends } from "tslib";
import { Iterator } from './Iterator';
var CursorBasedIterator = /** @class */ (function (_super) {
    __extends(CursorBasedIterator, _super);
    function CursorBasedIterator(_a) {
        var items = _a.items, originQuery = _a.originQuery, fetchNextPage = _a.fetchNextPage, fetchPrevPage = _a.fetchPrevPage, limit = _a.limit, nextCursor = _a.nextCursor, prevCursor = _a.prevCursor;
        var _this = _super.call(this, { items: items, originQuery: originQuery, fetchNextPage: fetchNextPage, fetchPrevPage: fetchPrevPage, limit: limit }) || this;
        _this._nextCursor = nextCursor;
        _this._prevCursor = prevCursor;
        _this.cursors = {
            next: nextCursor,
            prev: prevCursor,
        };
        return _this;
    }
    CursorBasedIterator.prototype.hasNext = function () {
        return !!this._nextCursor;
    };
    CursorBasedIterator.prototype.hasPrev = function () {
        return !!this._prevCursor;
    };
    return CursorBasedIterator;
}(Iterator));
export { CursorBasedIterator };
//# sourceMappingURL=CursorBasedIterator.js.map