import { Validator } from './validator';
export declare class FilterValidator implements Validator {
    private ctor;
    private _invalidArguments;
    _validations: Validation[];
    operatorName?: string;
    constructor(operatorName: any, previousInvalidArguments: any, ctor: any);
    typeIsString(value: any): this;
    typeIsStringNumberOrDate(value: any): this;
    sameType(first: any, second: any): this;
    typeIsStringNumberOrDateForAll(values: any): this;
    validFieldName(field: any): this;
    isInstanceOfSameClass(obj: any): this;
    arityIsOne(args: any): this;
    arityIsTwo(args: any): this;
    arityIsThree(args: any): this;
    arityIsAtLeastTwo(args: any): this;
    addValidation(predicateFn: any, messageFn: any): this;
    validateAndAggregate(): [string[], boolean];
    _appendIfInvalid(valid: any, message: any): boolean;
}
interface Validation {
    predicateFn: Function;
    messageFn: Function;
}
export {};
//# sourceMappingURL=filter-validator.d.ts.map