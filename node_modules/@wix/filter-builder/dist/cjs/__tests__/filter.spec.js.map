{"version":3,"names":["_chai","_interopRequireDefault","require","_","expect","chai","inAnd","args","$and","describe","filter","filterBuilder","it","now","Date","filterWithEncoder","encoder","wixDataEncoder","eq","getFilterModel","to","be","eql","x","$date","toJSON","ne","$ne","gt","$gt","ge","$gte","lt","$lt","le","$lte","isNotEmpty","isEmpty","startsWith","$startsWith","endsWith","$endsWith","contains","$contains","hasSome","$hasSome","hasAll","$hasAll","not","throw","Error","filterTreeGetters","forEach","filterTreeGetter","_build","or","and","between","a","$or","f","y","z","filterTree","$not","field","startDate","endDate","setYear","getYear","invalidExamples","undefined","first","second","firstType","secondType","newFilter","setFilterModel","equal","invalidFilter","invalidArguments"],"sources":["../../../src/__tests__/filter.spec.ts"],"sourcesContent":["import chai from 'chai'\nimport { filterBuilder, wixDataEncoder } from '..'\n\nconst expect = chai.expect\n\nfunction inAnd(...args) {\n  return { $and: args }\n}\n\ndescribe('filter', function () {\n  const filter = filterBuilder()\n\n  describe('custom encoders', function () {\n    it('encode date with wixDataEncoder', function () {\n      const now = new Date()\n      const filterWithEncoder = filterBuilder({ encoder: wixDataEncoder })\n\n      expect(filterWithEncoder.eq('x', now).getFilterModel()).to.be.eql({\n        x: { $date: now.toJSON() },\n      })\n    })\n\n    it('encode with custom encoder', function () {\n      const encoder = () => 3\n      const filterWithEncoder = filterBuilder({ encoder })\n\n      expect(filterWithEncoder.eq('x', 'a').getFilterModel()).to.be.eql({\n        x: 3,\n      })\n    })\n  })\n\n  describe('filter comparison operators', function () {\n    it('should produce the correct filter tree', function () {\n      expect(filter.eq('x', 1).getFilterModel()).to.be.eql({ x: 1 })\n      expect(filter.ne('x', 1).getFilterModel()).to.be.eql({ x: { $ne: 1 } })\n      expect(filter.gt('x', 1).getFilterModel()).to.be.eql({ x: { $gt: 1 } })\n      expect(filter.ge('x', 1).getFilterModel()).to.be.eql({ x: { $gte: 1 } })\n      expect(filter.lt('x', 1).getFilterModel()).to.be.eql({ x: { $lt: 1 } })\n      expect(filter.le('x', 1).getFilterModel()).to.be.eql({ x: { $lte: 1 } })\n      expect(filter.isNotEmpty('x').getFilterModel()).to.be.eql({\n        x: { $ne: null },\n      })\n      expect(filter.isEmpty('x').getFilterModel()).to.be.eql({ x: null })\n      expect(filter.startsWith('x', 'A').getFilterModel()).to.be.eql({\n        x: { $startsWith: 'A' },\n      })\n      expect(filter.endsWith('x', 'A').getFilterModel()).to.be.eql({\n        x: { $endsWith: 'A' },\n      })\n      expect(filter.contains('x', 'A').getFilterModel()).to.be.eql({\n        x: { $contains: 'A' },\n      })\n      expect(filter.hasSome('x', [1, 2]).getFilterModel()).to.be.eql({\n        x: { $hasSome: [1, 2] },\n      })\n      expect(filter.hasSome('x', 1, 2).getFilterModel()).to.be.eql({\n        x: { $hasSome: [1, 2] },\n      })\n      expect(filter.hasAll('x', [1, 2]).getFilterModel()).to.be.eql({\n        x: { $hasAll: [1, 2] },\n      })\n      expect(filter.hasAll('x', 1, 2).getFilterModel()).to.be.eql({\n        x: { $hasAll: [1, 2] },\n      })\n    })\n\n    it('should accept valid arguments for all types of queries', function () {\n      expect(() => filter.eq('x', 0)).to.not.throw(Error)\n      expect(() => filter.ne('x', 0)).to.not.throw(Error)\n      expect(() => filter.gt('x', 0)).to.not.throw(Error)\n      expect(() => filter.ge('x', 0)).to.not.throw(Error)\n      expect(() => filter.lt('x', 0)).to.not.throw(Error)\n      expect(() => filter.le('x', 0)).to.not.throw(Error)\n      expect(() => filter.startsWith('x', '')).to.not.throw(Error)\n      expect(() => filter.endsWith('x', '')).to.not.throw(Error)\n      expect(() => filter.contains('x', '')).to.not.throw(Error)\n    })\n\n    const filterTreeGetters = ['_build', 'getFilterModel']\n    filterTreeGetters.forEach(function (filterTreeGetter) {\n      describe(filterTreeGetter, function () {\n        it('should throw error if builder is called with too little arguments', function () {\n          expect(() => filter.eq('x')._build()).to.throw(\n            'Invalid .eq usage. .eq requires two parameters.'\n          )\n          expect(() => filter.ne('x')._build()).to.throw(\n            'Invalid .ne usage. .ne requires two parameters.'\n          )\n          expect(() => filter.gt('x')._build()).to.throw(\n            'Invalid .gt usage. .gt requires two parameters.'\n          )\n          expect(() => filter.ge('x')._build()).to.throw(\n            'Invalid .ge usage. .ge requires two parameters.'\n          )\n          expect(() => filter.lt('x')._build()).to.throw(\n            'Invalid .lt usage. .lt requires two parameters.'\n          )\n          expect(() => filter.le('x')._build()).to.throw(\n            'Invalid .le usage. .le requires two parameters.'\n          )\n          expect(() => filter.startsWith('x')._build()).to.throw(\n            'Invalid .startsWith usage. .startsWith requires two parameters.'\n          )\n          expect(() => filter.endsWith('x')._build()).to.throw(\n            'Invalid .endsWith usage. .endsWith requires two parameters.'\n          )\n          expect(() => filter.contains('x')._build()).to.throw(\n            'Invalid .contains usage. .contains requires two parameters.'\n          )\n          // @ts-expect-error\n          expect(() => filter.isNotEmpty()._build()).to.throw(\n            'Invalid .isNotEmpty usage. .isNotEmpty requires one parameter.'\n          )\n          // @ts-expect-error\n          expect(() => filter.isEmpty()._build()).to.throw(\n            'Invalid .isEmpty usage. .isEmpty requires one parameter.'\n          )\n          expect(() => filter.isNotEmpty(1)._build()).to.throw(\n            'Invalid .isNotEmpty field value [Number]. .isNotEmpty field must be a String.'\n          )\n          expect(() => filter.isEmpty(1)._build()).to.throw(\n            'Invalid .isEmpty field value [Number]. .isEmpty field must be a String.'\n          )\n          // @ts-expect-error\n          expect(() => filter.or()._build()).to.throw(\n            'Invalid .or usage. .or requires one parameter.'\n          )\n          // @ts-expect-error\n          expect(() => filter.and()._build()).to.throw(\n            'Invalid .and usage. .and requires one parameter.'\n          )\n          // @ts-expect-error\n          expect(() => filter.not()._build()).to.throw(\n            'Invalid .not usage. .not requires one parameter.'\n          )\n          // @ts-expect-error\n          expect(() => filter.between()._build()).to.throw(\n            'Invalid .between usage. .between requires three parameters.'\n          )\n          // @ts-expect-error\n          expect(() => filter.between('x')._build()).to.throw(\n            'Invalid .between usage. .between requires three parameters.'\n          )\n          // @ts-expect-error\n          expect(() => filter.between('x', 'x')._build()).to.throw(\n            'Invalid .between usage. .between requires three parameters.'\n          )\n          expect(() => filter.hasSome('x')._build()).to.throw(\n            'Invalid .hasSome usage. .hasSome requires at least two parameters.'\n          )\n          expect(() => filter.hasAll('x')._build()).to.throw(\n            'Invalid .hasAll usage. .hasAll requires at least two parameters.'\n          )\n        })\n\n        it('should validate the type of the other query', function () {\n          expect(() => filter.or(null)._build()).to.throw(\n            'Invalid .or parameter [Null]. .or expects FilterBuilder only.'\n          )\n          expect(() => filter.or({})._build()).to.throw(\n            'Invalid .or parameter [Object]. .or expects FilterBuilder only.'\n          )\n          expect(() => filter.or([])._build()).to.throw(\n            'Invalid .or parameter [Array]. .or expects FilterBuilder only.'\n          )\n          expect(() => filter.not(null)._build()).to.throw(\n            'Invalid .not parameter [Null]. .not expects FilterBuilder only'\n          )\n          expect(() => filter.not({})._build()).to.throw(\n            'Invalid .not parameter [Object]. .not expects FilterBuilder only'\n          )\n          expect(() => filter.not([])._build()).to.throw(\n            'Invalid .not parameter [Array]. .not expects FilterBuilder only'\n          )\n        })\n\n        it('should return filter tree', function () {\n          expect(\n            filter.ge('a', 'b').eq('a', 1).le('a', 4)[filterTreeGetter]()\n          ).to.be.eql({\n            $and: [{ a: { $gte: 'b' } }, { a: 1 }, { a: { $lte: 4 } }],\n          })\n          expect(\n            filter\n              .eq('a', 1)\n              .lt('a', 2)\n              .or(filter.ge('a', 'b'))\n              [filterTreeGetter]()\n          ).to.be.eql({\n            $or: [\n              { $and: [{ a: 1 }, { a: { $lt: 2 } }] },\n              { a: { $gte: 'b' } },\n            ],\n          })\n          expect(filter.eq('a', 3).ne('a', 2)[filterTreeGetter]()).to.be.eql(\n            inAnd({ a: 3 }, { a: { $ne: 2 } })\n          )\n        })\n      })\n    })\n  })\n\n  describe('filter.or', function () {\n    it('should produce correct filter tree', function () {\n      const f = filter.eq('x', 1).or(filter.eq('y', 2))\n\n      expect(f.getFilterModel()).to.be.eql({ $or: [{ x: 1 }, { y: 2 }] })\n      expect(f.eq('z', 3).getFilterModel()).to.be.eql(\n        inAnd({ $or: [{ x: 1 }, { y: 2 }] }, { z: 3 })\n      )\n    })\n\n    it('should produce valid query if used directly', function () {\n      const f = filter.or(filter.eq('x', 1))\n\n      expect(f.filterTree).to.be.eql(inAnd({ $or: [inAnd({ x: 1 })] }))\n    })\n  })\n\n  describe('filter.and', function () {\n    it('should produce correct filter tree', function () {\n      const f = filter.eq('x', 1).and(filter.eq('y', 2))\n\n      expect(f.getFilterModel()).to.be.eql({ x: 1, y: 2 })\n      expect(f.eq('x', 3).getFilterModel()).to.be.eql({\n        $and: [{ x: 1 }, { y: 2 }, { x: 3 }],\n      })\n    })\n\n    it('should produce valid query if used directly', function () {\n      const f = filter.and(filter.eq('x', 1))\n\n      expect(f.filterTree).to.be.eql(inAnd({ $and: [{ x: 1 }] }))\n    })\n  })\n\n  describe('filter.not', function () {\n    it('should produce the correct filter tree', function () {\n      const f = filter.eq('x', 1).not(filter.eq('y', 2).eq('z', 3))\n\n      expect(f.getFilterModel()).to.be.eql(\n        inAnd({ x: 1 }, { $not: [{ y: 2, z: 3 }] })\n      )\n    })\n  })\n\n  describe('between', function () {\n    it('should produce the correct filter tree for numbers', function () {\n      const f = filter.between('field', 1, 3)\n\n      expect(f.getFilterModel()).to.be.eql(\n        inAnd({ field: { $gte: 1 } }, { field: { $lt: 3 } })\n      )\n    })\n\n    it('should produce the correct filter tree for dates', function () {\n      const startDate: any = new Date()\n      const endDate: any = new Date()\n      endDate.setYear(startDate.getYear() + 1)\n      const f = filter.between('field', startDate, endDate)\n\n      expect(f.getFilterModel()).to.be.eql(\n        inAnd({ field: { $gte: startDate } }, { field: { $lt: endDate } })\n      )\n    })\n\n    it('should produce the correct filter tree for strings', function () {\n      const f = filter.between('field', 'start', 'end')\n\n      expect(f.getFilterModel()).to.be.eql(\n        inAnd({ field: { $gte: 'start' } }, { field: { $lt: 'end' } })\n      )\n    })\n\n    describe('validation', function () {\n      const filterTreeGetters = ['_build', 'getFilterModel']\n      filterTreeGetters.forEach(function (filterTreeGetter) {\n        describe(filterTreeGetter, function () {\n          const invalidExamples = [\n            [1, new Date(), 'Number', 'Date'],\n            [1, '2015-02-02', 'Number', 'String'],\n            [new Date(), '2015-01-01', 'Date', 'String'],\n            [null, new Date(), 'Null', 'Date'],\n            [undefined, new Date(), 'Undefined', 'Date'],\n          ]\n\n          invalidExamples.forEach(function ([\n            first,\n            second,\n            firstType,\n            secondType,\n          ]) {\n            it(\n              \"should reject invalid query.between('x',\" +\n                first +\n                ',' +\n                second +\n                ')',\n              function () {\n                expect(function () {\n                  filter.between('x', first, second)[filterTreeGetter]()\n                }).to.throw(\n                  `Invalid .between parameter values [${firstType}] and [${secondType}]. Both parameters must be of the same type.`\n                )\n                expect(function () {\n                  filter.between('x', second, first)[filterTreeGetter]()\n                }).to.throw(\n                  `Invalid .between parameter values [${secondType}] and [${firstType}]. Both parameters must be of the same type.`\n                )\n              }\n            )\n          })\n        })\n      })\n    })\n  })\n\n  describe('setFilterModel', function () {\n    it('should return a new filter instance with the new filterTree value set', function () {\n      const newFilter = filter.setFilterModel(\n        inAnd({ a: { $gte: 'b' } }, { a: 1 }, { a: { $lte: 4 } })\n      )\n\n      expect(newFilter).not.to.equal(filter)\n    })\n\n    it('should set filterTree to the filterModel value when the value is a valid filterTree', function () {\n      const newFilter = filter.setFilterModel(\n        inAnd({ a: { $gte: 'b' } }, { a: 1 }, { a: { $lte: 4 } })\n      )\n\n      expect(newFilter.getFilterModel()).to.be.eql(\n        inAnd({ a: { $gte: 'b' } }, { a: 1 }, { a: { $lte: 4 } })\n      )\n    })\n\n    it('should set filterTree to the filterModel value even when the value is not a valid filterTree', function () {\n      const newFilter = filter.setFilterModel(5)\n\n      expect(newFilter.getFilterModel()).to.be.eql(5)\n    })\n\n    it('should set invalidArguments to an empty array when the value is a valid filterTree', function () {\n      const invalidFilter = filter.eq('x')\n      const newFilter = invalidFilter.setFilterModel(\n        inAnd({ a: { $gte: 'b' } }, { a: 1 }, { a: { $lte: 4 } })\n      )\n\n      expect(newFilter.invalidArguments).to.be.eql([])\n    })\n\n    it('should set invalidArguments to an empty array when the value is not a valid filterTree', function () {\n      const invalidFilter = filter.eq('x')\n      const newFilter = invalidFilter.setFilterModel(5)\n\n      expect(newFilter.invalidArguments).to.be.eql([])\n    })\n  })\n})\n"],"mappings":"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"}