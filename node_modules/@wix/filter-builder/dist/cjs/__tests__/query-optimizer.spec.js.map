{"version":3,"names":["_chai","_interopRequireDefault","require","_queryOptimiser","expect","chai","describe","testCase","$and","a","b","$lte","it","actualOutput","optimised","to","be","eql","$or","x","Date","description","input","expectedOutput"],"sources":["../../../src/__tests__/query-optimizer.spec.ts"],"sourcesContent":["import chai from 'chai'\nimport { optimisedQuery as optimised } from '../query-optimiser'\n\nconst expect = chai.expect\n\ndescribe('query optimisations', () => {\n  describe('$and with single element', () => {\n    testCase('gets unwrapped', { $and: [{ a: 1 }] }, { a: 1 })\n  })\n\n  describe('$and with object pieces', () => {\n    testCase(\n      'gets unwrapped as object',\n      { $and: [{ a: 1 }, { b: 2 }] },\n      { a: 1, b: 2 }\n    )\n    testCase(\n      'remains if keys overlap',\n      { $and: [{ a: 1 }, { b: 2 }, { a: 1 }] },\n      { $and: [{ a: 1 }, { b: 2 }, { a: 1 }] }\n    )\n    testCase(\n      \"nested operators don't get merged\",\n      { $and: [{ a: 1 }, { $lte: 4 }, { b: 2 }] },\n      { $and: [{ a: 1, b: 2 }, { $lte: 4 }] }\n    )\n    it('merges empty objects', () => {\n      const actualOutput = optimised({ $and: [{}, {}, {}] })\n      expect(actualOutput).to.be.eql({})\n    })\n  })\n\n  describe('empty $and', () => {\n    testCase('is removed', { $and: [{ $and: [] }] }, {})\n    testCase('is removed when nested', { $and: [{ $and: [] }] }, {})\n  })\n\n  describe('nested $and', () => {\n    testCase(\n      'get flattened',\n      {\n        $and: [{ a: 1 }, { $and: [{ a: 1 }] }, { $and: [{ a: 1 }, { a: 1 }] }],\n      },\n      { $and: [{ a: 1 }, { a: 1 }, { a: 1 }, { a: 1 }] }\n    )\n  })\n\n  describe('nested $or', () => {\n    testCase(\n      'get flattened',\n      { $or: [{ a: 1 }, { $or: [{ a: 1 }] }, { $or: [{ a: 1 }, { a: 1 }] }] },\n      { $or: [{ a: 1 }, { a: 1 }, { a: 1 }, { a: 1 }] }\n    )\n  })\n\n  describe('type compatibility', () => {\n    testCase(\n      'maintains date objects',\n      { x: [new Date('2020-01-01T00:00:00Z')] },\n      { x: [new Date('2020-01-01T00:00:00Z')] }\n    )\n  })\n})\n\nfunction testCase(description, input, expectedOutput) {\n  it(description, () => {\n    const actualOutput = optimised(input)\n    expect(actualOutput).to.be.eql(expectedOutput)\n  })\n}\n"],"mappings":"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"}