import { HttpClient } from '@wix/sdk-types';
import { Identity, Identifier, LoginId, LoginOptions, LoginV2Options, LoginWithIdpConnectionTokensOptions, LogoutOptions, ProceedToNextStateOptions, RegisterOptions, RegisterV2Options, SignOnOptions } from './iam-authentication-v1-authentication.universal';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function register(httpClient: HttpClient): (identity: Identity, options?: RegisterOptions | undefined) => Promise<import("./iam-authentication-v1-authentication.universal").LoginResponse & import("./iam-authentication-v1-authentication.universal").LoginResponseNonNullableFields>;
export declare function login(httpClient: HttpClient): (identifier: Identifier, options?: LoginOptions | undefined) => Promise<import("./iam-authentication-v1-authentication.universal").LoginResponse & import("./iam-authentication-v1-authentication.universal").LoginResponseNonNullableFields>;
export declare function registerV2(httpClient: HttpClient): (loginId: LoginId, options?: RegisterV2Options | undefined) => Promise<import("./iam-authentication-v1-authentication.universal").StateMachineResponse & import("./iam-authentication-v1-authentication.universal").StateMachineResponseNonNullableFields>;
export declare function loginV2(httpClient: HttpClient): (loginId: LoginId, options?: LoginV2Options | undefined) => Promise<import("./iam-authentication-v1-authentication.universal").StateMachineResponse & import("./iam-authentication-v1-authentication.universal").StateMachineResponseNonNullableFields>;
export declare function changePassword(httpClient: HttpClient): (newPassword: string) => Promise<import("./iam-authentication-v1-authentication.universal").ChangePasswordRequest & import("./iam-authentication-v1-authentication.universal").ChangePasswordRequestNonNullableFields>;
export declare function loginWithIdpConnectionTokens(httpClient: HttpClient): (options?: LoginWithIdpConnectionTokensOptions | undefined) => Promise<import("./iam-authentication-v1-authentication.universal").StateMachineResponse & import("./iam-authentication-v1-authentication.universal").StateMachineResponseNonNullableFields>;
export declare function proceedToNextState(httpClient: HttpClient): (options?: ProceedToNextStateOptions | undefined) => Promise<import("./iam-authentication-v1-authentication.universal").LoginResponse & import("./iam-authentication-v1-authentication.universal").LoginResponseNonNullableFields>;
export declare function signOn(httpClient: HttpClient): (loginId: LoginId, options?: SignOnOptions | undefined) => Promise<import("./iam-authentication-v1-authentication.universal").SignOnResponse & import("./iam-authentication-v1-authentication.universal").SignOnResponseNonNullableFields>;
export declare function logout(httpClient: HttpClient): (options?: LogoutOptions | undefined) => Promise<import("./iam-authentication-v1-authentication.universal").RawHttpResponse & import("./iam-authentication-v1-authentication.universal").RawHttpResponseNonNullableFields>;
export { PrivacyStatus, EmailTag, PhoneTag, AddressTag, StatusName, Reason, StateStatus, StateType, TenantType, } from './iam-authentication-v1-authentication.universal';
export { Authentication, RegisterRequest, Identity, Identifier, IdentifierValueOneOf, Connection, ConnectionTypeOneOf, IdpConnection, AuthenticatorConnection, IdentityProfile, CustomField, CustomValue, CustomValueValueOneOf, ListValue, MapValue, SecondaryEmail, Phone, AddressWrapper, Address, Metadata, Email, StatusV2, CaptchaToken, CaptchaTokenTokenOneOf, LoginResponse, State, LoginRequest, LoginId, LoginIdTypeOneOf, SuccessfulLoginEvent, RegisterV2Request, StateMachineResponse, CommonCustomValue, CommonCustomValueValueOneOf, CommonListValue, CommonMapValue, LoginV2Request, ChangePasswordRequest, LoginWithIdpConnectionRequest, RawHttpResponse, HeadersEntry, RawHttpRequest, PathParametersEntry, QueryParametersEntry, LoginCallbackRequest, LoginWithIdpConnectionTokensRequest, ProceedToNextStateRequest, SignOnRequest, SignOnResponse, LogoutRequest, LoginResponseNonNullableFields, StateMachineResponseNonNullableFields, ChangePasswordRequestNonNullableFields, SignOnResponseNonNullableFields, RawHttpResponseNonNullableFields, RegisterOptions, LoginOptions, RegisterV2Options, LoginV2Options, LoginWithIdpConnectionTokensOptions, ProceedToNextStateOptions, SignOnOptions, LogoutOptions, } from './iam-authentication-v1-authentication.universal';
