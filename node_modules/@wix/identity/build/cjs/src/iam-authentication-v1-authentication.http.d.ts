import { RequestOptionsFactory } from '@wix/sdk-types';
import { RawHttpResponse, LoginRequest, LoginResponse, ProceedToNextStateRequest, RegisterRequest, LogoutRequest, LoginV2Request, RegisterV2Request, StateMachineResponse, SignOnRequest, SignOnResponse, LoginResponseNonNullableFields, StateMachineResponseNonNullableFields, SignOnResponseNonNullableFields, RawHttpResponseNonNullableFields, LoginWithIdpConnectionTokensRequest, ChangePasswordRequest, ChangePasswordRequestNonNullableFields } from './iam-authentication-v1-authentication.types';
export declare function register(payload: RegisterRequest): RequestOptionsFactory<LoginResponse & LoginResponseNonNullableFields>;
export declare function login(payload: LoginRequest): RequestOptionsFactory<LoginResponse & LoginResponseNonNullableFields>;
/**
 * Registers a new member.
 *
 * Typically, after a sucessful registration, you generate and use member tokens for the
 * registered member so that subsequent API calls are called as part of a member session.
 *
 * If the email used to register the member already exists as a contact email, the registering
 * member need to verify the email address using a code that is sent to the address.
 */
export declare function registerV2(payload: RegisterV2Request): RequestOptionsFactory<StateMachineResponse & StateMachineResponseNonNullableFields>;
/**
 * Logs in an existing user.
 *
 * Typically, after a sucessful login, you generate and use member tokens for the
 * logged-in member so that subsequent API calls are called as part of a member session.
 */
export declare function loginV2(payload: LoginV2Request): RequestOptionsFactory<StateMachineResponse & StateMachineResponseNonNullableFields>;
/** Changes the password of a logged in user. */
export declare function changePassword(payload: ChangePasswordRequest): RequestOptionsFactory<ChangePasswordRequest & ChangePasswordRequestNonNullableFields>;
export declare function loginWithIdpConnectionTokens(payload: LoginWithIdpConnectionTokensRequest): RequestOptionsFactory<StateMachineResponse & StateMachineResponseNonNullableFields>;
export declare function proceedToNextState(payload: ProceedToNextStateRequest): RequestOptionsFactory<LoginResponse & LoginResponseNonNullableFields>;
export declare function signOn(payload: SignOnRequest): RequestOptionsFactory<SignOnResponse & SignOnResponseNonNullableFields>;
/** Logs out a member. */
export declare function logout(payload: LogoutRequest): RequestOptionsFactory<RawHttpResponse & RawHttpResponseNonNullableFields>;
