declare const isInvalidJsonPath: (path: any) => boolean;
declare const isInvalidJsonValue: (value: any) => boolean;
declare const isSimpleTransformation: (transformation: any) => boolean;
declare const isArrayIndexString: (str: any) => boolean;
declare const isSpreadOperator: (key: any) => boolean;
declare const isIdentityResponseTransformation: (transformationPath: any) => boolean;
declare const getArgumentIndex: (s: any) => any;
declare const hasValidArgumentIndex: (path: any) => boolean;
declare const isRootObjectIdentifier: (s: any) => boolean;
declare const isJsonPathExpression: (exp: any) => any;
declare const stripJsonPathRootPrefix: (jsonPath: any) => any;
declare const extractIndexAndPath: (simpleTransformation: any) => {
    index: any;
    nestedPath: any;
};
declare const isMapArrayItemsTransformation: (transformationValue: any) => boolean;
declare const parseMapArrayItemsTransformation: (transformationValue: any) => {
    sourceArrayExpression: any;
    itemTransformation: any;
};
declare const isOmitTransformation: (transformationValue: any) => boolean;
declare const parseOmitTransformation: (transformationValue: any) => {
    sourceExpression: any;
    fieldsToOmit: any;
};
declare const isConstantExpression: (value: any) => boolean;
export { extractIndexAndPath, getArgumentIndex, hasValidArgumentIndex, isArrayIndexString, isConstantExpression, isIdentityResponseTransformation, isInvalidJsonPath, isInvalidJsonValue, isJsonPathExpression, isMapArrayItemsTransformation, isOmitTransformation, isRootObjectIdentifier, isSimpleTransformation, isSpreadOperator, parseMapArrayItemsTransformation, parseOmitTransformation, stripJsonPathRootPrefix, };
//# sourceMappingURL=helpers.d.ts.map