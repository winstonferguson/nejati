import { __makeTemplateObject } from "tslib";
import { aRandomItemFrom, aString } from '@wix/motion-runtime-test-context';
import { corvidEntities } from '..';
import { isReservedCommonFieldName, isReservedCorvidFieldName, } from '../lib/corvid-entity';
var toCorvidName = corvidEntities.toCorvidName, fromCorvidName = corvidEntities.fromCorvidName;
describe('corvid entities transformers', function () {
    describe('toCorvidName', function () {
        test.each(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n      name             | expected\n      ", "          | ", "\n      ", " | ", "\n      ", " | ", "\n    "], ["\n      name             | expected\n      ", "          | ", "\n      ", " | ", "\n      ", " | ", "\n    "])), 'id', '_id', 'createdDate', '_createdDate', 'updatedDate', '_updatedDate')('adjusts $name to $expected', function (_a) {
            var name = _a.name, expected = _a.expected;
            expect(toCorvidName(name)).toStrictEqual(expected);
        });
        test('returns the given name when it should not be changed', function () {
            var name = aString();
            expect(toCorvidName(name)).toStrictEqual(name);
        });
    });
    describe('fromCorvidName', function () {
        test.each(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n      name              | expected\n      ", "          | ", "\n      ", " | ", "\n      ", " | ", "\n    "], ["\n      name              | expected\n      ", "          | ", "\n      ", " | ", "\n      ", " | ", "\n    "])), '_id', 'id', '_createdDate', 'createdDate', '_updatedDate', 'updatedDate')('adjusts $name to $expected', function (_a) {
            var name = _a.name, expected = _a.expected;
            expect(fromCorvidName(name)).toStrictEqual(expected);
        });
        test('returns the given name when it should not be changed', function () {
            var name = aString();
            expect(fromCorvidName(name)).toStrictEqual(name);
        });
    });
    describe('internal methods', function () {
        var nonReservedName = aString();
        describe('isReservedCorvidFieldName', function () {
            test('returns true if the provided name is a reserved Corvid field-name', function () {
                var reservedCorvidName = aRandomItemFrom([
                    '_id',
                    '_createdDate',
                    '_updatedDate',
                ]);
                expect(isReservedCorvidFieldName(reservedCorvidName)).toBeTruthy();
            });
            test('returns false if the provided name is not a reserved common field-name', function () {
                expect(isReservedCorvidFieldName(nonReservedName)).toBeFalsy();
            });
        });
        describe('isReservedCommonFieldName', function () {
            test('returns true if the provided name is a reserved common field-name', function () {
                var commonReservedName = aRandomItemFrom([
                    'id',
                    'createdDate',
                    'updatedDate',
                ]);
                expect(isReservedCommonFieldName(commonReservedName)).toBeTruthy();
            });
            test('returns false if the provided name is not a reserved common field-name', function () {
                expect(isReservedCommonFieldName(nonReservedName)).toBeFalsy();
            });
        });
    });
});
var templateObject_1, templateObject_2;
//# sourceMappingURL=corvid-entity.spec.js.map