import { aString } from '@wix/motion-runtime-test-context';
import { times } from 'lodash';
import { preset } from '../../..';
var _a = preset.get, buildRequestTransformation = _a.buildRequestTransformation, buildResponseTransformation = _a.buildResponseTransformation;
describe('get-method transformations', function () {
    describe('buildRequestTransformation', function () {
        var requestMessageIdentifierPath = aString();
        test('creates a transformation that maps the first argument into requestMessageIdentifierPath', function () {
            var _a;
            var transformationObject = buildRequestTransformation({
                requestMessageIdentifierPath: requestMessageIdentifierPath,
            });
            expect(transformationObject).toStrictEqual((_a = {},
                _a[requestMessageIdentifierPath] = '$[0]',
                _a));
        });
        test('supports a nested path', function () {
            var _a, _b;
            // @ts-expect-errora
            var idPathSegments = times(2, aString);
            var transformationObject = buildRequestTransformation({
                requestMessageIdentifierPath: idPathSegments.join('.'),
            });
            expect(transformationObject).toStrictEqual((_a = {},
                _a[idPathSegments[0]] = (_b = {}, _b[idPathSegments[1]] = '$[0]', _b),
                _a));
        });
    });
    describe('buildResponseTransformation', function () {
        test('unwraps the value of the provided property-path', function () {
            var responseMessageResultPath = aString();
            var transformationString = buildResponseTransformation({
                responseMessageResultPath: responseMessageResultPath,
            });
            expect(transformationString).toStrictEqual("$.".concat(responseMessageResultPath));
        });
    });
});
//# sourceMappingURL=get-transformation.spec.js.map