import { merge, set } from 'lodash';
import { unwrap as buildResponseTransformation } from '../common';
var objectWithNestedPath = function (path, value) { return set({}, path, value); };
var buildRequestTransformation = function (_a) {
    var requestMessageEntityIdentifierField = _a.requestMessageEntityIdentifierField, requestMessageEntityPath = _a.requestMessageEntityPath, requestMessageOptionsPath = _a.requestMessageOptionsPath;
    var transformation = objectWithNestedPath("".concat(requestMessageEntityPath, ".").concat(requestMessageEntityIdentifierField), '$[0]');
    if (requestMessageOptionsPath) {
        if (requestMessageOptionsPath === requestMessageEntityPath) {
            return merge(transformation, objectWithNestedPath(requestMessageOptionsPath, {
                '*': ['$[1]', '$[2]'],
            }));
        }
        set(transformation, requestMessageOptionsPath, '$[2]');
    }
    return merge({}, transformation, objectWithNestedPath(requestMessageEntityPath, { '*': '$[1]' }));
};
export { buildRequestTransformation, buildResponseTransformation };
//# sourceMappingURL=update.js.map