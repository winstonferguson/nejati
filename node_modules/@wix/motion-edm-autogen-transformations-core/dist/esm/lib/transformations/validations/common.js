import { __assign, __spreadArray } from "tslib";
import { segmentCount } from '@wix/motion-edm-autogen-common';
import { every, isArray, isString, some } from 'lodash';
import { transformations } from '../common';
var OMIT_SOURCE_PROPERTY_NAME = transformations.OMIT_SOURCE_PROPERTY_NAME, FIELDS_TO_OMIT_PROPERTY_NAME = transformations.FIELDS_TO_OMIT_PROPERTY_NAME;
var validationError = function (description, value, parentPath) {
    if (parentPath === void 0) { parentPath = null; }
    return ({
        invalidValue: value,
        description: description,
        parentPath: parentPath,
    });
};
var validateOmitTransformation = function (_a) {
    var source = _a.source, fieldsToOmit = _a.fieldsToOmit, validateSource = _a.validateSource, _b = _a.parentPath, parentPath = _b === void 0 ? null : _b;
    var validationErrors = [];
    var currentPath = parentPath ? [parentPath] : [];
    var omitSourcePropertyPath = __spreadArray(__spreadArray([], currentPath, true), [
        OMIT_SOURCE_PROPERTY_NAME,
    ], false).join('.');
    validationErrors.push.apply(validationErrors, validateSource(source).validationErrors.map(function (sourceValidationError) { return (__assign(__assign({}, sourceValidationError), { parentPath: omitSourcePropertyPath })); }));
    var fieldsToOmitPropertyPath = __spreadArray(__spreadArray([], currentPath, true), [
        FIELDS_TO_OMIT_PROPERTY_NAME,
    ], false).join('.');
    if (!isArray(fieldsToOmit) || !every(fieldsToOmit, isString)) {
        validationErrors.push(validationError('must be an array of strings', fieldsToOmit, fieldsToOmitPropertyPath));
        return validationErrors;
    }
    if (some(fieldsToOmit, function (omitPathSegment) { return segmentCount(omitPathSegment) > 1; })) {
        validationErrors.push(validationError('must contain non-nested paths only', fieldsToOmit, fieldsToOmitPropertyPath));
    }
    return validationErrors;
};
export { validateOmitTransformation, validationError };
//# sourceMappingURL=common.js.map