{"version":3,"names":["_motionRuntimeTestContext","require","_lodash","_","_preset$get","preset","get","buildRequestTransformation","buildResponseTransformation","describe","requestMessageIdentifierPath","aString","test","transformationObject","expect","toStrictEqual","idPathSegments","times","join","responseMessageResultPath","transformationString"],"sources":["../../../../../src/__tests__/transformations/preset/get-transformation.spec.ts"],"sourcesContent":["import { aString } from '@wix/motion-runtime-test-context';\nimport { times } from 'lodash';\n\nimport { preset } from '../../..';\n\nconst {\n  get: { buildRequestTransformation, buildResponseTransformation },\n} = preset;\n\ndescribe('get-method transformations', () => {\n  describe('buildRequestTransformation', () => {\n    const requestMessageIdentifierPath = aString();\n\n    test('creates a transformation that maps the first argument into requestMessageIdentifierPath', () => {\n      const transformationObject = buildRequestTransformation({\n        requestMessageIdentifierPath,\n      });\n\n      expect(transformationObject).toStrictEqual({\n        [requestMessageIdentifierPath]: '$[0]',\n      });\n    });\n\n    test('supports a nested path', () => {\n      // @ts-expect-errora\n      const idPathSegments = times(2, aString);\n\n      const transformationObject = buildRequestTransformation({\n        requestMessageIdentifierPath: idPathSegments.join('.'),\n      });\n\n      expect(transformationObject).toStrictEqual({\n        [idPathSegments[0]]: { [idPathSegments[1]]: '$[0]' },\n      });\n    });\n  });\n\n  describe('buildResponseTransformation', () => {\n    test('unwraps the value of the provided property-path', () => {\n      const responseMessageResultPath = aString();\n\n      const transformationString = buildResponseTransformation({\n        responseMessageResultPath,\n      });\n\n      expect(transformationString).toStrictEqual(\n        `$.${responseMessageResultPath}`,\n      );\n    });\n  });\n});\n"],"mappings":";;AAAA,IAAAA,yBAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAEA,IAAAE,CAAA,GAAAF,OAAA;AAEA,MAAAG,WAAA,GAEIC,QAAM,CADRC,GAAG;EAAIC,0BAA0B,GAAAH,WAAA,CAA1BG,0BAA0B;EAAEC,2BAA2B,GAAAJ,WAAA,CAA3BI,2BAA2B;AAGhEC,QAAQ,CAAC,4BAA4B,EAAE,MAAM;EAC3CA,QAAQ,CAAC,4BAA4B,EAAE,MAAM;IAC3C,MAAMC,4BAA4B,GAAG,IAAAC,iCAAO,EAAC,CAAC;IAE9CC,IAAI,CAAC,yFAAyF,EAAE,MAAM;MACpG,MAAMC,oBAAoB,GAAGN,0BAA0B,CAAC;QACtDG;MACF,CAAC,CAAC;MAEFI,MAAM,CAACD,oBAAoB,CAAC,CAACE,aAAa,CAAC;QACzC,CAACL,4BAA4B,GAAG;MAClC,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFE,IAAI,CAAC,wBAAwB,EAAE,MAAM;MACnC;MACA,MAAMI,cAAc,GAAG,IAAAC,aAAK,EAAC,CAAC,EAAEN,iCAAO,CAAC;MAExC,MAAME,oBAAoB,GAAGN,0BAA0B,CAAC;QACtDG,4BAA4B,EAAEM,cAAc,CAACE,IAAI,CAAC,GAAG;MACvD,CAAC,CAAC;MAEFJ,MAAM,CAACD,oBAAoB,CAAC,CAACE,aAAa,CAAC;QACzC,CAACC,cAAc,CAAC,CAAC,CAAC,GAAG;UAAE,CAACA,cAAc,CAAC,CAAC,CAAC,GAAG;QAAO;MACrD,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFP,QAAQ,CAAC,6BAA6B,EAAE,MAAM;IAC5CG,IAAI,CAAC,iDAAiD,EAAE,MAAM;MAC5D,MAAMO,yBAAyB,GAAG,IAAAR,iCAAO,EAAC,CAAC;MAE3C,MAAMS,oBAAoB,GAAGZ,2BAA2B,CAAC;QACvDW;MACF,CAAC,CAAC;MAEFL,MAAM,CAACM,oBAAoB,CAAC,CAACL,aAAa,CACvC,KAAII,yBAA0B,EACjC,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}