{"version":3,"names":["_motionRuntimeTestContext","require","_lodash","_","RESPONSE_OBJECT_UNCHANGED","transformations","_preset$delete","preset","delete","buildRequestTransformation","buildResponseTransformation","describe","requestMessageIdentifierPath","aString","test","transformationObject","expect","toStrictEqual","requestMessageOptionsPath","sharedPath","identifierPathSegment","idPathSegments","times","optionsPathSegments","join","trasformationString"],"sources":["../../../../../src/__tests__/transformations/preset/delete-transformation.spec.ts"],"sourcesContent":["import { aString } from '@wix/motion-runtime-test-context';\nimport { times } from 'lodash';\n\nimport { preset, transformations } from '../../..';\n\nconst { RESPONSE_OBJECT_UNCHANGED } = transformations;\nconst {\n  delete: { buildRequestTransformation, buildResponseTransformation },\n} = preset;\n\ndescribe('delete-method transformations', () => {\n  describe('buildRequestTransformation', () => {\n    const requestMessageIdentifierPath = aString();\n\n    test('creates a transformation that maps the first argument into requestMessageIdentifierPath', () => {\n      const transformationObject = buildRequestTransformation({\n        requestMessageIdentifierPath,\n      });\n\n      expect(transformationObject).toStrictEqual({\n        [requestMessageIdentifierPath]: '$[0]',\n      });\n    });\n\n    test(`creates a transformation that maps the 2nd argument into requestMessageOptionsPath when provided`, () => {\n      const requestMessageOptionsPath = aString();\n      const transformationObject = buildRequestTransformation({\n        requestMessageIdentifierPath,\n        requestMessageOptionsPath,\n      });\n\n      expect(transformationObject).toStrictEqual({\n        [requestMessageIdentifierPath]: '$[0]',\n        [requestMessageOptionsPath]: '$[1]',\n      });\n    });\n\n    test('supports shared paths for requestMessageIdentifierPath and requestMessageOptionsPath', () => {\n      const sharedPath = aString();\n      const identifierPathSegment = aString();\n      const transformationObject = buildRequestTransformation({\n        requestMessageIdentifierPath: `${sharedPath}.${identifierPathSegment}`,\n        requestMessageOptionsPath: sharedPath,\n      });\n\n      expect(transformationObject).toStrictEqual({\n        [sharedPath]: { [identifierPathSegment]: '$[0]', '*': '$[1]' },\n      });\n    });\n\n    test('supports nested paths', () => {\n      // @ts-expect-error\n      const idPathSegments = times(2, aString);\n      // @ts-expect-error\n      const optionsPathSegments = times(2, aString);\n\n      const transformationObject = buildRequestTransformation({\n        requestMessageIdentifierPath: idPathSegments.join('.'),\n        requestMessageOptionsPath: optionsPathSegments.join('.'),\n      });\n\n      expect(transformationObject).toStrictEqual({\n        [idPathSegments[0]]: { [idPathSegments[1]]: '$[0]' },\n        [optionsPathSegments[0]]: { [optionsPathSegments[1]]: '$[1]' },\n      });\n    });\n  });\n\n  describe('buildResponseTransformation', () => {\n    test('returns the identity transformation', () => {\n      const trasformationString = buildResponseTransformation();\n\n      expect(trasformationString).toStrictEqual(RESPONSE_OBJECT_UNCHANGED);\n    });\n  });\n});\n"],"mappings":"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"}