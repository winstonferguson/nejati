"use strict";

var _motionRuntimeTestContext = require("@wix/motion-runtime-test-context");
var _lodash = require("lodash");
var _ = require("../../..");
const _preset$create = _.preset.create,
  buildRequestTransformation = _preset$create.buildRequestTransformation,
  buildResponseTransformation = _preset$create.buildResponseTransformation;
describe('create-method transformations', () => {
  describe('buildRequestTransformation', () => {
    test('creates a transformation that maps the first argument into requestMessageEntityPath', () => {
      const requestMessageEntityPath = (0, _motionRuntimeTestContext.aString)();
      const tranformationObject = buildRequestTransformation({
        requestMessageEntityPath
      });
      expect(tranformationObject).toStrictEqual({
        [requestMessageEntityPath]: '$[0]'
      });
    });
    test('supports nested paths', () => {
      // @ts-expect-error
      const entityPathSegments = (0, _lodash.times)(2, _motionRuntimeTestContext.aString);
      const requestMessageEntityPath = entityPathSegments.join('.');
      const tranformationObject = buildRequestTransformation({
        requestMessageEntityPath
      });
      expect(tranformationObject).toStrictEqual({
        [entityPathSegments[0]]: {
          [entityPathSegments[1]]: '$[0]'
        }
      });
    });
  });
  describe('buildResponseTransformation', () => {
    test('unwraps the value of the provided property-path', () => {
      const responseMessageResultPath = (0, _motionRuntimeTestContext.aString)();
      const tranformationString = buildResponseTransformation({
        responseMessageResultPath
      });
      expect(tranformationString).toStrictEqual(`$.${responseMessageResultPath}`);
    });
  });
});
//# sourceMappingURL=create-transformation.spec.js.map