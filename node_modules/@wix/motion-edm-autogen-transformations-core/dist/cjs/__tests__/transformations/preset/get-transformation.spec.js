"use strict";

var _motionRuntimeTestContext = require("@wix/motion-runtime-test-context");
var _lodash = require("lodash");
var _ = require("../../..");
const _preset$get = _.preset.get,
  buildRequestTransformation = _preset$get.buildRequestTransformation,
  buildResponseTransformation = _preset$get.buildResponseTransformation;
describe('get-method transformations', () => {
  describe('buildRequestTransformation', () => {
    const requestMessageIdentifierPath = (0, _motionRuntimeTestContext.aString)();
    test('creates a transformation that maps the first argument into requestMessageIdentifierPath', () => {
      const transformationObject = buildRequestTransformation({
        requestMessageIdentifierPath
      });
      expect(transformationObject).toStrictEqual({
        [requestMessageIdentifierPath]: '$[0]'
      });
    });
    test('supports a nested path', () => {
      // @ts-expect-errora
      const idPathSegments = (0, _lodash.times)(2, _motionRuntimeTestContext.aString);
      const transformationObject = buildRequestTransformation({
        requestMessageIdentifierPath: idPathSegments.join('.')
      });
      expect(transformationObject).toStrictEqual({
        [idPathSegments[0]]: {
          [idPathSegments[1]]: '$[0]'
        }
      });
    });
  });
  describe('buildResponseTransformation', () => {
    test('unwraps the value of the provided property-path', () => {
      const responseMessageResultPath = (0, _motionRuntimeTestContext.aString)();
      const transformationString = buildResponseTransformation({
        responseMessageResultPath
      });
      expect(transformationString).toStrictEqual(`$.${responseMessageResultPath}`);
    });
  });
});
//# sourceMappingURL=get-transformation.spec.js.map