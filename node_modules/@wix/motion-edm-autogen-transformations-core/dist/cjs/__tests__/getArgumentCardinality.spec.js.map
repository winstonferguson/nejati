{"version":3,"names":["_motionRuntimeTestContext","require","_","describe","simpleTransformation","aNumber","min","max","aString","expect","getArgumentCardinality","toStrictEqual","nonArgumentMapping","anObject","argumentMapping","argumentMappingArray","test","complexMappingTransformation","specialTransformation"],"sources":["../../../src/__tests__/getArgumentCardinality.spec.ts"],"sourcesContent":["import { anObject, aNumber, aString } from '@wix/motion-runtime-test-context';\n\nimport { getArgumentCardinality } from '..';\n\ndescribe('getArgumentCardinality', () => {\n  describe('simple transformation', () => {\n    const simpleTransformation = `$[${aNumber({\n      min: 0,\n      max: 9,\n    })}].${aString()}`;\n\n    expect(getArgumentCardinality(simpleTransformation)).toStrictEqual(1);\n  });\n\n  describe('complex transformations', () => {\n    const nonArgumentMapping = anObject();\n\n    const argumentMapping = {\n      [aString()]: '$[0].abc',\n      [aString()]: '$[1].id',\n      [aString()]: '$[2].a',\n      [aString()]: '$[3].a.b.c',\n      ...nonArgumentMapping,\n    };\n\n    const argumentMappingArray = ['$[0].a', '$[1].b', 'a.b.c'];\n\n    test('counts the number of arguments referenced in a given transformation object', () => {\n      const complexMappingTransformation = {\n        ...nonArgumentMapping,\n        ...argumentMapping,\n      };\n\n      expect(\n        getArgumentCardinality(complexMappingTransformation),\n      ).toStrictEqual(4);\n    });\n\n    test('counts the number of arguments referenced in a transformation object with arrays', () => {\n      const complexMappingTransformation = {\n        ...nonArgumentMapping,\n        [aString()]: argumentMappingArray,\n      };\n\n      expect(\n        getArgumentCardinality(complexMappingTransformation),\n      ).toStrictEqual(2);\n    });\n\n    test('counts only unique occurrences', () => {\n      const complexMappingTransformation = {\n        ...nonArgumentMapping,\n        ...argumentMapping,\n        [aString()]: argumentMappingArray,\n      };\n\n      expect(\n        getArgumentCardinality(complexMappingTransformation),\n      ).toStrictEqual(4);\n    });\n\n    test('does not fail on special transformation cases', () => {\n      const specialTransformation = {\n        [aString()]: { '@constant': true },\n        [aString()]: { '@constant': null },\n        [aString()]: '$[0].a.b.c.',\n      };\n\n      expect(getArgumentCardinality(specialTransformation)).toStrictEqual(1);\n    });\n  });\n});\n"],"mappings":";;AAAA,IAAAA,yBAAA,GAAAC,OAAA;AAEA,IAAAC,CAAA,GAAAD,OAAA;AAEAE,QAAQ,CAAC,wBAAwB,EAAE,MAAM;EACvCA,QAAQ,CAAC,uBAAuB,EAAE,MAAM;IACtC,MAAMC,oBAAoB,GAAI,KAAI,IAAAC,iCAAO,EAAC;MACxCC,GAAG,EAAE,CAAC;MACNC,GAAG,EAAE;IACP,CAAC,CAAE,KAAI,IAAAC,iCAAO,EAAC,CAAE,EAAC;IAElBC,MAAM,CAAC,IAAAC,wBAAsB,EAACN,oBAAoB,CAAC,CAAC,CAACO,aAAa,CAAC,CAAC,CAAC;EACvE,CAAC,CAAC;EAEFR,QAAQ,CAAC,yBAAyB,EAAE,MAAM;IACxC,MAAMS,kBAAkB,GAAG,IAAAC,kCAAQ,EAAC,CAAC;IAErC,MAAMC,eAAe,GAAG;MACtB,CAAC,IAAAN,iCAAO,EAAC,CAAC,GAAG,UAAU;MACvB,CAAC,IAAAA,iCAAO,EAAC,CAAC,GAAG,SAAS;MACtB,CAAC,IAAAA,iCAAO,EAAC,CAAC,GAAG,QAAQ;MACrB,CAAC,IAAAA,iCAAO,EAAC,CAAC,GAAG,YAAY;MACzB,GAAGI;IACL,CAAC;IAED,MAAMG,oBAAoB,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC;IAE1DC,IAAI,CAAC,4EAA4E,EAAE,MAAM;MACvF,MAAMC,4BAA4B,GAAG;QACnC,GAAGL,kBAAkB;QACrB,GAAGE;MACL,CAAC;MAEDL,MAAM,CACJ,IAAAC,wBAAsB,EAACO,4BAA4B,CACrD,CAAC,CAACN,aAAa,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC;IAEFK,IAAI,CAAC,kFAAkF,EAAE,MAAM;MAC7F,MAAMC,4BAA4B,GAAG;QACnC,GAAGL,kBAAkB;QACrB,CAAC,IAAAJ,iCAAO,EAAC,CAAC,GAAGO;MACf,CAAC;MAEDN,MAAM,CACJ,IAAAC,wBAAsB,EAACO,4BAA4B,CACrD,CAAC,CAACN,aAAa,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC;IAEFK,IAAI,CAAC,gCAAgC,EAAE,MAAM;MAC3C,MAAMC,4BAA4B,GAAG;QACnC,GAAGL,kBAAkB;QACrB,GAAGE,eAAe;QAClB,CAAC,IAAAN,iCAAO,EAAC,CAAC,GAAGO;MACf,CAAC;MAEDN,MAAM,CACJ,IAAAC,wBAAsB,EAACO,4BAA4B,CACrD,CAAC,CAACN,aAAa,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC;IAEFK,IAAI,CAAC,+CAA+C,EAAE,MAAM;MAC1D,MAAME,qBAAqB,GAAG;QAC5B,CAAC,IAAAV,iCAAO,EAAC,CAAC,GAAG;UAAE,WAAW,EAAE;QAAK,CAAC;QAClC,CAAC,IAAAA,iCAAO,EAAC,CAAC,GAAG;UAAE,WAAW,EAAE;QAAK,CAAC;QAClC,CAAC,IAAAA,iCAAO,EAAC,CAAC,GAAG;MACf,CAAC;MAEDC,MAAM,CAAC,IAAAC,wBAAsB,EAACQ,qBAAqB,CAAC,CAAC,CAACP,aAAa,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}