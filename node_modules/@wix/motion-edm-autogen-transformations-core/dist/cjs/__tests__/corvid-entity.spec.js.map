{"version":3,"names":["_motionRuntimeTestContext","require","_","_corvidEntity","toCorvidName","corvidEntities","fromCorvidName","describe","test","each","name","expected","expect","toStrictEqual","aString","nonReservedName","reservedCorvidName","aRandomItemFrom","isReservedCorvidFieldName","toBeTruthy","toBeFalsy","commonReservedName","isReservedCommonFieldName"],"sources":["../../../src/__tests__/corvid-entity.spec.ts"],"sourcesContent":["import { aRandomItemFrom, aString } from '@wix/motion-runtime-test-context';\n\nimport { corvidEntities } from '..';\nimport {\n  isReservedCommonFieldName,\n  isReservedCorvidFieldName,\n} from '../lib/corvid-entity';\n\nconst { toCorvidName, fromCorvidName } = corvidEntities;\n\ndescribe('corvid entities transformers', () => {\n  describe('toCorvidName', () => {\n    test.each`\n      name             | expected\n      ${'id'}          | ${'_id'}\n      ${'createdDate'} | ${'_createdDate'}\n      ${'updatedDate'} | ${'_updatedDate'}\n    `('adjusts $name to $expected', ({ name, expected }) => {\n      expect(toCorvidName(name)).toStrictEqual(expected);\n    });\n\n    test('returns the given name when it should not be changed', () => {\n      const name = aString();\n\n      expect(toCorvidName(name)).toStrictEqual(name);\n    });\n  });\n\n  describe('fromCorvidName', () => {\n    test.each`\n      name              | expected\n      ${'_id'}          | ${'id'}\n      ${'_createdDate'} | ${'createdDate'}\n      ${'_updatedDate'} | ${'updatedDate'}\n    `('adjusts $name to $expected', ({ name, expected }) => {\n      expect(fromCorvidName(name)).toStrictEqual(expected);\n    });\n\n    test('returns the given name when it should not be changed', () => {\n      const name = aString();\n\n      expect(fromCorvidName(name)).toStrictEqual(name);\n    });\n  });\n\n  describe('internal methods', () => {\n    const nonReservedName = aString();\n\n    describe('isReservedCorvidFieldName', () => {\n      test('returns true if the provided name is a reserved Corvid field-name', () => {\n        const reservedCorvidName = aRandomItemFrom([\n          '_id',\n          '_createdDate',\n          '_updatedDate',\n        ]);\n\n        expect(isReservedCorvidFieldName(reservedCorvidName)).toBeTruthy();\n      });\n\n      test('returns false if the provided name is not a reserved common field-name', () => {\n        expect(isReservedCorvidFieldName(nonReservedName)).toBeFalsy();\n      });\n    });\n\n    describe('isReservedCommonFieldName', () => {\n      test('returns true if the provided name is a reserved common field-name', () => {\n        const commonReservedName = aRandomItemFrom([\n          'id',\n          'createdDate',\n          'updatedDate',\n        ]);\n\n        expect(isReservedCommonFieldName(commonReservedName)).toBeTruthy();\n      });\n\n      test('returns false if the provided name is not a reserved common field-name', () => {\n        expect(isReservedCommonFieldName(nonReservedName)).toBeFalsy();\n      });\n    });\n  });\n});\n"],"mappings":";;AAAA,IAAAA,yBAAA,GAAAC,OAAA;AAEA,IAAAC,CAAA,GAAAD,OAAA;AACA,IAAAE,aAAA,GAAAF,OAAA;AAKA,MAAQG,YAAY,GAAqBC,gBAAc,CAA/CD,YAAY;EAAEE,cAAc,GAAKD,gBAAc,CAAjCC,cAAc;AAEpCC,QAAQ,CAAC,8BAA8B,EAAE,MAAM;EAC7CA,QAAQ,CAAC,cAAc,EAAE,MAAM;IAC7BC,IAAI,CAACC,IAAK;AACd;AACA,QAAQ,IAAK,eAAc,KAAM;AACjC,QAAQ,aAAc,MAAK,cAAe;AAC1C,QAAQ,aAAc,MAAK,cAAe;AAC1C,KAAK,CAAC,4BAA4B,EAAE,CAAC;MAAEC,IAAI;MAAEC;IAAS,CAAC,KAAK;MACtDC,MAAM,CAACR,YAAY,CAACM,IAAI,CAAC,CAAC,CAACG,aAAa,CAACF,QAAQ,CAAC;IACpD,CAAC,CAAC;IAEFH,IAAI,CAAC,sDAAsD,EAAE,MAAM;MACjE,MAAME,IAAI,GAAG,IAAAI,iCAAO,EAAC,CAAC;MAEtBF,MAAM,CAACR,YAAY,CAACM,IAAI,CAAC,CAAC,CAACG,aAAa,CAACH,IAAI,CAAC;IAChD,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFH,QAAQ,CAAC,gBAAgB,EAAE,MAAM;IAC/BC,IAAI,CAACC,IAAK;AACd;AACA,QAAQ,KAAM,eAAc,IAAK;AACjC,QAAQ,cAAe,MAAK,aAAc;AAC1C,QAAQ,cAAe,MAAK,aAAc;AAC1C,KAAK,CAAC,4BAA4B,EAAE,CAAC;MAAEC,IAAI;MAAEC;IAAS,CAAC,KAAK;MACtDC,MAAM,CAACN,cAAc,CAACI,IAAI,CAAC,CAAC,CAACG,aAAa,CAACF,QAAQ,CAAC;IACtD,CAAC,CAAC;IAEFH,IAAI,CAAC,sDAAsD,EAAE,MAAM;MACjE,MAAME,IAAI,GAAG,IAAAI,iCAAO,EAAC,CAAC;MAEtBF,MAAM,CAACN,cAAc,CAACI,IAAI,CAAC,CAAC,CAACG,aAAa,CAACH,IAAI,CAAC;IAClD,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFH,QAAQ,CAAC,kBAAkB,EAAE,MAAM;IACjC,MAAMQ,eAAe,GAAG,IAAAD,iCAAO,EAAC,CAAC;IAEjCP,QAAQ,CAAC,2BAA2B,EAAE,MAAM;MAC1CC,IAAI,CAAC,mEAAmE,EAAE,MAAM;QAC9E,MAAMQ,kBAAkB,GAAG,IAAAC,yCAAe,EAAC,CACzC,KAAK,EACL,cAAc,EACd,cAAc,CACf,CAAC;QAEFL,MAAM,CAAC,IAAAM,uCAAyB,EAACF,kBAAkB,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;MACpE,CAAC,CAAC;MAEFX,IAAI,CAAC,wEAAwE,EAAE,MAAM;QACnFI,MAAM,CAAC,IAAAM,uCAAyB,EAACH,eAAe,CAAC,CAAC,CAACK,SAAS,CAAC,CAAC;MAChE,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFb,QAAQ,CAAC,2BAA2B,EAAE,MAAM;MAC1CC,IAAI,CAAC,mEAAmE,EAAE,MAAM;QAC9E,MAAMa,kBAAkB,GAAG,IAAAJ,yCAAe,EAAC,CACzC,IAAI,EACJ,aAAa,EACb,aAAa,CACd,CAAC;QAEFL,MAAM,CAAC,IAAAU,uCAAyB,EAACD,kBAAkB,CAAC,CAAC,CAACF,UAAU,CAAC,CAAC;MACpE,CAAC,CAAC;MAEFX,IAAI,CAAC,wEAAwE,EAAE,MAAM;QACnFI,MAAM,CAAC,IAAAU,uCAAyB,EAACP,eAAe,CAAC,CAAC,CAACK,SAAS,CAAC,CAAC;MAChE,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}