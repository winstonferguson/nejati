{"version":3,"names":["_motionRuntimeTestContext","require","_lodash","_reduceTransformation","describe","visitorCallbackResult","aString","test","visitorCallback","jest","fn","mockReturnValueOnce","transformation","result","reduceTransformation","visitors","TopLevelSimpleTransformationExpression","expect","toHaveBeenCalledTimes","toHaveBeenCalledWith","toStrictEqual","TopLevelCustomFunctionExpression","transformationWithInvalidCustomFunctionExpression","TopLevelUnsupportedTransformationExpression","accumulator","anObject","a","b","c","d","e","NestedSimpleTransformationExpression","_times","times","topLevelSpreadOperatorCallback","nestedSpreadOperatorCallback","argumentExpression","sibling","siblingKeys","Object","keys","path","beforeEach","forEach","mock","mockClear","nestedOmitCallback","omitExpression","TopLevelSpreadExpression","NestedOmit","NestedSpreadExpression","not","toHaveBeenCalled","set","simpleTransformationCallback","anotherArgumentExpression","topLevelArgumentExpression","customFunctionExpressionCallback","customFunctionExpression","CustomFunctionExpression","invalidCustomFunctionExpression","nestedConstantExpressionCallback","undesiredVisitor","someConst","NestedConstantValue","value","countAccumulator","count","unsupportedTransformationValue","NestedUnsupportedTransformationExpression","TopLevelMapArrayItems","withItemTransformation","itemTransformation","MapArrayItems","nestedSimpleTransformationVisitor","yyy","zzz","fieldsToOmit","sourcePathExpression","TopLevelOmit","each","visitorType","errorMessage","error","Error","mockImplementationOnce","toThrow"],"sources":["../../../src/__tests__/reduceTransformation.spec.ts"],"sourcesContent":["import { anObject, aString } from '@wix/motion-runtime-test-context';\nimport { set, times } from 'lodash';\n\nimport { reduceTransformation } from '../lib/transformations/reduceTransformation';\n\ndescribe('reduceTransformation', () => {\n  describe('simple transformations', () => {\n    const visitorCallbackResult = aString();\n\n    test('traverses a simple transformation', () => {\n      const visitorCallback = jest\n        .fn()\n        .mockReturnValueOnce(visitorCallbackResult);\n      const transformation = '$.a.b.c';\n\n      const result = reduceTransformation(transformation, {\n        visitors: {\n          TopLevelSimpleTransformationExpression: visitorCallback,\n        },\n      });\n\n      expect(visitorCallback).toHaveBeenCalledTimes(1);\n      expect(visitorCallback).toHaveBeenCalledWith('$.a.b.c');\n      expect(result).toStrictEqual(visitorCallbackResult);\n    });\n\n    describe('custom-functions', () => {\n      test('traverses a valid custom-function expression', () => {\n        const visitorCallback = jest\n          .fn()\n          .mockReturnValueOnce(visitorCallbackResult);\n        const transformation = '#someCustomFunction($.a.b.c,someOtherArg)';\n\n        const result = reduceTransformation(transformation, {\n          visitors: {\n            TopLevelCustomFunctionExpression: visitorCallback,\n          },\n        });\n\n        expect(visitorCallback).toHaveBeenCalledTimes(1);\n        expect(visitorCallback).toHaveBeenCalledWith(\n          'someCustomFunction',\n          ['$.a.b.c', 'someOtherArg'],\n          transformation,\n        );\n        expect(result).toStrictEqual(visitorCallbackResult);\n      });\n\n      test('does not fail for invalid custom-function expression', () => {\n        const visitorCallback = jest\n          .fn()\n          .mockReturnValueOnce(visitorCallbackResult);\n        const transformationWithInvalidCustomFunctionExpression = '#($.a.b.c)';\n\n        const result = reduceTransformation(\n          transformationWithInvalidCustomFunctionExpression,\n          {\n            visitors: {\n              TopLevelCustomFunctionExpression: visitorCallback,\n            },\n          },\n        );\n\n        expect(visitorCallback).toHaveBeenCalledTimes(1);\n        expect(visitorCallback).toHaveBeenCalledWith(\n          null,\n          null,\n          transformationWithInvalidCustomFunctionExpression,\n        );\n        expect(result).toStrictEqual(visitorCallbackResult);\n      });\n    });\n\n    // TODO: replace with returning the invalid value, for constant-transformation\n    test('invokes the TopLevelUnsupportedTransformationExpression otherwise', () => {\n      const visitorCallback = jest\n        .fn()\n        .mockReturnValueOnce(visitorCallbackResult);\n\n      const transformation = aString();\n\n      const result = reduceTransformation(transformation, {\n        visitors: {\n          TopLevelUnsupportedTransformationExpression: visitorCallback,\n        },\n      });\n\n      expect(visitorCallback).toHaveBeenCalledTimes(1);\n      expect(visitorCallback).toHaveBeenCalledWith(transformation);\n      expect(result).toStrictEqual(visitorCallbackResult);\n    });\n  });\n\n  describe('complex transformation', () => {\n    const accumulator = anObject();\n\n    test('traverses all string nodes that are transformation expressions', () => {\n      const visitorCallback = jest.fn();\n\n      const transformation = {\n        a: {\n          b: { c: '$[0].ddd.eee.ffff' },\n          d: 2,\n          e: ['$.ggg', 3, 4, 5],\n        },\n      };\n\n      reduceTransformation(transformation, {\n        accumulator,\n        visitors: {\n          NestedSimpleTransformationExpression: visitorCallback,\n        },\n      });\n\n      expect(visitorCallback).toHaveBeenCalledTimes(2);\n      expect(visitorCallback).toHaveBeenCalledWith(\n        accumulator,\n        'a.b.c',\n        '$[0].ddd.eee.ffff',\n      );\n      expect(visitorCallback).toHaveBeenCalledWith(\n        accumulator,\n        'a.e[0]',\n        '$.ggg',\n      );\n    });\n\n    describe('spread operator', () => {\n      const [topLevelSpreadOperatorCallback, nestedSpreadOperatorCallback] =\n        times(2, () => jest.fn());\n      const argumentExpression = '$[1].d.e.f';\n      const sibling = anObject();\n      const siblingKeys = Object.keys(sibling);\n      const path = `${siblingKeys[0]}.b.c`;\n\n      beforeEach(() => {\n        [topLevelSpreadOperatorCallback, nestedSpreadOperatorCallback].forEach(\n          (mock) => mock.mockClear(),\n        );\n      });\n\n      test('invokes the spread operator visitor prior to its children', () => {\n        const nestedOmitCallback = jest.fn();\n        const omitExpression = {\n          '@source': argumentExpression,\n          '@omit': times(2, () => aString()),\n        };\n        const transformation = { '*': omitExpression, ...sibling };\n\n        reduceTransformation(transformation, {\n          accumulator,\n          visitors: {\n            TopLevelSpreadExpression: topLevelSpreadOperatorCallback,\n            NestedOmit: nestedOmitCallback,\n          },\n        });\n\n        expect(topLevelSpreadOperatorCallback).toHaveBeenCalledTimes(1);\n        expect(topLevelSpreadOperatorCallback).toHaveBeenCalledWith(\n          accumulator,\n          omitExpression,\n          siblingKeys,\n        );\n\n        // expect(nestedOmitCallback).toHaveBeenCalled();\n      });\n\n      test('traverses top-level spread-operator transformation nodes', () => {\n        const transformation = { '*': argumentExpression, ...sibling };\n\n        reduceTransformation(transformation, {\n          accumulator,\n          visitors: {\n            TopLevelSpreadExpression: topLevelSpreadOperatorCallback,\n            NestedSpreadExpression: nestedSpreadOperatorCallback,\n          },\n        });\n\n        expect(topLevelSpreadOperatorCallback).toHaveBeenCalledTimes(1);\n        expect(topLevelSpreadOperatorCallback).toHaveBeenCalledWith(\n          accumulator,\n          argumentExpression,\n          siblingKeys,\n        );\n        expect(nestedSpreadOperatorCallback).not.toHaveBeenCalled();\n      });\n\n      test('traverses nested spread-operator transformation nodes', () => {\n        const transformation = set({}, path, {\n          '*': argumentExpression,\n          ...sibling,\n        });\n        const simpleTransformationCallback = jest.fn();\n\n        reduceTransformation(transformation, {\n          accumulator,\n          visitors: {\n            TopLevelSpreadExpression: topLevelSpreadOperatorCallback,\n            NestedSpreadExpression: nestedSpreadOperatorCallback,\n            NestedSimpleTransformationExpression: simpleTransformationCallback,\n          },\n        });\n\n        expect(topLevelSpreadOperatorCallback).not.toHaveBeenCalled();\n        expect(simpleTransformationCallback).not.toHaveBeenCalled();\n        expect(nestedSpreadOperatorCallback).toHaveBeenCalledTimes(1);\n        expect(nestedSpreadOperatorCallback).toHaveBeenCalledWith(\n          accumulator,\n          path,\n          argumentExpression,\n          siblingKeys,\n        );\n      });\n\n      test('traverses items within an array of a spread-operator transformation nodes', () => {\n        const simpleTransformationCallback = jest.fn();\n        const transformation = set({}, path, {\n          '*': ['$[0].x.y.z', '$[1].d.e.f'],\n          ...sibling,\n        });\n\n        reduceTransformation(transformation, {\n          accumulator,\n          visitors: {\n            NestedSpreadExpression: nestedSpreadOperatorCallback,\n            NestedSimpleTransformationExpression: simpleTransformationCallback,\n          },\n        });\n\n        expect(nestedSpreadOperatorCallback).toHaveBeenCalledTimes(2);\n        expect(nestedSpreadOperatorCallback).toHaveBeenCalledWith(\n          accumulator,\n          path,\n          '$[0].x.y.z',\n          siblingKeys,\n        );\n        expect(nestedSpreadOperatorCallback).toHaveBeenCalledWith(\n          accumulator,\n          path,\n          '$[1].d.e.f',\n          siblingKeys,\n        );\n\n        expect(simpleTransformationCallback).not.toHaveBeenCalled();\n      });\n\n      test('sets the path to be the parent of the spread operator', () => {\n        const anotherArgumentExpression = '$[0].x.y.z';\n        const topLevelArgumentExpression = '$[1]';\n        const transformation = set(\n          { '*': topLevelArgumentExpression, ...sibling },\n          path,\n          {\n            '*': [anotherArgumentExpression, argumentExpression],\n          },\n        );\n\n        reduceTransformation(transformation, {\n          accumulator,\n          visitors: {\n            NestedSpreadExpression: nestedSpreadOperatorCallback,\n            TopLevelSpreadExpression: topLevelSpreadOperatorCallback,\n          },\n        });\n\n        expect(nestedSpreadOperatorCallback).toHaveBeenCalledTimes(2);\n        expect(nestedSpreadOperatorCallback).toHaveBeenCalledWith(\n          accumulator,\n          path,\n          argumentExpression,\n          [],\n        );\n        expect(nestedSpreadOperatorCallback).toHaveBeenCalledWith(\n          accumulator,\n          path,\n          anotherArgumentExpression,\n          [],\n        );\n\n        expect(topLevelSpreadOperatorCallback).toHaveBeenCalledTimes(1);\n        expect(topLevelSpreadOperatorCallback).toHaveBeenCalledWith(\n          accumulator,\n          topLevelArgumentExpression,\n          siblingKeys,\n        );\n      });\n    });\n\n    describe('custom functions', () => {\n      test('traverses custom-function nodes', () => {\n        const customFunctionExpressionCallback = jest.fn();\n        const simpleTransformationCallback = jest.fn();\n        const customFunctionExpression =\n          '#someCustomFunction($[0].someCustomFunction)';\n        const transformation = {\n          a: {\n            b: customFunctionExpression,\n          },\n        };\n\n        reduceTransformation(transformation, {\n          accumulator,\n          visitors: {\n            CustomFunctionExpression: customFunctionExpressionCallback,\n            NestedSimpleTransformationExpression: simpleTransformationCallback,\n          },\n        });\n\n        expect(customFunctionExpressionCallback).toHaveBeenCalledTimes(1);\n        expect(customFunctionExpressionCallback).toHaveBeenCalledWith(\n          accumulator,\n          'a.b',\n          'someCustomFunction',\n          ['$[0].someCustomFunction'],\n          customFunctionExpression,\n        );\n\n        expect(simpleTransformationCallback).not.toHaveBeenCalled();\n      });\n\n      test('does not fail on invalid custom-function nodes', () => {\n        const customFunctionExpressionCallback = jest.fn();\n        const simpleTransformationCallback = jest.fn();\n        const invalidCustomFunctionExpression = '#($[0].someCustomFunction)';\n\n        const transformation = {\n          a: {\n            b: invalidCustomFunctionExpression,\n          },\n        };\n\n        reduceTransformation(transformation, {\n          accumulator,\n          visitors: {\n            CustomFunctionExpression: customFunctionExpressionCallback,\n            NestedSimpleTransformationExpression: simpleTransformationCallback,\n          },\n        });\n\n        expect(customFunctionExpressionCallback).toHaveBeenCalledTimes(1);\n        expect(customFunctionExpressionCallback).toHaveBeenCalledWith(\n          accumulator,\n          'a.b',\n          null,\n          null,\n          invalidCustomFunctionExpression,\n        );\n\n        expect(simpleTransformationCallback).not.toHaveBeenCalled();\n      });\n    });\n\n    describe('constant annotation', () => {\n      test('traverses a nested constant annotation expression', () => {\n        const nestedConstantExpressionCallback = jest.fn();\n        const undesiredVisitor = jest.fn();\n        const transformation = {\n          a: { b: { c: { '@constant': { someConst: '$.value123' } } } },\n        };\n\n        reduceTransformation(transformation, {\n          accumulator,\n          visitors: {\n            NestedConstantValue: nestedConstantExpressionCallback,\n            NestedSimpleTransformationExpression: undesiredVisitor,\n          },\n        });\n\n        expect(nestedConstantExpressionCallback).toHaveBeenCalledTimes(1);\n        expect(nestedConstantExpressionCallback).toHaveBeenCalledWith({\n          accumulator,\n          path: 'a.b.c',\n          value: { someConst: '$.value123' },\n        });\n        expect(undesiredVisitor).not.toHaveBeenCalled();\n      });\n    });\n\n    test('returns the accumulator with changes made to it', () => {\n      const countAccumulator = { count: 0 };\n\n      const transformation = {\n        a: {\n          b: 1,\n          '*': '$[0].a.b.c',\n        },\n      };\n\n      const result = reduceTransformation(transformation, {\n        accumulator: countAccumulator,\n        visitors: {\n          NestedSpreadExpression: () => {\n            countAccumulator.count += 1;\n          },\n        },\n      });\n\n      expect(result).toStrictEqual({ count: 1 });\n    });\n\n    // TODO: replace with returning the invalid value, for constant-transformation\n    test('invokes the NestedUnsupportedTransformationExpression otherwise', () => {\n      const visitorCallback = jest.fn();\n      const unsupportedTransformationValue = aString();\n      const transformation = {\n        a: { b: { c: unsupportedTransformationValue } },\n      };\n\n      reduceTransformation(transformation, {\n        visitors: {\n          NestedUnsupportedTransformationExpression: visitorCallback,\n        },\n        accumulator,\n      });\n\n      expect(visitorCallback).toHaveBeenCalledTimes(1);\n      expect(visitorCallback).toHaveBeenCalledWith(\n        accumulator,\n        'a.b.c',\n        unsupportedTransformationValue,\n      );\n    });\n  });\n\n  describe('mapping array items', () => {\n    const visitorCallback = jest.fn();\n\n    beforeEach(() => {\n      visitorCallback.mockClear();\n    });\n\n    describe('top-level transformation', () => {\n      test('invokes the TopLevelMapArrayItems visitor', () => {\n        const transformation = {\n          '@path': '$.d.e.f',\n          '@itemTransformation': '$.g.h.i',\n        };\n\n        reduceTransformation(transformation, {\n          visitors: {\n            TopLevelMapArrayItems: visitorCallback,\n          },\n          accumulator: {},\n        });\n\n        expect(visitorCallback).toHaveBeenCalledTimes(1);\n        expect(visitorCallback).toHaveBeenCalledWith('$.d.e.f', '$.g.h.i');\n      });\n    });\n\n    describe('nested transformation', () => {\n      const accumulator = {};\n      const path = 'a.b.c';\n\n      const withItemTransformation = (itemTransformation) =>\n        set({}, path, {\n          '@path': '$.d.e.f',\n          '@itemTransformation': itemTransformation,\n        });\n\n      describe('simple item-transformation', () => {\n        test('invokes the MapArrayItems visitor', () => {\n          reduceTransformation(withItemTransformation('$.g.h.i'), {\n            visitors: {\n              MapArrayItems: visitorCallback,\n            },\n            accumulator,\n          });\n\n          expect(visitorCallback).toHaveBeenCalledTimes(1);\n          expect(visitorCallback).toHaveBeenCalledWith(\n            accumulator,\n            path,\n            '$.d.e.f',\n            '$.g.h.i',\n          );\n        });\n      });\n\n      describe('complex item-transformation', () => {\n        test('invokes the MapArrayItems visitor', () => {\n          const nestedSimpleTransformationVisitor = jest.fn();\n\n          reduceTransformation(\n            withItemTransformation({ yyy: '$.g.h.i', zzz: '$.j.k.l' }),\n            {\n              visitors: {\n                MapArrayItems: visitorCallback,\n                NestedSimpleTransformationExpression:\n                  nestedSimpleTransformationVisitor,\n              },\n              accumulator,\n            },\n          );\n\n          expect(visitorCallback).toHaveBeenCalledTimes(1);\n          expect(visitorCallback).toHaveBeenCalledWith(\n            accumulator,\n            path,\n            '$.d.e.f',\n            {\n              yyy: '$.g.h.i',\n              zzz: '$.j.k.l',\n            },\n          );\n          expect(nestedSimpleTransformationVisitor).not.toHaveBeenCalled();\n        });\n      });\n    });\n  });\n\n  describe('omit notation', () => {\n    const fieldsToOmit = times(2, () => aString());\n    const visitorCallback = jest.fn();\n    const sourcePathExpression = '$.d.e.f';\n    const path = 'a.b.c';\n    const accumulator = {};\n\n    beforeEach(() => {\n      visitorCallback.mockClear();\n    });\n\n    describe('top-level transformation', () => {\n      test('invokes the TopLevelOmit visitor', () => {\n        const transformation = {\n          '@source': sourcePathExpression,\n          '@omit': fieldsToOmit,\n        };\n\n        reduceTransformation(transformation, {\n          visitors: {\n            TopLevelOmit: visitorCallback,\n          },\n          accumulator,\n        });\n\n        expect(visitorCallback).toHaveBeenCalledTimes(1);\n        expect(visitorCallback).toHaveBeenCalledWith(\n          sourcePathExpression,\n          fieldsToOmit,\n        );\n      });\n    });\n\n    describe('nested transformation', () => {\n      test('invokes the NestedOmit visitor', () => {\n        const transformation = set({}, path, {\n          '@source': sourcePathExpression,\n          '@omit': fieldsToOmit,\n        });\n\n        reduceTransformation(transformation, {\n          visitors: {\n            NestedOmit: visitorCallback,\n          },\n          accumulator,\n        });\n\n        expect(visitorCallback).toHaveBeenCalledTimes(1);\n        expect(visitorCallback).toHaveBeenCalledWith(\n          accumulator,\n          path,\n          sourcePathExpression,\n          fieldsToOmit,\n        );\n      });\n    });\n  });\n\n  describe('error handling', () => {\n    describe.each`\n      transformation                                       | visitorType\n      ${'$.a.b.c'}                                         | ${'TopLevelSimpleTransformationExpression'}\n      ${'#someCustomFunc($.a.b.c)'}                        | ${'TopLevelCustomFunctionExpression'}\n      ${{ a: { b: { c: 'unsupported transformation' } } }} | ${'NestedUnsupportedTransformationExpression'}\n      ${{ a: { b: { c: '$.d.e.f' } } }}                    | ${'NestedSimpleTransformationExpression'}\n      ${{ '*': '$.d.e.f' }}                                | ${'TopLevelSpreadExpression'}\n      ${{ a: { '*': '$.d.e.f' } }}                         | ${'NestedSpreadExpression'}\n      ${{ a: { b: '#someCustomFunction($.d.e.f)' } }}      | ${'CustomFunctionExpression'}\n    `('$visitor visitor', ({ transformation, visitorType }) => {\n      test(`rethrows the error thrown by the ${visitorType} visitor`, () => {\n        const errorMessage = aString();\n        const error = new Error(errorMessage);\n        const visitorCallback = jest.fn().mockImplementationOnce(() => {\n          throw error;\n        });\n\n        expect(() =>\n          reduceTransformation(transformation, {\n            visitors: {\n              [visitorType]: visitorCallback,\n            },\n          }),\n        ).toThrow(error);\n      });\n\n      test(`does not fail when the ${visitorType} visitor is missing`, () => {\n        expect(() =>\n          reduceTransformation(transformation, {\n            visitors: {\n              [visitorType]: null,\n            },\n          }),\n        ).not.toThrow();\n      });\n    });\n  });\n});\n"],"mappings":"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"}