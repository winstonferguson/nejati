{"version":3,"names":["_motionEdmAutogenCommon","require","_lodash","_corvidEntity","_helpers","_common","_customFunctions","_reduceTransformation","_common2","ARRAY_ITEMS_PATH_PROPERTY_NAME","transformations","ARRAY_ITEM_TRANSFORMATION_PROPERTY_NAME","INVALID_PATH_STRING_MESSAGE","validateArrayItemTransformation","sourceArrayExpression","itemTransformation","parentPath","withOptionalParentPath","path","err","validationError","filter","s","join","validationErrors","isInvalidJsonPath","fullPath","push","validateResponseTransformation","map","validateSimpleTransformationExpression","simpleTransformationExpression","transformationSegments","split","firstExpressionSegment","isRootObjectIdentifier","some","isSpreadOperator","isReservedCorvidFieldName","forEach","invalidName","validateCustomFunctionExpression","functionName","argumentExpressions","rawExpression","argumentExpression","_argumentExpression$s","firstSegment","transformation","errors","reduceTransformation","visitors","TopLevelSimpleTransformationExpression","simpleTransformation","TopLevelCustomFunctionExpression","CustomFunctionExpression","acc","NestedSimpleTransformationExpression","lastPathSegment","lastPathSegmentOf","parentPathOf","isFunctionCallExpression","hasValidArgumentIndex","NestedUnsupportedTransformationExpression","value","TopLevelUnsupportedTransformationExpression","unsupportedTransformation","TopLevelOmit","source","fieldsToOmit","validateOmitTransformation","validateSource","NestedOmit","MapArrayItems","TopLevelMapArrayItems","accumulator","isValid","length"],"sources":["../../../../../src/lib/transformations/validations/validateResponseTransformation.ts"],"sourcesContent":["import {\n  lastPathSegmentOf,\n  parentPathOf,\n} from '@wix/motion-edm-autogen-common';\nimport { some } from 'lodash';\n\nimport { isReservedCorvidFieldName } from '../../corvid-entity';\nimport {\n  hasValidArgumentIndex,\n  isInvalidJsonPath,\n  isRootObjectIdentifier,\n  isSpreadOperator,\n} from '../../helpers';\nimport { transformations } from '../common';\nimport { isFunctionCallExpression } from '../custom-functions';\nimport { reduceTransformation } from '../reduceTransformation';\nimport { validateOmitTransformation, validationError } from './common';\n\nconst {\n  ARRAY_ITEMS_PATH_PROPERTY_NAME,\n  ARRAY_ITEM_TRANSFORMATION_PROPERTY_NAME,\n} = transformations;\n\nconst INVALID_PATH_STRING_MESSAGE = \"must be a string starting with '$.'\";\n\nconst validateArrayItemTransformation = (\n  sourceArrayExpression,\n  itemTransformation,\n  parentPath = null,\n) => {\n  const withOptionalParentPath = (path) => (err) => ({\n    ...err,\n    // @ts-expect-error\n    parentPath: [parentPath, path, validationError.parentPath]\n      .filter((s) => s)\n      .join('.'),\n  });\n\n  const validationErrors: any[] = [];\n\n  if (isInvalidJsonPath(sourceArrayExpression)) {\n    const fullPath = parentPath\n      ? [parentPath, ARRAY_ITEMS_PATH_PROPERTY_NAME]\n      : [ARRAY_ITEMS_PATH_PROPERTY_NAME];\n\n    validationErrors.push(\n      validationError(\n        INVALID_PATH_STRING_MESSAGE,\n        sourceArrayExpression,\n        fullPath.join('.'),\n      ),\n    );\n  }\n\n  validationErrors.push(\n    // eslint-disable-next-line no-use-before-define\n    ...validateResponseTransformation(\n      sourceArrayExpression,\n    ).validationErrors.map(\n      withOptionalParentPath(ARRAY_ITEMS_PATH_PROPERTY_NAME),\n    ),\n    // eslint-disable-next-line no-use-before-define\n    ...validateResponseTransformation(itemTransformation).validationErrors.map(\n      withOptionalParentPath(ARRAY_ITEM_TRANSFORMATION_PROPERTY_NAME),\n    ),\n  );\n\n  return validationErrors;\n};\n\nconst validateSimpleTransformationExpression = (\n  simpleTransformationExpression,\n  path = null,\n) => {\n  const transformationSegments = simpleTransformationExpression.split('.');\n  const [firstExpressionSegment] = transformationSegments;\n  const validationErrors: any[] = [];\n\n  if (!isRootObjectIdentifier(firstExpressionSegment)) {\n    validationErrors.push(\n      validationError(\n        INVALID_PATH_STRING_MESSAGE,\n        simpleTransformationExpression,\n        path,\n      ),\n    );\n  }\n\n  if (some(transformationSegments, isSpreadOperator)) {\n    validationErrors.push(\n      validationError(\n        'cannot refer to the * operator',\n        simpleTransformationExpression,\n        path,\n      ),\n    );\n  }\n\n  if (isInvalidJsonPath(simpleTransformationExpression)) {\n    validationErrors.push(\n      validationError(\n        'must be a valid json-path',\n        simpleTransformationExpression,\n        path,\n      ),\n    );\n  }\n\n  transformationSegments\n    .filter(isReservedCorvidFieldName)\n    .forEach((invalidName) =>\n      validationErrors.push(\n        validationError(\n          `cannot refer to the ${invalidName} field`,\n          simpleTransformationExpression,\n          path,\n        ),\n      ),\n    );\n\n  return validationErrors;\n};\n\nconst validateCustomFunctionExpression = ({\n  functionName,\n  argumentExpressions,\n  rawExpression,\n  path = null,\n}) => {\n  const validationErrors: any[] = [];\n\n  if (functionName === null || argumentExpressions === null) {\n    validationErrors.push(\n      validationError(\n        'contains an invalid custom function expression',\n        rawExpression,\n        path,\n      ),\n    );\n\n    return validationErrors;\n  }\n\n  // TODO: validate all arguments\n  const [argumentExpression] = argumentExpressions;\n\n  const [firstSegment] = argumentExpression.split('.');\n\n  if (isInvalidJsonPath(argumentExpression)) {\n    validationErrors.push(\n      validationError('must be a valid json-path', argumentExpression, path),\n    );\n  }\n\n  if (!isRootObjectIdentifier(firstSegment)) {\n    validationErrors.push(\n      validationError(INVALID_PATH_STRING_MESSAGE, argumentExpression, path),\n    );\n  }\n\n  return validationErrors;\n};\n\nfunction validateResponseTransformation(transformation) {\n  const errors = reduceTransformation(transformation, {\n    visitors: {\n      TopLevelSimpleTransformationExpression: (simpleTransformation) =>\n        validateSimpleTransformationExpression(simpleTransformation),\n      TopLevelCustomFunctionExpression: (\n        functionName,\n        argumentExpressions,\n        rawExpression,\n      ) =>\n        validateCustomFunctionExpression({\n          functionName,\n          argumentExpressions,\n          rawExpression,\n        }),\n      CustomFunctionExpression: (\n        acc,\n        path,\n        functionName,\n        argumentExpressions,\n        rawExpression,\n      ) => {\n        acc.push(\n          ...validateCustomFunctionExpression({\n            functionName,\n            argumentExpressions,\n            rawExpression,\n            path,\n          }),\n        );\n      },\n      NestedSimpleTransformationExpression: (\n        acc,\n        path,\n        simpleTransformationExpression,\n      ) => {\n        const lastPathSegment = lastPathSegmentOf(path);\n        const parentPath = parentPathOf(path);\n\n        acc.push(\n          ...validateSimpleTransformationExpression(\n            simpleTransformationExpression,\n            path,\n          ),\n        );\n\n        if (isFunctionCallExpression(lastPathSegment)) {\n          acc.push(\n            validationError(\n              'cannot be a custom function call',\n              lastPathSegment,\n              parentPath,\n            ),\n          );\n        }\n\n        if (isReservedCorvidFieldName(lastPathSegment)) {\n          acc.push(\n            validationError(\n              `cannot refer to the ${lastPathSegment} field`,\n              lastPathSegment,\n              parentPath,\n            ),\n          );\n        }\n\n        if (hasValidArgumentIndex(lastPathSegment)) {\n          acc.push(\n            validationError(\n              INVALID_PATH_STRING_MESSAGE,\n              lastPathSegment,\n              parentPath,\n            ),\n          );\n        }\n\n        if (isRootObjectIdentifier(lastPathSegment)) {\n          acc.push(\n            validationError(\n              'cannot refer to $ in a transformation key',\n              lastPathSegment,\n              parentPath,\n            ),\n          );\n        }\n      },\n      NestedUnsupportedTransformationExpression: (acc, path, value) => {\n        acc.push(validationError(INVALID_PATH_STRING_MESSAGE, value, path));\n      },\n      TopLevelUnsupportedTransformationExpression: (\n        unsupportedTransformation,\n      ) => [\n        validationError(INVALID_PATH_STRING_MESSAGE, unsupportedTransformation),\n      ],\n      TopLevelOmit: (source, fieldsToOmit) =>\n        validateOmitTransformation({\n          source,\n          fieldsToOmit,\n          validateSource: validateResponseTransformation,\n        }),\n      NestedOmit: (acc, path, source, fieldsToOmit) =>\n        acc.push(\n          ...validateOmitTransformation({\n            source,\n            fieldsToOmit,\n            parentPath: path,\n            validateSource: validateResponseTransformation,\n          }),\n        ),\n      MapArrayItems: (acc, path, sourceArrayExpression, itemTransformation) => {\n        acc.push(\n          ...validateArrayItemTransformation(\n            sourceArrayExpression,\n            itemTransformation,\n            path,\n          ),\n        );\n      },\n      TopLevelMapArrayItems: (sourceArrayExpression, itemTransformation) =>\n        validateArrayItemTransformation(\n          sourceArrayExpression,\n          itemTransformation,\n        ),\n    },\n    accumulator: [],\n  });\n\n  return {\n    isValid: errors.length === 0,\n    validationErrors: errors,\n  };\n}\n\nexport { validateResponseTransformation };\n"],"mappings":"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"}