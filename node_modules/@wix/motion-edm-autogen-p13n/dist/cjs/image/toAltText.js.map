{"version":3,"names":["_lodash","require","removeExtension","s","replace","trimConsequentSpaces","removeSpecialChars","lowercaseAllButFirst","_s$split","split","first","rest","slice","map","w","toLowerCase","join","toAltText","reducers","decodeURIComponent","startCase","reduce","acc","fn","exports"],"sources":["../../../src/image/toAltText.ts"],"sourcesContent":["import { startCase } from 'lodash';\n\ntype Reducer = (s: string) => string;\n\nconst removeExtension = (s: string): string => s.replace(/\\.\\S*$/, '');\n\nconst trimConsequentSpaces = (s: string): string => s.replace(/\\s+/g, ' ');\n\nconst removeSpecialChars = (s: string): string =>\n  s.replace(/[^a-zA-Z0-9]/g, ' ');\n\nconst lowercaseAllButFirst = (s: string): string => {\n  const [first, ...rest] = s.split(' ');\n\n  return [first, ...rest.map((w) => w.toLowerCase())].join(' ');\n};\n\nconst toAltText = (s: string): string => {\n  const reducers: Reducer[] = [\n    decodeURIComponent,\n    removeExtension,\n    removeSpecialChars,\n    trimConsequentSpaces,\n    startCase,\n    lowercaseAllButFirst,\n  ];\n\n  return reducers.reduce<string>((acc, fn) => fn(acc), s);\n};\n\nexport { toAltText };\n"],"mappings":";;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAIA,MAAMC,eAAe,GAAIC,CAAS,IAAaA,CAAC,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;AAEtE,MAAMC,oBAAoB,GAAIF,CAAS,IAAaA,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;AAE1E,MAAME,kBAAkB,GAAIH,CAAS,IACnCA,CAAC,CAACC,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC;AAEjC,MAAMG,oBAAoB,GAAIJ,CAAS,IAAa;EAClD,MAAAK,QAAA,GAAyBL,CAAC,CAACM,KAAK,CAAC,GAAG,CAAC;IAA9BC,KAAK,GAAAF,QAAA;IAAKG,IAAI,GAAAH,QAAA,CAAAI,KAAA;EAErB,OAAO,CAACF,KAAK,EAAE,GAAGC,IAAI,CAACE,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAC/D,CAAC;AAED,MAAMC,SAAS,GAAId,CAAS,IAAa;EACvC,MAAMe,QAAmB,GAAG,CAC1BC,kBAAkB,EAClBjB,eAAe,EACfI,kBAAkB,EAClBD,oBAAoB,EACpBe,iBAAS,EACTb,oBAAoB,CACrB;EAED,OAAOW,QAAQ,CAACG,MAAM,CAAS,CAACC,GAAG,EAAEC,EAAE,KAAKA,EAAE,CAACD,GAAG,CAAC,EAAEnB,CAAC,CAAC;AACzD,CAAC;AAACqB,OAAA,CAAAP,SAAA,GAAAA,SAAA"}