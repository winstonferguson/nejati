var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { serializer, transformError } from '@wix/metro-runtime/velo';
import * as ambassadorWixHeadlessV1RedirectSession from './headless-v1-redirect-session.http';
let __verbose = false;
function __log(...args) {
    __verbose && console.log(...args);
}
function __inspect(obj) {
    return obj;
}
export const __debug = {
    verboseLogging: {
        on: () => (__verbose = true),
        off: () => (__verbose = false),
    },
};
const _toVeloEntity = '$';
const _fromVeloEntity = '$';
export var LocationType;
(function (LocationType) {
    LocationType["UNDEFINED"] = "UNDEFINED";
    LocationType["OWNER_BUSINESS"] = "OWNER_BUSINESS";
    LocationType["OWNER_CUSTOM"] = "OWNER_CUSTOM";
    LocationType["CUSTOM"] = "CUSTOM";
})(LocationType || (LocationType = {}));
/** Currently only `none` and `login` are supported. */
export var Prompt;
(function (Prompt) {
    Prompt["login"] = "login";
    Prompt["none"] = "none";
    Prompt["consent"] = "consent";
    Prompt["select_account"] = "select_account";
})(Prompt || (Prompt = {}));
export var MembersAccountSection;
(function (MembersAccountSection) {
    /** default - account info section in "my account" */
    MembersAccountSection["ACCOUNT_INFO"] = "ACCOUNT_INFO";
    /** My Bookings section in "my account" */
    MembersAccountSection["BOOKINGS"] = "BOOKINGS";
    /** My Orders section in "my account" */
    MembersAccountSection["ORDERS"] = "ORDERS";
    /** Subscriptions section in "my account" */
    MembersAccountSection["SUBSCRIPTIONS"] = "SUBSCRIPTIONS";
    /** Events section in "my account" */
    MembersAccountSection["EVENTS"] = "EVENTS";
})(MembersAccountSection || (MembersAccountSection = {}));
export var CallbackType;
(function (CallbackType) {
    /** Invalid value - default */
    CallbackType["UNKNOWN"] = "UNKNOWN";
    /** The callback URL is used for the logout flow */
    CallbackType["LOGOUT"] = "LOGOUT";
    /** The callback URL is used for a checkout flow */
    CallbackType["CHECKOUT"] = "CHECKOUT";
    /** The callback URL is used for the authorize flow */
    CallbackType["AUTHORIZE"] = "AUTHORIZE";
})(CallbackType || (CallbackType = {}));
const _createRedirectSessionRequest = {};
const _createRedirectSessionResponse = {};
/**
 * Creates a URL for redirecting a visitor from an external client site to a Wix page for Wix-managed functionality.
 *
 *
 * The `createRedirectSession()` function enables your external Wix Headless client site, built on any platform, to integrate Wix-managed frontend functionality for specific processes.
 * For example, your site can temporarily redirect a visitor to Wix for authentication, or for a checkout process for a bookings, eCommerce, events, or paid plans transaction.
 *
 * To initiate a redirect session:
 *
 * 1. Call `createRedirectSession()` with the details required for Wix to take care of one specific process (for example, authentication or a bookings checkout). Provide one or more callback URLs, so Wix can redirect the user back to your site as appropriate when the process is over.
 * 1. Redirect your visitor to the URL provided in the response. This URL includes query parameters informing Wix where to redirect the visitor back to on your external site.
 * 1. Make sure the pages at the callback URLs you provided take care of the next stages in your visitor flow.
 * @public
 * @documentationMaturity preview
 * @param options - Options for creating a redirect session.
 * @applicableIdentity MEMBER
 * @applicableIdentity VISITOR
 */
export function createRedirectSession(options) {
    var _a, _b, _c;
    return __awaiter(this, arguments, void 0, function* () {
        const requestTransformation = {
            bookingsCheckout: '$[0].bookingsCheckout',
            ecomCheckout: '$[0].ecomCheckout',
            eventsCheckout: '$[0].eventsCheckout',
            paidPlansCheckout: '$[0].paidPlansCheckout',
            login: '$[0].login',
            logout: '$[0].logout',
            auth: '$[0].auth',
            callbacks: '$[0].callbacks',
            preferences: '$[0].preferences',
        };
        const responseTransformation = '$';
        // @ts-ignore
        const { httpClient, sideEffects } = arguments[1];
        const { toAmbassadorRequest } = serializer({
            rootSchema: _createRedirectSessionRequest,
            depSchemas: {},
            fqdnTransformation: {
                paths: [],
                transformation: _fromVeloEntity,
            },
            customTransformation: requestTransformation,
        });
        const { fromJSON } = serializer({
            rootSchema: _createRedirectSessionResponse,
            depSchemas: {},
            fqdnTransformation: {
                paths: [...['redirectSession']],
                transformation: _toVeloEntity,
            },
            customTransformation: responseTransformation,
        });
        const payload = toAmbassadorRequest([options]);
        const reqOpts = ambassadorWixHeadlessV1RedirectSession.createRedirectSession(payload);
        __log(`"CreateRedirectSession" sending request with: ${__inspect(reqOpts)}`);
        (_a = sideEffects === null || sideEffects === void 0 ? void 0 : sideEffects.onSiteCall) === null || _a === void 0 ? void 0 : _a.call(sideEffects);
        try {
            const result = yield httpClient.request(reqOpts);
            (_b = sideEffects === null || sideEffects === void 0 ? void 0 : sideEffects.onSuccess) === null || _b === void 0 ? void 0 : _b.call(sideEffects, result);
            return fromJSON(result.data);
        }
        catch (err) {
            const transformedError = transformError(err, requestTransformation, [
                'options',
            ]);
            (_c = sideEffects === null || sideEffects === void 0 ? void 0 : sideEffects.onError) === null || _c === void 0 ? void 0 : _c.call(sideEffects, err);
            throw transformedError;
        }
    });
}
//# sourceMappingURL=headless-v1-redirect-session.universal.js.map