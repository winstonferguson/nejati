{"version":3,"names":["_motionEdmAutogenTransformationsCore","require","_motionRuntimeTestContext","_","JS_SINGLE_ARG_UNCHANGED","transformations","describe","test","object","anObject","functionArguments","requestPayloadObject","transformToRequestMessage","expect","toStrictEqual","stringArg","aString","numericArg","aNumber","objectArg","objectKey","aRandomItemFrom","Object","keys","objectValue","firstArrayItem","lastArrayItemKey","lastArrayItemValue","lastArrayItem","arrayArg","each","a","b","transformation","expectedPayload","transformedPayload"],"sources":["../../../../../src/__tests__/transformations/custom-transformations/transform-request-message.spec.ts"],"sourcesContent":["import { transformations } from '@wix/motion-edm-autogen-transformations-core';\nimport {\n  anObject,\n  aNumber,\n  aRandomItemFrom,\n  aString,\n} from '@wix/motion-runtime-test-context';\n\nimport { transformToRequestMessage } from '../../..';\n\nconst { JS_SINGLE_ARG_UNCHANGED } = transformations;\n\ndescribe('transforming JS function-arguments to a request JSON', () => {\n  describe('the passthrough transformation', () => {\n    test('returns the single object passed as argument', () => {\n      const object = anObject();\n      const functionArguments = [object];\n\n      const requestPayloadObject = transformToRequestMessage(\n        functionArguments,\n        JS_SINGLE_ARG_UNCHANGED,\n      );\n\n      expect(requestPayloadObject).toStrictEqual(object);\n    });\n\n    test('transforms an empty argument-list to an empty request object', () => {\n      const functionArguments = [];\n      const requestPayloadObject = transformToRequestMessage(\n        functionArguments,\n        JS_SINGLE_ARG_UNCHANGED,\n      );\n\n      expect(requestPayloadObject).toStrictEqual({});\n    });\n  });\n\n  describe('arguments-to-object transformation', () => {\n    const stringArg = aString();\n    const numericArg = aNumber();\n    const objectArg = anObject();\n    const objectKey = aRandomItemFrom(Object.keys(objectArg));\n    const objectValue = objectArg[objectKey];\n    const firstArrayItem = aString();\n    const lastArrayItemKey = aString();\n    const lastArrayItemValue = aString();\n    const lastArrayItem = { [lastArrayItemKey]: lastArrayItemValue };\n    const arrayArg = [firstArrayItem, lastArrayItem];\n\n    /* eslint-disable max-len */\n    test.each`\n      description                         | functionArguments          | transformation                                     | expectedPayload\n      ${'primitive arguments'}            | ${[stringArg, numericArg]} | ${{ a: '$[0]', b: '$[1]' }}                        | ${{ a: stringArg, b: numericArg }}\n      ${'object argument'}                | ${[stringArg, objectArg]}  | ${{ a: '$[0]', b: '$[1]' }}                        | ${{ a: stringArg, b: objectArg }}\n      ${'object argument - nested field'} | ${[stringArg, objectArg]}  | ${{ a: '$[0]', b: `$[1].${objectKey}` }}           | ${{ a: stringArg, b: objectValue }}\n      ${'array argument'}                 | ${[stringArg, arrayArg]}   | ${{ a: '$[0]', b: `$[1][0]` }}                     | ${{ a: stringArg, b: firstArrayItem }}\n      ${'array argument - nested field'}  | ${[stringArg, arrayArg]}   | ${{ a: '$[0]', b: `$[1][1].${lastArrayItemKey}` }} | ${{ a: stringArg, b: lastArrayItemValue }}\n    `(\n      '$description',\n      ({ functionArguments, transformation, expectedPayload }) => {\n        /* eslint-enable max-len */\n        const transformedPayload = transformToRequestMessage(\n          functionArguments,\n          transformation,\n        );\n\n        expect(transformedPayload).toStrictEqual(expectedPayload);\n      },\n    );\n  });\n});\n"],"mappings":"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"}