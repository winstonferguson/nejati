"use strict";

var _motionEdmAutogenTransformationsCore = require("@wix/motion-edm-autogen-transformations-core");
var _motionRuntimeTestContext = require("@wix/motion-runtime-test-context");
var _ = require("../../..");
const RESPONSE_OBJECT_UNCHANGED = _motionEdmAutogenTransformationsCore.transformations.RESPONSE_OBJECT_UNCHANGED;
describe('transforming a response JSON to a JS object', () => {
  describe('the passthrough transformation', () => {
    test('returns the object returned by the service as-is', () => {
      const responseObject = (0, _motionRuntimeTestContext.anObject)();
      const transformedReturnValue = (0, _.transformResponseMessage)(responseObject, RESPONSE_OBJECT_UNCHANGED);
      expect(transformedReturnValue).toStrictEqual(responseObject);
    });
  });
  describe('non-identity transformations', () => {
    const someString = (0, _motionRuntimeTestContext.aString)();
    const someNumber = (0, _motionRuntimeTestContext.aNumber)();
    const someObject = (0, _motionRuntimeTestContext.anObject)();
    const objectKey = (0, _motionRuntimeTestContext.aRandomItemFrom)(Object.keys(someObject));
    const objectValue = someObject[objectKey];
    const firstArrayItem = (0, _motionRuntimeTestContext.aString)();
    const lastArrayItemKey = (0, _motionRuntimeTestContext.aString)();
    const lastArrayItemValue = (0, _motionRuntimeTestContext.aString)();
    const lastArrayItem = {
      [lastArrayItemKey]: lastArrayItemValue
    };
    const someArray = [firstArrayItem, lastArrayItem];
    const responseObject = {
      someNumber,
      someString,
      someObject,
      someArray
    };
    describe('extracting a specific value from the response object', () => {
      /* eslint-disable max-len */
      test.each`
        description                     | transformation                          | expectedReturnValue
        ${'primitive value extraction'} | ${'$.someString'}                       | ${someString}
        ${'object extraction'}          | ${'$.someObject'}                       | ${someObject}
        ${'object property extraction'} | ${`$.someObject.${objectKey}`}          | ${objectValue}
        ${'entire array extraction'}    | ${`$.someArray`}                        | ${someArray}
        ${'array item'}                 | ${`$.someArray[0]`}                     | ${firstArrayItem}
        ${'array item nested field'}    | ${`$.someArray[1].${lastArrayItemKey}`} | ${lastArrayItemValue}
      `('extract a $description as a return value', ({
        transformation,
        expectedReturnValue
      }) => {
        /* eslint-enable max-len */
        const transformedReturnValue = (0, _.transformResponseMessage)(responseObject, transformation);
        expect(transformedReturnValue).toStrictEqual(expectedReturnValue);
      });
    });
    describe('mapping the response object to another object', () => {
      /* eslint-disable max-len */
      test.each`
        description                          | transformation                                                    | expectedReturnValue
        ${'primitive values'}                | ${{
        a: '$.someString',
        b: '$.someNumber'
      }}                       | ${{
        a: someString,
        b: someNumber
      }}
        ${'an array'}                        | ${{
        a: '$.someArray',
        b: '$.someNumber'
      }}                        | ${{
        a: someArray,
        b: someNumber
      }}
        ${'an array item'}                   | ${{
        a: '$.someArray[0]',
        b: `$.someArray[1]`
      }}                   | ${{
        a: firstArrayItem,
        b: lastArrayItem
      }}
        ${'a nested field of an array item'} | ${{
        a: '$.someString',
        b: `$.someArray[1].${lastArrayItemKey}`
      }} | ${{
        a: someString,
        b: lastArrayItemValue
      }}
        ${'an object'}                       | ${{
        a: '$.someObject',
        b: '$.someNumber'
      }}                       | ${{
        a: someObject,
        b: someNumber
      }}
        ${'an object property value'}        | ${{
        a: `$.someObject.${objectKey}`,
        b: '$.someNumber'
      }}          | ${{
        a: objectValue,
        b: someNumber
      }}
      `('map $description to the return-value object properties', ({
        transformation,
        expectedReturnValue
      }) => {
        /* eslint-enable max-len */
        const transformedPayload = (0, _.transformResponseMessage)(responseObject, transformation);
        expect(transformedPayload).toStrictEqual(expectedReturnValue);
      });
    });
  });
});
//# sourceMappingURL=transform-response-message.spec.js.map