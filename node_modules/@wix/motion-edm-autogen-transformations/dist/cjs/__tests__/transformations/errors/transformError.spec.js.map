{"version":3,"names":["_motionRuntimeTestContext","require","_dedentJs","_interopRequireDefault","_httpStatusCodes","_lodash","_","describe","description","aString","argumentNames","times","stableArgumentNames","message","httpStatus","aRandomItemFrom","expectedErrorCodes","requestId","aRequestId","test","each","undefined","anObject","details","ambassadorHTTPError","response","expect","transformError","toMatchObject","constructor","Error","code","transformation","a","b","c","fieldPath","errorCode","aNumber","validationError","fieldViolations","field","expectedMessage","dedent","d","anotherDescription","secret","name","value","fieldPathPrefix","set","plan","someField","aRandomApplicationErrorHttpStatusCode","_times","key1","key2","value1","value2","data","applicationError","statusText","getReasonPhrase","expectedCode","split","map","upperCase","join"],"sources":["../../../../../src/__tests__/transformations/errors/transformError.spec.ts"],"sourcesContent":["import {\n  anObject,\n  aNumber,\n  aRandomItemFrom,\n  aRequestId,\n  aString,\n} from '@wix/motion-runtime-test-context';\nimport dedent from 'dedent-js';\nimport { getReasonPhrase } from 'http-status-codes';\nimport { set, times, upperCase } from 'lodash';\n\nimport { transformError } from '../../..';\n\ndescribe('transformError', () => {\n  const description = aString();\n  const argumentNames = times(3, () => aString());\n  const stableArgumentNames = [`zzz${aString()}`, `yyy${aString()}`];\n  const message = aString();\n\n  describe('system errors', () => {\n    describe('server errors', () => {\n      const httpStatus = aRandomItemFrom([500, 503]);\n      const expectedErrorCodes = {\n        500: 'INTERNAL_SERVER_ERROR',\n        503: 'SERVICE_UNAVAILABLE',\n      };\n      const requestId = aRequestId();\n\n      /* eslint-disable max-len */\n      test.each`\n        details       | description\n        ${undefined}  | ${'does not exist'}\n        ${anObject()} | ${\"an object without 'validationError', 'applicationError', and a status code exists on the request\"}\n      `(\n        /* eslint-enable max-len */\n        'transforms the response object message property to a JS error when the details property $description',\n        ({ details }) => {\n          const ambassadorHTTPError = {\n            httpStatus,\n            response: { details, message },\n            requestId,\n          };\n\n          expect(transformError(ambassadorHTTPError)).toMatchObject({\n            constructor: Error,\n            message: `System error occurred, request-id: ${requestId}`,\n            requestId,\n            code: expectedErrorCodes[httpStatus],\n          });\n        },\n      );\n    });\n\n    describe('network errors (request-id does not exist, httpStatus is -1', () => {\n      test('omits the request-id from the message', () => {\n        // Based on this: https://github.com/wix-private/ambassador/blob/master/src/runtime/http.ts#L253\n        const ambassadorHTTPError = { httpStatus: -1 };\n\n        expect(transformError(ambassadorHTTPError)).toMatchObject({\n          constructor: Error,\n          message: 'System error occurred',\n          code: 'UNKNOWN',\n        });\n      });\n    });\n  });\n\n  describe('validation errors', () => {\n    test('transforms response.details.validationError.fieldViolations property to a JS error message', () => {\n      const transformation = { a: { b: { c: '$[1]', '*': '$[0]' } } };\n\n      const fieldPath = 'a.b.c';\n      const ambassadorHTTPError = {\n        httpStatus: 400,\n        response: {\n          message,\n          errorCode: aNumber(),\n          details: {\n            validationError: {\n              fieldViolations: [{ field: fieldPath, description }],\n            },\n          },\n        },\n      };\n\n      const expectedMessage = dedent`\n        message: 'INVALID_ARGUMENT: \"${argumentNames[1]}\" ${description}'\n        details:\n          validationError:\n            fieldViolations:\n              - field: ${argumentNames[1]}\n                description: ${description}`;\n\n      expect(\n        transformError(ambassadorHTTPError, transformation, argumentNames),\n      ).toMatchObject({\n        constructor: Error,\n        message: expectedMessage,\n        details: {\n          validationError: {\n            fieldViolations: [{ field: argumentNames[1], description }],\n          },\n        },\n      });\n    });\n\n    test('handles multiple field violations, sorted by transformed field name', () => {\n      const transformation = { a: { b: { c: '$[1]', d: '$[0]' } } };\n      const anotherDescription = aString();\n\n      const ambassadorHTTPError = {\n        httpStatus: 400,\n        response: {\n          message,\n          errorCode: aNumber(),\n          details: {\n            validationError: {\n              fieldViolations: [\n                { field: 'a.b.d', description },\n                { field: 'a.b.c', description: anotherDescription },\n              ],\n            },\n          },\n        },\n      };\n\n      /* eslint-disable max-len */\n      const expectedMessage = dedent`\n        message: 'INVALID_ARGUMENT: \"${stableArgumentNames[1]}\" ${anotherDescription}, \"${stableArgumentNames[0]}\" ${description}'\n        details:\n          validationError:\n            fieldViolations:\n              - field: ${stableArgumentNames[1]}\n                description: ${anotherDescription}\n              - field: ${stableArgumentNames[0]}\n                description: ${description}`;\n\n      expect(\n        transformError(\n          ambassadorHTTPError,\n          transformation,\n          stableArgumentNames,\n        ),\n      ).toMatchObject({\n        constructor: Error,\n        message: expectedMessage,\n        details: {\n          validationError: {\n            fieldViolations: [\n              {\n                field: stableArgumentNames[1],\n                description: anotherDescription,\n              },\n              { field: stableArgumentNames[0], description },\n            ],\n          },\n        },\n      });\n    });\n\n    test('handles complex transformations with nested paths', () => {\n      const fieldPath = 'secret.value';\n\n      const ambassadorHTTPError = {\n        httpStatus: 400,\n        response: {\n          message,\n          errorCode: aString(),\n          details: {\n            validationError: {\n              fieldViolations: [{ field: fieldPath, description }],\n            },\n          },\n        },\n      };\n      const transformation = {\n        secret: {\n          name: '$[0]',\n          value: '$[1].some.arg.field',\n          description: '$[2]',\n        },\n      };\n\n      const expectedMessage = dedent`\n        message: 'INVALID_ARGUMENT: \"${argumentNames[1]}.some.arg.field\" ${description}'\n        details:\n          validationError:\n            fieldViolations:\n              - field: ${argumentNames[1]}.some.arg.field\n                description: ${description}`;\n\n      expect(\n        transformError(ambassadorHTTPError, transformation, argumentNames),\n      ).toMatchObject({\n        constructor: Error,\n        message: expectedMessage,\n        details: {\n          validationError: {\n            fieldViolations: [\n              { field: `${argumentNames[1]}.some.arg.field`, description },\n            ],\n          },\n        },\n      });\n    });\n\n    test('handles the #wrap custom function', () => {\n      const fieldPathPrefix = 'some.field';\n\n      const ambassadorHTTPError = {\n        httpStatus: 400,\n        response: {\n          message,\n          errorCode: aString(),\n          details: {\n            validationError: {\n              fieldViolations: [\n                { field: `${fieldPathPrefix}.someValueWrapper`, description },\n              ],\n            },\n          },\n        },\n      };\n      const transformation = set(\n        {},\n        fieldPathPrefix,\n        '#wrap($[0].something, someValueWrapper)',\n      );\n\n      const expectedMessage = dedent`\n        message: 'INVALID_ARGUMENT: \"${argumentNames[0]}.something\" ${description}'\n        details:\n          validationError:\n            fieldViolations:\n              - field: ${argumentNames[0]}.something\n                description: ${description}`;\n\n      expect(\n        transformError(ambassadorHTTPError, transformation, argumentNames),\n      ).toMatchObject({\n        constructor: Error,\n        message: expectedMessage,\n        details: {\n          validationError: {\n            fieldViolations: [\n              { field: `${argumentNames[0]}.something`, description },\n            ],\n          },\n        },\n      });\n    });\n\n    test('handles nested spread operators', () => {\n      const ambassadorHTTPError = {\n        response: {\n          message: aString(),\n          details: {\n            validationError: {\n              fieldViolations: [\n                {\n                  field: 'plan.maxPurchasesPerBuyer',\n                  description,\n                },\n                {\n                  field: 'plan.someField',\n                  description,\n                },\n              ],\n            },\n          },\n        },\n      };\n\n      const transformation = {\n        plan: {\n          '*': '$[0]',\n          someField: '$[1]',\n        },\n      };\n\n      const expectedMessage = dedent`\n        message: 'INVALID_ARGUMENT: \"${stableArgumentNames[1]}\" ${description}, \"${stableArgumentNames[0]}.maxPurchasesPerBuyer\" ${description}'\n        details:\n          validationError:\n            fieldViolations:\n              - field: ${stableArgumentNames[1]}\n                description: ${description}\n              - field: ${stableArgumentNames[0]}.maxPurchasesPerBuyer\n                description: ${description}`;\n\n      expect(\n        transformError(\n          ambassadorHTTPError,\n          transformation,\n          stableArgumentNames,\n        ),\n      ).toMatchObject({\n        constructor: Error,\n        message: expectedMessage,\n        details: {\n          validationError: {\n            fieldViolations: [\n              { field: stableArgumentNames[1], description },\n              {\n                field: `${stableArgumentNames[0]}.maxPurchasesPerBuyer`,\n                description,\n              },\n            ],\n          },\n        },\n      });\n    });\n  });\n\n  describe('application errors', () => {\n    // According to https://bo.wix.com/wix-docs/rnd/platformization-guidelines/errors#platformization-guidelines_errors_4xx-errors\n    const aRandomApplicationErrorHttpStatusCode = () =>\n      aRandomItemFrom([400, 401, 403, 404, 408, 409, 428, 429, 499]);\n    const code = aString();\n\n    describe('when applicationError property exists', () => {\n      test('returns the application error description and code', () => {\n        const httpStatus = aRandomApplicationErrorHttpStatusCode();\n\n        const [key1, key2, value1, value2] = times(4, () => aString());\n        const data = { [key1]: value1, [key2]: value2 };\n\n        const ambassadorHTTPError = {\n          httpStatus,\n          response: {\n            message,\n            details: {\n              applicationError: {\n                description,\n                code,\n                data,\n              },\n            },\n          },\n        };\n\n        const expectedMessage = dedent`\n          message: '${message}: ${description}'\n          details:\n            applicationError:\n              description: ${description}\n              code: ${code}\n              data:\n                ${key1}: ${value1}\n                ${key2}: ${value2}`;\n\n        expect(transformError(ambassadorHTTPError)).toMatchObject({\n          constructor: Error,\n          message: expectedMessage,\n          details: {\n            applicationError: {\n              description,\n              code,\n              data,\n            },\n          },\n        });\n      });\n    });\n\n    describe('when applicationError is missing, http-status is a client-error status-code', () => {\n      const httpStatus = aRandomApplicationErrorHttpStatusCode();\n      const statusText = getReasonPhrase(httpStatus);\n      const expectedCode = statusText.split(' ').map(upperCase).join('_');\n\n      describe('when no message exists in the response', () => {\n        test('returns a description based on the status-code text only', () => {\n          const ambassadorHTTPError = { httpStatus };\n\n          const expectedMessage = dedent`\n            message: ${statusText}\n            details:\n              applicationError:\n                description: ${statusText}\n                code: ${expectedCode}\n                data: {}`;\n\n          expect(transformError(ambassadorHTTPError)).toMatchObject({\n            constructor: Error,\n            message: expectedMessage,\n            details: {\n              applicationError: {\n                description: statusText,\n                code: expectedCode,\n                data: {},\n              },\n            },\n          });\n        });\n      });\n\n      describe('when a message exists', () => {\n        test('returns the given http status and a default application error description and message', () => {\n          const ambassadorHTTPError = { httpStatus, response: { message } };\n\n          const expectedMessage = dedent`\n            message: ${message}\n            details:\n              applicationError:\n                description: ${statusText}\n                code: ${expectedCode}\n                data: {}`;\n\n          expect(transformError(ambassadorHTTPError)).toMatchObject({\n            constructor: Error,\n            message: expectedMessage,\n            details: {\n              applicationError: {\n                description: statusText,\n                code: expectedCode,\n                data: {},\n              },\n            },\n          });\n        });\n      });\n    });\n  });\n});\n"],"mappings":"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"}