"use strict";

var _motionRuntimeTestContext = require("@wix/motion-runtime-test-context");
var _lodash = require("lodash");
var _ = require("..");
describe('getQueryItemsTransformationPaths', () => {
  test.each`
    transformation                | description
    ${{}}                         | ${'empty'}
    ${{
    [(0, _motionRuntimeTestContext.aString)()]: (0, _motionRuntimeTestContext.aString)()
  }} | ${'no item transformation'}
    ${'$'}                        | ${'a string'}
  `('returns an empty object when transformation is $description', ({
    transformation
  }) => {
    expect((0, _.getQueryItemsTransformationPaths)(transformation)).toStrictEqual({});
  });
  test('collects top-level simple transformation keys', () => {
    const key = (0, _motionRuntimeTestContext.aString)();
    const jsonPath = '$.a.b.c';
    const transformation = {
      items: {
        '@path': '$',
        '@itemTransformation': {
          [key]: jsonPath
        }
      }
    };
    expect((0, _.getQueryItemsTransformationPaths)(transformation)).toStrictEqual({
      [key]: 'a.b.c'
    });
  });
  test('collects nested simple transformation keys', () => {
    const _times = (0, _lodash.times)(3, () => (0, _motionRuntimeTestContext.aString)()),
      key1 = _times[0],
      key2 = _times[1],
      key3 = _times[2];
    const jsonPath = '$.a.a.a';
    const expected = [key1, key2, key3].join('.');
    const transformation = {
      items: {
        '@path': '$',
        '@itemTransformation': {
          [key1]: {
            [key2]: {
              [key3]: jsonPath
            }
          }
        }
      }
    };
    expect((0, _.getQueryItemsTransformationPaths)(transformation)).toStrictEqual({
      [expected]: 'a.a.a'
    });
  });
});
//# sourceMappingURL=getQueryItemsTransformationPaths.spec.js.map