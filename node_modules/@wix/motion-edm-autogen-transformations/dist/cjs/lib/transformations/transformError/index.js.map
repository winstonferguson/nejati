{"version":3,"names":["_constantCase","require","_httpStatusCodes","_jsYaml","_interopRequireDefault","_lodash","_violationsWithRenamedFields","get","_","has","forOwn","isEqual","UNKNOWN_STATUS_CODE_TEST","MAX_YAML_LINE_WIDTH","CANCELLED_STATUS_CODE","CANCELLED_STATUS_CODE_STRING","toString","CANCELLED_STATUS_TEXT","toYamlString","object","yaml","dump","lineWidth","replace","ambassadorSafeStatusText","_maybeHttpStatus","getReasonPhrase","error","buildError","message","extraProperties","Error","value","key","undefined","isClientError","code","isValidationError","ambassadorHTTPError","isApplicationError","httpStatus","buildValidationError","transformation","argumentNames","fieldViolations","response","details","validationError","transformedFieldViolations","violationsWithRenamedFields","sortBy","map","field","description","join","buildApplicationError","statusText","hasEmptyDetails","applicationError","constantCase","data","combinedMessage","buildSystemError","requestId","transformError","exports"],"sources":["../../../../../src/lib/transformations/transformError/index.ts"],"sourcesContent":["import { constantCase } from 'constant-case';\nimport { getReasonPhrase } from 'http-status-codes';\nimport yaml from 'js-yaml';\nimport _ from 'lodash';\n\nimport { violationsWithRenamedFields } from './violationsWithRenamedFields';\n\nconst { get, has, forOwn, isEqual } = _;\n\nconst UNKNOWN_STATUS_CODE_TEST = 'Unknown';\n\nconst MAX_YAML_LINE_WIDTH = 1000;\n\nconst CANCELLED_STATUS_CODE = 499;\nconst CANCELLED_STATUS_CODE_STRING = CANCELLED_STATUS_CODE.toString();\nconst CANCELLED_STATUS_TEXT = 'Client Closed Request';\n\nconst toYamlString = (object: any) =>\n  yaml.dump(object, { lineWidth: MAX_YAML_LINE_WIDTH }).replace(/\\n$/, '');\n\nconst ambassadorSafeStatusText = (_maybeHttpStatus: string | number) => {\n  if (\n    _maybeHttpStatus === CANCELLED_STATUS_CODE ||\n    _maybeHttpStatus === CANCELLED_STATUS_CODE_STRING\n  ) {\n    return CANCELLED_STATUS_TEXT;\n  }\n\n  try {\n    return getReasonPhrase(_maybeHttpStatus);\n  } catch (error) {\n    return UNKNOWN_STATUS_CODE_TEST;\n  }\n};\n\nconst buildError = ({\n  message,\n  extraProperties = {},\n}: {\n  message: string;\n  extraProperties: object;\n}) => {\n  const error = new Error(message);\n\n  forOwn(extraProperties, (value, key) => {\n    if (value !== undefined) {\n      error[key] = value;\n    }\n  });\n\n  return error;\n};\n\nconst isClientError = (code: number): boolean => code >= 400 && code < 500;\n\nconst isValidationError = (ambassadorHTTPError: any) =>\n  has(ambassadorHTTPError, 'response.details.validationError');\n\nconst isApplicationError = (ambassadorHTTPError) =>\n  has(ambassadorHTTPError, 'response.details.applicationError') ||\n  isClientError(ambassadorHTTPError.httpStatus);\n\nconst buildValidationError = (\n  ambassadorHTTPError,\n  transformation,\n  argumentNames,\n) => {\n  const {\n    details: {\n      validationError: { fieldViolations },\n    },\n  } = ambassadorHTTPError.response;\n\n  const transformedFieldViolations = _(\n    violationsWithRenamedFields({\n      transformation,\n      fieldViolations,\n      argumentNames,\n    }),\n  )\n    .sortBy('field')\n    .value();\n\n  const message = `INVALID_ARGUMENT: ${transformedFieldViolations\n    .map(({ field, description }) => `\"${field}\" ${description}`)\n    .join(', ')}`;\n\n  const details = {\n    validationError: { fieldViolations: transformedFieldViolations },\n  };\n\n  return buildError({\n    message: toYamlString({ message, details }),\n    extraProperties: { details },\n  });\n};\n\nconst buildApplicationError = (ambassadorHTTPError) => {\n  const statusText = ambassadorSafeStatusText(ambassadorHTTPError.httpStatus);\n  const hasEmptyDetails = isEqual(\n    get(ambassadorHTTPError, 'response.details', {}),\n    {},\n  );\n\n  if (hasEmptyDetails) {\n    const details = {\n      applicationError: {\n        description: statusText,\n        code: constantCase(statusText),\n        data: {},\n      },\n    };\n\n    return buildError({\n      message: toYamlString({\n        message: get(ambassadorHTTPError, 'response.message', statusText),\n        details,\n      }),\n      extraProperties: { details },\n    });\n  }\n\n  const message = get(ambassadorHTTPError, 'response.message', statusText);\n  const description = get(\n    ambassadorHTTPError,\n    'response.details.applicationError.description',\n    statusText,\n  );\n  const code = get(\n    ambassadorHTTPError,\n    'response.details.applicationError.code',\n    constantCase(statusText),\n  );\n  const data = get(\n    ambassadorHTTPError,\n    'response.details.applicationError.data',\n    {},\n  );\n  const combinedMessage =\n    message === description ? message : `${message}: ${description}`;\n  const details = {\n    applicationError: {\n      description,\n      code,\n      data,\n    },\n  };\n\n  return buildError({\n    message: toYamlString({ message: combinedMessage, details }),\n    extraProperties: { details },\n  });\n};\n\nconst buildSystemError = (ambassadorHTTPError) => {\n  const code = constantCase(\n    ambassadorSafeStatusText(ambassadorHTTPError.httpStatus),\n  );\n  const message = ambassadorHTTPError.requestId\n    ? `System error occurred, request-id: ${ambassadorHTTPError.requestId}`\n    : 'System error occurred';\n\n  return buildError({\n    message,\n    extraProperties: {\n      requestId: ambassadorHTTPError.requestId,\n      code,\n    },\n  });\n};\n\n// See https://github.com/wix-private/ambassador/blob/master/src/runtime/http.ts#L10\nconst transformError = (\n  ambassadorHTTPError,\n  transformation: any = undefined,\n  argumentNames: any = undefined,\n) => {\n  switch (true) {\n    case isValidationError(ambassadorHTTPError):\n      return buildValidationError(\n        ambassadorHTTPError,\n        transformation,\n        argumentNames,\n      );\n    case isApplicationError(ambassadorHTTPError):\n      return buildApplicationError(ambassadorHTTPError);\n    default:\n      return buildSystemError(ambassadorHTTPError);\n  }\n};\nexport { transformError };\n"],"mappings":"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"}