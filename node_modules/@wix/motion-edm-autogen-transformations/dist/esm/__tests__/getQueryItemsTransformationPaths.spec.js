import { __makeTemplateObject } from "tslib";
import { aString } from '@wix/motion-runtime-test-context';
import { times } from 'lodash';
import { getQueryItemsTransformationPaths } from '..';
describe('getQueryItemsTransformationPaths', function () {
    var _a;
    test.each(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    transformation                | description\n    ", "                         | ", "\n    ", " | ", "\n    ", "                        | ", "\n  "], ["\n    transformation                | description\n    ", "                         | ", "\n    ", " | ", "\n    ", "                        | ", "\n  "])), {}, 'empty', (_a = {}, _a[aString()] = aString(), _a), 'no item transformation', '$', 'a string')('returns an empty object when transformation is $description', function (_a) {
        var transformation = _a.transformation;
        expect(getQueryItemsTransformationPaths(transformation)).toStrictEqual({});
    });
    test('collects top-level simple transformation keys', function () {
        var _a, _b;
        var key = aString();
        var jsonPath = '$.a.b.c';
        var transformation = {
            items: {
                '@path': '$',
                '@itemTransformation': (_a = {},
                    _a[key] = jsonPath,
                    _a),
            },
        };
        expect(getQueryItemsTransformationPaths(transformation)).toStrictEqual((_b = {},
            _b[key] = 'a.b.c',
            _b));
    });
    test('collects nested simple transformation keys', function () {
        var _a, _b, _c, _d;
        var _e = times(3, function () { return aString(); }), key1 = _e[0], key2 = _e[1], key3 = _e[2];
        var jsonPath = '$.a.a.a';
        var expected = [key1, key2, key3].join('.');
        var transformation = {
            items: {
                '@path': '$',
                '@itemTransformation': (_a = {},
                    _a[key1] = (_b = {},
                        _b[key2] = (_c = {},
                            _c[key3] = jsonPath,
                            _c),
                        _b),
                    _a),
            },
        };
        expect(getQueryItemsTransformationPaths(transformation)).toStrictEqual((_d = {},
            _d[expected] = 'a.a.a',
            _d));
    });
});
var templateObject_1;
//# sourceMappingURL=getQueryItemsTransformationPaths.spec.js.map