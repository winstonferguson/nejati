import { __makeTemplateObject } from "tslib";
import { transformations } from '@wix/motion-edm-autogen-transformations-core';
import { anObject, aNumber, aRandomItemFrom, aString, } from '@wix/motion-runtime-test-context';
import { transformToRequestMessage } from '../../..';
var JS_SINGLE_ARG_UNCHANGED = transformations.JS_SINGLE_ARG_UNCHANGED;
describe('transforming JS function-arguments to a request JSON', function () {
    describe('the passthrough transformation', function () {
        test('returns the single object passed as argument', function () {
            var object = anObject();
            var functionArguments = [object];
            var requestPayloadObject = transformToRequestMessage(functionArguments, JS_SINGLE_ARG_UNCHANGED);
            expect(requestPayloadObject).toStrictEqual(object);
        });
        test('transforms an empty argument-list to an empty request object', function () {
            var functionArguments = [];
            var requestPayloadObject = transformToRequestMessage(functionArguments, JS_SINGLE_ARG_UNCHANGED);
            expect(requestPayloadObject).toStrictEqual({});
        });
    });
    describe('arguments-to-object transformation', function () {
        var _a;
        var stringArg = aString();
        var numericArg = aNumber();
        var objectArg = anObject();
        var objectKey = aRandomItemFrom(Object.keys(objectArg));
        var objectValue = objectArg[objectKey];
        var firstArrayItem = aString();
        var lastArrayItemKey = aString();
        var lastArrayItemValue = aString();
        var lastArrayItem = (_a = {}, _a[lastArrayItemKey] = lastArrayItemValue, _a);
        var arrayArg = [firstArrayItem, lastArrayItem];
        /* eslint-disable max-len */
        test.each(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n      description                         | functionArguments          | transformation                                     | expectedPayload\n      ", "            | ", " | ", "                        | ", "\n      ", "                | ", "  | ", "                        | ", "\n      ", " | ", "  | ", "           | ", "\n      ", "                 | ", "   | ", "                     | ", "\n      ", "  | ", "   | ", " | ", "\n    "], ["\n      description                         | functionArguments          | transformation                                     | expectedPayload\n      ", "            | ", " | ", "                        | ", "\n      ", "                | ", "  | ", "                        | ", "\n      ", " | ", "  | ", "           | ", "\n      ", "                 | ", "   | ", "                     | ", "\n      ", "  | ", "   | ", " | ", "\n    "])), 'primitive arguments', [stringArg, numericArg], { a: '$[0]', b: '$[1]' }, { a: stringArg, b: numericArg }, 'object argument', [stringArg, objectArg], { a: '$[0]', b: '$[1]' }, { a: stringArg, b: objectArg }, 'object argument - nested field', [stringArg, objectArg], { a: '$[0]', b: "$[1].".concat(objectKey) }, { a: stringArg, b: objectValue }, 'array argument', [stringArg, arrayArg], { a: '$[0]', b: "$[1][0]" }, { a: stringArg, b: firstArrayItem }, 'array argument - nested field', [stringArg, arrayArg], { a: '$[0]', b: "$[1][1].".concat(lastArrayItemKey) }, { a: stringArg, b: lastArrayItemValue })('$description', function (_a) {
            var functionArguments = _a.functionArguments, transformation = _a.transformation, expectedPayload = _a.expectedPayload;
            /* eslint-enable max-len */
            var transformedPayload = transformToRequestMessage(functionArguments, transformation);
            expect(transformedPayload).toStrictEqual(expectedPayload);
        });
    });
});
var templateObject_1;
//# sourceMappingURL=transform-request-message.spec.js.map